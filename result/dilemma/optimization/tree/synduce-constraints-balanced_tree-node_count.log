Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (tr:tree), main (tr) = mainNew (tr)(rank : 0.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), main (tree1) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), main (tree1) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), if balanced (tree1) then spec (target (tree1)) else ZERO = if balanced (tree1) then targetNew (tree1) else ZERO

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction tree1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), if balanced (tree1) then spec (target (tree1)) else ZERO = if balanced (tree1) then targetNew (tree1) else ZERO

0 goal(s) more...

0 conjecture(s) more...
>>> induction tree1(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
if balanced (Leaf) then spec (target (Leaf)) else ZERO = if balanced (Leaf) then targetNew (Leaf) else ZERO

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
if balanced (Leaf) then spec (target (Leaf)) else ZERO = if balanced (Leaf) then targetNew (Leaf) else ZERO

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : if balanced (tree2) then spec (target (tree2)) else ZERO = if balanced (tree2) then targetNew (tree2) else ZERO
IH2 : if balanced (tree3) then spec (target (tree3)) else ZERO = if balanced (tree3) then targetNew (tree3) else ZERO
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if balanced (Node (nat1) (tree2) (tree3)) then spec (target (Node (nat1) (tree2) (tree3))) else ZERO = if balanced (Node (nat1) (tree2) (tree3)) then targetNew (Node (nat1) (tree2) (tree3)) else ZERO

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : if balanced (tree2) then spec (target (tree2)) else ZERO = if balanced (tree2) then targetNew (tree2) else ZERO
IH2 : if balanced (tree3) then spec (target (tree3)) else ZERO = if balanced (tree3) then targetNew (tree3) else ZERO
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if balanced (Node (nat1) (tree2) (tree3)) then spec (target (Node (nat1) (tree2) (tree3))) else ZERO = if balanced (Node (nat1) (tree2) (tree3)) then targetNew (Node (nat1) (tree2) (tree3)) else ZERO

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : if balanced (tree2) then spec (target (tree2)) else ZERO = if balanced (tree2) then targetNew (tree2) else ZERO
IH2 : if balanced (tree3) then spec (target (tree3)) else ZERO = if balanced (tree3) then targetNew (tree3) else ZERO
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if nat_eq (height (tree2)) (height (tree3)) then if balanced (tree2) then balanced (tree3) else false else false then spec (target (Node (nat1) (tree2) (tree3))) else ZERO = if if nat_eq (height (tree2)) (height (tree3)) then if balanced (tree2) then balanced (tree3) else false else false then targetNew (Node (nat1) (tree2) (tree3)) else ZERO

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case nat_eq (height (tree2)) (height (tree3))(rank:4.)
=================================================
Progress: 6


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : if balanced (tree2) then spec (target (tree2)) else ZERO = if balanced (tree2) then targetNew (tree2) else ZERO
IH2 : if balanced (tree3) then spec (target (tree3)) else ZERO = if balanced (tree3) then targetNew (tree3) else ZERO
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if nat_eq (height (tree2)) (height (tree3)) then if balanced (tree2) then balanced (tree3) else false else false then spec (target (Node (nat1) (tree2) (tree3))) else ZERO = if if nat_eq (height (tree2)) (height (tree3)) then if balanced (tree2) then balanced (tree3) else false else false then targetNew (Node (nat1) (tree2) (tree3)) else ZERO

0 goal(s) more...

0 conjecture(s) more...
>>> case nat_eq (height (tree2)) (height (tree3))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : if balanced (tree2) then spec (target (tree2)) else ZERO = if balanced (tree2) then targetNew (tree2) else ZERO
IH2 : if balanced (tree3) then spec (target (tree3)) else ZERO = if balanced (tree3) then targetNew (tree3) else ZERO
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
---------------------------------------
if if balanced (tree2) then balanced (tree3) else false then spec (target (Node (nat1) (tree2) (tree3))) else ZERO = if if balanced (tree2) then balanced (tree3) else false then targetNew (Node (nat1) (tree2) (tree3)) else ZERO

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case balanced (tree2)(rank:5.)
=================================================
Progress: 7


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : if balanced (tree2) then spec (target (tree2)) else ZERO = if balanced (tree2) then targetNew (tree2) else ZERO
IH2 : if balanced (tree3) then spec (target (tree3)) else ZERO = if balanced (tree3) then targetNew (tree3) else ZERO
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
---------------------------------------
if if balanced (tree2) then balanced (tree3) else false then spec (target (Node (nat1) (tree2) (tree3))) else ZERO = if if balanced (tree2) then balanced (tree3) else false then targetNew (Node (nat1) (tree2) (tree3)) else ZERO

1 goal(s) more...

0 conjecture(s) more...
>>> case balanced (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : if balanced (tree3) then spec (target (tree3)) else ZERO = if balanced (tree3) then targetNew (tree3) else ZERO
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
---------------------------------------
if balanced (tree3) then spec (target (Node (nat1) (tree2) (tree3))) else ZERO = if balanced (tree3) then targetNew (Node (nat1) (tree2) (tree3)) else ZERO

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case balanced (tree3)(rank:6.)
=================================================
Progress: 8


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : if balanced (tree3) then spec (target (tree3)) else ZERO = if balanced (tree3) then targetNew (tree3) else ZERO
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
---------------------------------------
if balanced (tree3) then spec (target (Node (nat1) (tree2) (tree3))) else ZERO = if balanced (tree3) then targetNew (Node (nat1) (tree2) (tree3)) else ZERO

2 goal(s) more...

0 conjecture(s) more...
>>> case balanced (tree3)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (targetNew (tree2)) (SUCC (ZERO))(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 3(rank:22.)
=================================================
Progress: 9


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (targetNew (tree2)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 1(rank:15.)
rewrite <- IH1 in goal at 2(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
=================================================
Progress: 10


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 11


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 0
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
case lq (targetNew (tree2)) (SUCC (ZERO))
parent
target (tree2)
lower
target(_)
upper
SUCC(plus(spec(_), spec(target(tree3))))
remove upper
target(tree2)
remove lower
target(_)
parent
targetNew (tree2)
lower
targetNew(_)
upper
plus(plus(_, _), SUCC(ZERO()))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 12


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:17.)
=================================================
Progress: 13


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:17.)
=================================================
Progress: 14


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 1(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
=================================================
Progress: 15


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
case lq (targetNew (tree2)) (SUCC (ZERO))
parent
target (tree2)
lower
target(_)
upper
SUCC(plus(spec(_), spec(target(tree3))))
remove upper
target(tree2)
remove lower
target(_)
parent
targetNew (tree2)
lower
targetNew(_)
upper
plus(plus(_, _), SUCC(ZERO()))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
=================================================
Progress: 16


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 1
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
case lq (targetNew (tree2)) (SUCC (ZERO))
parent
target (tree2)
lower
target(_)
upper
SUCC(plus(spec(_), spec(target(tree3))))
remove upper
target(tree2)
remove lower
target(_)
parent
targetNew (tree2)
lower
targetNew(_)
upper
plus(plus(_, _), SUCC(ZERO()))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) (spec (target (Leaf)))) = plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 17


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:18.)
=================================================
Progress: 18


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
case lq (targetNew (tree2)) (SUCC (ZERO))
parent
target (tree2)
lower
target(_)
upper
SUCC(plus(spec(_), spec(target(tree3))))
remove upper
target(tree2)
remove lower
target(_)
parent
targetNew (tree2)
lower
targetNew(_)
upper
plus(plus(_, _), SUCC(ZERO()))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (spec (target (Leaf)))) = plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 19


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:18.)
=================================================
Progress: 20


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 1
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (SUCC (ZERO)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)))) (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
case lq (targetNew (tree2)) (SUCC (ZERO))
parent
target (tree2)
lower
target(_)
upper
SUCC(plus(spec(_), spec(target(tree3))))
remove upper
target(tree2)
remove lower
target(_)
parent
targetNew (tree2)
lower
targetNew(_)
upper
plus(plus(_, _), SUCC(ZERO()))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 21


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:18.)
=================================================
Progress: 22


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 17.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:18.)
=================================================
Progress: 23


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 17.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:18.)
=================================================
Progress: 24


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (Leaf))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 25


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 26


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (Leaf))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 27


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (height (tree1)) (height (Leaf)) = true -> balanced (tree1) = true -> balanced (Leaf) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (Leaf)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 28


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (height (tree1)) (height (Leaf)) = true -> balanced (tree1) = true -> balanced (Leaf) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (Leaf))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 29


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (Leaf))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:19.)
=================================================
Progress: 30


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:19.)
=================================================
Progress: 31


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (Leaf))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:19.)
=================================================
Progress: 32


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (height (tree1)) (height (Leaf)) = true -> balanced (tree1) = true -> balanced (Leaf) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (Leaf)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (height (tree1)) (ZERO) = true -> balanced (tree1) = true -> true = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:18.)
=================================================
Progress: 33


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (height (tree1)) (height (Leaf)) = true -> balanced (tree1) = true -> balanced (Leaf) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (Leaf))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (height (tree1)) (ZERO) = true -> balanced (tree1) = true -> true = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:18.)
=================================================
Progress: 34


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (height (tree1)) (ZERO) = true -> balanced (tree1) = true -> true = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
---------------------------------------
forall (nat1:nat), balanced (tree1) = true -> true = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:18.)
=================================================
Progress: 35


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (height (tree1)) (ZERO) = true -> balanced (tree1) = true -> true = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
---------------------------------------
forall (nat1:nat), balanced (tree1) = true -> true = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:18.)
=================================================
Progress: 36


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
---------------------------------------
forall (nat1:nat), balanced (tree1) = true -> true = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
---------------------------------------
forall (nat1:nat), true = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:18.)
=================================================
Progress: 37


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
---------------------------------------
forall (nat1:nat), balanced (tree1) = true -> true = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
---------------------------------------
forall (nat1:nat), true = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:18.)
=================================================
Progress: 38


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
---------------------------------------
forall (nat1:nat), true = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:18.)
=================================================
Progress: 39


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
---------------------------------------
forall (nat1:nat), true = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:18.)
=================================================
Progress: 40


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond4(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:19.)
=================================================
Progress: 41


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond4(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:19.)
=================================================
Progress: 42


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (plus (nat1) (spec (target (Leaf)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19.)
=================================================
Progress: 43


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (plus (nat1) (spec (target (Leaf)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19.)
=================================================
Progress: 44


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (plus (nat1) (targetNew (Leaf))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19.)
=================================================
Progress: 45


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:18.)
=================================================
Progress: 46


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (SUCC (nat2))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 47


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (SUCC (nat2))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (plus (nat2) (SUCC (nat2))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:18.)
=================================================
Progress: 48


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (plus (nat2) (SUCC (nat2))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (plus (nat2) (nat2)) (SUCC (ZERO))) = SUCC (plus (plus (nat2) (SUCC (nat2))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) = SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
asdf
=================================================
Progress: 49


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:18.)
=================================================
Progress: 50


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (SUCC (nat2))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 51


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (SUCC (nat2))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (plus (nat2) (SUCC (nat2))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:18.)
=================================================
Progress: 52


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (plus (nat2) (SUCC (nat2))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (plus (nat2) (nat2)) (SUCC (ZERO))) = SUCC (plus (plus (nat2) (SUCC (nat2))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (ZERO))) = SUCC (plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)))
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
asdf
=================================================
Progress: 53


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (plus (nat1) (spec (target (Leaf)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:19.)
=================================================
Progress: 54


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (plus (nat1) (spec (target (Leaf)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:19.)
=================================================
Progress: 55


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (plus (nat1) (targetNew (Leaf))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:19.)
=================================================
Progress: 56


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:19.)
=================================================
Progress: 57


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:19.)
=================================================
Progress: 58


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:19.)
=================================================
Progress: 59


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:19.)
=================================================
Progress: 60


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:19.)
=================================================
Progress: 61


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:19.)
=================================================
Progress: 62


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:19.)
=================================================
Progress: 63


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:19.)
=================================================
Progress: 64


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:19.)
=================================================
Progress: 65


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond4(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:20.)
=================================================
Progress: 66


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond4(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:20.)
=================================================
Progress: 67


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond4(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:20.)
=================================================
Progress: 68


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 20.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:19.)
=================================================
Progress: 69


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:19.)
=================================================
Progress: 70


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:27.)
rewrite <- IH1 in goal at 0(rank:27.)
=================================================
Progress: 71


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 20.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:19.)
=================================================
Progress: 72


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:19.)
=================================================
Progress: 73


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:27.)
rewrite <- IH1 in goal at 0(rank:27.)
=================================================
Progress: 74


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 20.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:19.)
=================================================
Progress: 75


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:19.)
=================================================
Progress: 76


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:27.)
rewrite <- IH1 in goal at 0(rank:27.)
=================================================
Progress: 77


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 22.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (targetNew (tree2)) (SUCC (ZERO))(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
=================================================
Progress: 78


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (targetNew (tree2)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 3(rank:15.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
=================================================
Progress: 79


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 3(rank:23.)
=================================================
Progress: 80


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 81


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:14.)
induction tree1(rank:14.)
=================================================
Progress: 82


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (plus (ZERO) (spec (target (tree1)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 83


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (plus (ZERO) (spec (target (tree1)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (spec (target (tree1))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:7.)
=================================================
Progress: 84


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (spec (target (tree1))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
SUCC (spec (target (Leaf))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 85


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
SUCC (spec (target (Leaf))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (spec (target (tree2))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree3))) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (spec (target (Node (nat2) (tree2) (tree3)))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 86


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (spec (target (tree2))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree3))) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (spec (target (Node (nat2) (tree2) (tree3)))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (spec (target (tree2))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree3))) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree2))) (spec (target (tree3))))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 87


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (spec (target (Leaf)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 88


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (spec (target (Leaf)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 89


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 90


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (SUCC (nat2))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 91


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (SUCC (nat2))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (plus (nat2) (SUCC (nat2))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:6.)
=================================================
Progress: 92


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (plus (nat2) (SUCC (nat2))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (plus (nat2) (nat2)) (SUCC (ZERO))) = SUCC (plus (plus (nat2) (SUCC (nat2))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) = plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (plus (SUCC (SUCC (ZERO))) (ZERO))) = SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO)))
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
asdf
=================================================
Progress: 93


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (spec (target (tree2))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree3))) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree2))) (spec (target (tree3))))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (spec (target (tree2))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree3))) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree2))) (spec (target (tree3))))) = SUCC (spec (target (tree2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (spec (target (Leaf))))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (spec (target (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))))) = spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (spec (target (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (Leaf)) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (Leaf)) (Leaf))))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
parent
target (tree2)
lower
target(_)
upper
SUCC(SUCC(plus(spec(_), spec(target(tree3)))))
remove upper
target(tree2)
remove lower
target(_)
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Node (ZERO) (Leaf) (Leaf)))))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)))) (spec (target (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf))))))) = SUCC (ZERO)
asdf
=================================================
Progress: 94


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (spec (target (tree2))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree3))) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree2))) (spec (target (tree3))))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (tree1)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (spec (target (tree2))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree3))) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree2))) (spec (target (tree3))))) = SUCC (spec (target (tree3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
parent
target (tree2)
lower
target(_)
upper
SUCC(SUCC(plus(spec(_), spec(target(tree3)))))
remove upper
target(tree2)
remove lower
target(_)
parent
target (tree3)
lower
target(_)
upper
SUCC(spec(_))
remove upper
target(tree3)
remove lower
target(tree3)
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (SUCC (ZERO))))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))))) = spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
parent
target (tree2)
lower
target(_)
upper
SUCC(SUCC(plus(spec(_), spec(target(tree3)))))
remove upper
target(tree2)
remove lower
target(_)
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Leaf))))) = SUCC (ZERO)
asdf
=================================================
Progress: 95


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 3(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 3
Prop: SUCC (plus (ZERO) (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf)))))) = plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (SUCC (ZERO)) (spec (target (Leaf)))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (spec (target (Node (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf)) (Leaf))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 96


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:18.)
=================================================
Progress: 97


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (Leaf)))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 98


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (Leaf)))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:19.)
=================================================
Progress: 99


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (plus (nat1) (spec (target (Leaf)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19.)
=================================================
Progress: 100


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (plus (nat1) (spec (target (Leaf)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:19.)
=================================================
Progress: 101


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:19.)
=================================================
Progress: 102


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:19.)
=================================================
Progress: 103


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:19.)
=================================================
Progress: 104


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond4(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:20.)
=================================================
Progress: 105


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 20.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:19.)
=================================================
Progress: 106


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:19.)
=================================================
Progress: 107


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:27.)
rewrite <- IH1 in goal at 0(rank:27.)
=================================================
Progress: 108


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 22.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (targetNew (tree2)) (SUCC (ZERO))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 3(rank:22.)
=================================================
Progress: 109


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (targetNew (tree2)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 1(rank:15.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
=================================================
Progress: 110


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 111


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 0
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf))) (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 112


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:14.)
induction tree1(rank:14.)
=================================================
Progress: 113


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (plus (ZERO) (targetNew (tree1))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 114


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (plus (ZERO) (targetNew (tree1))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (targetNew (tree1)) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:7.)
=================================================
Progress: 115


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (targetNew (tree1)) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
SUCC (targetNew (Leaf)) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 116


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
SUCC (targetNew (Leaf)) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (targetNew (Node (nat2) (tree2) (tree3))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 117


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (targetNew (Node (nat2) (tree2) (tree3))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case lq (targetNew (tree2)) (SUCC (ZERO))(rank:7.)
rewrite <- IH1 in goal at 3(rank:14.)
rewrite <- IH2 in goal at 3(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
=================================================
Progress: 118


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree2)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:15.)
rewrite <- IH2 in goal at 2(rank:15.)
rewrite <- IH2 in goal at 1(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 119


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (targetNew (Leaf))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 120


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (targetNew (Leaf))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 121


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 122


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (SUCC (nat2))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 123


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (SUCC (nat2))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (plus (nat2) (SUCC (nat2))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:6.)
=================================================
Progress: 124


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (plus (nat2) (SUCC (nat2))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (plus (nat2) (nat2)) (SUCC (ZERO))) = SUCC (plus (plus (nat2) (SUCC (nat2))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (ZERO))) = SUCC (plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)))
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
asdf
=================================================
Progress: 125


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 3(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))) = SUCC (targetNew (tree2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (targetNew (tree2)) (SUCC (ZERO))(rank:7.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
=================================================
Progress: 126


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))) = SUCC (targetNew (tree2))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree2)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 127


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 3(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))) = SUCC (targetNew (tree3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (targetNew (tree2)) (SUCC (ZERO))(rank:7.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
=================================================
Progress: 128


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))) = SUCC (targetNew (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree2)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 129


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 130


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 1
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = plus (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (targetNew (Leaf))) = plus (plus (SUCC (SUCC (ZERO))) (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))))) (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
=================================================
Progress: 131


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 132


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)) (Leaf))))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
case lq (targetNew (tree2)) (SUCC (ZERO))
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 133


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 134


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
previous tactics
simpl in goal
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH2 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
case lq (targetNew (tree2)) (SUCC (ZERO))
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 135


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (if lq (spec (target (tree2))) (SUCC (ZERO)) then SUCC (ZERO) else spec (target (tree2)))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (spec (target (tree2))) (SUCC (ZERO))(rank:7.)
=================================================
Progress: 136


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (if lq (spec (target (tree2))) (SUCC (ZERO)) then SUCC (ZERO) else spec (target (tree2)))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (spec (target (tree2))) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:23.)
rewrite IH1 in goal at 2(rank:23.)
rewrite IH1 in goal at 3(rank:23.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH1 in goal at 1(rank:23.)
=================================================
Progress: 137


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 22.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree2)) (SUCC (ZERO))(rank:7.)
=================================================
Progress: 138


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (targetNew (tree2)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
rewrite IH1 in goal at 1(rank:23.)
=================================================
Progress: 139


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:23.)
rewrite IH1 in goal at 1(rank:23.)
rewrite IH1 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
=================================================
Progress: 140


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (spec (target (Leaf)))) = plus (plus (SUCC (SUCC (ZERO))) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (targetNew (Leaf))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))) (SUCC (ZERO))
=================================================
Progress: 141


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 22.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree2)) (SUCC (ZERO))(rank:7.)
=================================================
Progress: 142


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (targetNew (tree2)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:15.)
rewrite IH1 in goal at 1(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
rewrite IH1 in goal at 2(rank:23.)
rewrite IH2 in goal at 0(rank:23.)
=================================================
Progress: 143


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 144


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 0
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
=================================================
Progress: 145


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 146


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (SUCC (ZERO)) (spec (target (Leaf)))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 1
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (Leaf))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)) (Leaf))))) = plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))))) = plus (plus (SUCC (ZERO)) (spec (target (Leaf)))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 147


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:18.)
=================================================
Progress: 148


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 149


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
rewrite IH2 in goal at 0
Prop: SUCC (plus (ZERO) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
=================================================
Progress: 150


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (Leaf)))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 151


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (Leaf)))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:19.)
=================================================
Progress: 152


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (plus (nat1) (targetNew (Leaf))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19.)
=================================================
Progress: 153


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (plus (nat1) (targetNew (Leaf))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:19.)
=================================================
Progress: 154


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:19.)
=================================================
Progress: 155


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:19.)
=================================================
Progress: 156


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:19.)
=================================================
Progress: 157


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond4(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:20.)
=================================================
Progress: 158


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 20.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:19.)
=================================================
Progress: 159


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:19.)
=================================================
Progress: 160


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (spec (target (tree1)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:27.)
rewrite <- IH1 in goal at 0(rank:27.)
=================================================
Progress: 161


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 3(rank : 22.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (spec (target (tree2))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (spec (target (tree2))) (SUCC (ZERO))(rank:7.)
=================================================
Progress: 162


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (spec (target (tree2))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (spec (target (tree2))) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 1(rank:15.)
rewrite <- IH1 in goal at 2(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
=================================================
Progress: 163


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 164


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite IH1 in goal at 0
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf))))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (SUCC (ZERO)))) (spec (target (Leaf)))) = plus (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 165


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:17.)
=================================================
Progress: 166


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:17.)
=================================================
Progress: 167


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 1(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
=================================================
Progress: 168


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
=================================================
Progress: 169


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite <- IH1 in goal at 1
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 170


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:18.)
=================================================
Progress: 171


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf))))))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 172


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:18.)
=================================================
Progress: 173


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 1
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (targetNew (Leaf))) = plus (plus (SUCC (SUCC (ZERO))) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (spec (target (Leaf)))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 174


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:18.)
=================================================
Progress: 175


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 17.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:18.)
=================================================
Progress: 176


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 17.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:18.)
=================================================
Progress: 177


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (spec (target (Leaf))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (Leaf))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 178


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (spec (target (Leaf))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 179


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (spec (target (Leaf))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (Leaf))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 180


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (height (tree1)) (height (Leaf)) = true -> balanced (tree1) = true -> balanced (Leaf) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (Leaf)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 181


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (height (tree1)) (height (Leaf)) = true -> balanced (tree1) = true -> balanced (Leaf) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (Leaf))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 182


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (spec (target (Leaf))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (Leaf))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:19.)
=================================================
Progress: 183


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (spec (target (Leaf))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:19.)
=================================================
Progress: 184


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (spec (target (Leaf))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (Leaf))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:19.)
=================================================
Progress: 185


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (height (tree1)) (height (Leaf)) = true -> balanced (tree1) = true -> balanced (Leaf) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (Leaf)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (height (tree1)) (ZERO) = true -> balanced (tree1) = true -> true = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:18.)
=================================================
Progress: 186


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (height (tree1)) (height (Leaf)) = true -> balanced (tree1) = true -> balanced (Leaf) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (Leaf))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (height (tree1)) (ZERO) = true -> balanced (tree1) = true -> true = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:18.)
=================================================
Progress: 187


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (height (tree1)) (ZERO) = true -> balanced (tree1) = true -> true = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
---------------------------------------
forall (nat1:nat), balanced (tree1) = true -> true = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:18.)
=================================================
Progress: 188


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (height (tree1)) (ZERO) = true -> balanced (tree1) = true -> true = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
---------------------------------------
forall (nat1:nat), balanced (tree1) = true -> true = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:18.)
=================================================
Progress: 189


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
---------------------------------------
forall (nat1:nat), balanced (tree1) = true -> true = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
---------------------------------------
forall (nat1:nat), true = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:18.)
=================================================
Progress: 190


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
---------------------------------------
forall (nat1:nat), balanced (tree1) = true -> true = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
---------------------------------------
forall (nat1:nat), true = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:18.)
=================================================
Progress: 191


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
---------------------------------------
forall (nat1:nat), true = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:18.)
=================================================
Progress: 192


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
---------------------------------------
forall (nat1:nat), true = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:18.)
=================================================
Progress: 193


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond4(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (spec (target (tree1))) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:19.)
=================================================
Progress: 194


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond4(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (spec (target (tree1))) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:19.)
=================================================
Progress: 195


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (plus (nat1) (spec (target (Leaf)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19.)
=================================================
Progress: 196


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (plus (nat1) (spec (target (Leaf)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19.)
=================================================
Progress: 197


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (plus (nat1) (targetNew (Leaf))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19.)
=================================================
Progress: 198


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (spec (target (tree1))) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (spec (target (tree1))) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:18.)
=================================================
Progress: 199


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (spec (target (tree1))) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (spec (target (tree1))) (SUCC (ZERO)) = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (SUCC (nat2))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 200


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (spec (target (tree1))) (SUCC (ZERO)) = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (SUCC (nat2))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (spec (target (tree1))) (SUCC (ZERO)) = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (plus (nat2) (SUCC (nat2))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:18.)
=================================================
Progress: 201


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (spec (target (tree1))) (SUCC (ZERO)) = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (plus (nat2) (SUCC (nat2))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (spec (target (tree1))) (SUCC (ZERO)) = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (plus (nat2) (nat2)) (SUCC (ZERO))) = SUCC (plus (plus (nat2) (SUCC (nat2))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (ZERO)) = plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO))
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
asdf
=================================================
Progress: 202


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (spec (target (tree1))) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (spec (target (tree1))) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:18.)
=================================================
Progress: 203


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (spec (target (tree1))) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (spec (target (tree1))) (SUCC (ZERO)) = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (SUCC (nat2))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 204


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (spec (target (tree1))) (SUCC (ZERO)) = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (SUCC (nat2))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (spec (target (tree1))) (SUCC (ZERO)) = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (plus (nat2) (SUCC (nat2))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:18.)
=================================================
Progress: 205


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (spec (target (tree1))) (SUCC (ZERO)) = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (plus (nat2) (SUCC (nat2))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
tree1 : tree
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : nat_eq (height (tree1)) (ZERO) = true
Cond2 : balanced (tree1) = true
Cond3 : true = true
Cond4 : lq (spec (target (tree1))) (SUCC (ZERO)) = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (nat2)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (plus (nat2) (nat2)) (SUCC (ZERO))) = SUCC (plus (plus (nat2) (SUCC (nat2))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (ZERO)) = plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO))
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))
asdf
=================================================
Progress: 206


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (plus (nat1) (spec (target (Leaf)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:19.)
=================================================
Progress: 207


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (plus (nat1) (spec (target (Leaf)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:19.)
=================================================
Progress: 208


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (plus (nat1) (targetNew (Leaf))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:19.)
=================================================
Progress: 209


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:19.)
=================================================
Progress: 210


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:19.)
=================================================
Progress: 211


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:19.)
=================================================
Progress: 212


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:19.)
=================================================
Progress: 213


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:19.)
=================================================
Progress: 214


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:19.)
=================================================
Progress: 215


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:19.)
=================================================
Progress: 216


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:19.)
=================================================
Progress: 217


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:19.)
=================================================
Progress: 218


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond4(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:20.)
=================================================
Progress: 219


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond4(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:20.)
=================================================
Progress: 220


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond4(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:20.)
=================================================
Progress: 221


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 20.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:19.)
=================================================
Progress: 222


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:19.)
=================================================
Progress: 223


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:27.)
rewrite <- IH1 in goal at 0(rank:27.)
=================================================
Progress: 224


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 20.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:19.)
=================================================
Progress: 225


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:19.)
=================================================
Progress: 226


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:27.)
rewrite <- IH1 in goal at 0(rank:27.)
=================================================
Progress: 227


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 20.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:19.)
=================================================
Progress: 228


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:19.)
=================================================
Progress: 229


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:27.)
rewrite <- IH1 in goal at 0(rank:27.)
=================================================
Progress: 230


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 22.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree2)) (SUCC (ZERO))(rank:7.)
=================================================
Progress: 231


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (targetNew (tree2)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 3(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 232


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (if lq (spec (target (tree2))) (SUCC (ZERO)) then SUCC (ZERO) else spec (target (tree2)))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (spec (target (tree2))) (SUCC (ZERO))(rank:7.)
=================================================
Progress: 233


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (if lq (spec (target (tree2))) (SUCC (ZERO)) then SUCC (ZERO) else spec (target (tree2)))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (spec (target (tree2))) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:15.)
rewrite IH1 in goal at 3(rank:15.)
rewrite IH1 in goal at 2(rank:23.)
rewrite <- IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 1(rank:23.)
=================================================
Progress: 234


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 235


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (ZERO) (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Leaf)))) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (Leaf)))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (spec (target (Leaf)))) = plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite IH1 in goal at 0
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
=================================================
Progress: 236


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 3(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 237


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite IH1 in goal at 3
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite IH1 in goal at 3
Prop: SUCC (plus (ZERO) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (SUCC (ZERO)))) (targetNew (Leaf))) = plus (plus (SUCC (SUCC (SUCC (ZERO)))) (targetNew (Leaf))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (targetNew (Leaf))) = plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (targetNew (Leaf))) = plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 238


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction nat1(rank:14.)
induction tree1(rank:14.)
induction tree2(rank:14.)
=================================================
Progress: 239


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (plus (ZERO) (spec (target (tree2)))) = plus (plus (ZERO) (targetNew (tree1))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 240


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (plus (ZERO) (spec (target (tree2)))) = plus (plus (ZERO) (targetNew (tree1))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (spec (target (tree2))) = plus (targetNew (tree1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction tree1(rank:15.)
induction tree2(rank:15.)
=================================================
Progress: 241


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (Leaf))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 242


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (Leaf))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:15.)
induction tree2(rank:15.)
=================================================
Progress: 243


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (Leaf)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 244


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (Leaf)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:15.)
induction tree1(rank:15.)
=================================================
Progress: 245


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 1(rank:23.)
rewrite IH1 in goal at 2(rank:23.)
=================================================
Progress: 246


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (spec (target (tree2))) = plus (targetNew (tree1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), SUCC (spec (target (tree2))) = plus (targetNew (Leaf)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 247


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), SUCC (spec (target (tree2))) = plus (targetNew (Leaf)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), SUCC (spec (target (tree2))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 248


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), SUCC (spec (target (tree2))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (spec (target (Leaf))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 249


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (spec (target (Leaf))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (spec (target (Node (nat2) (tree3) (tree4)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 250


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (spec (target (Node (nat2) (tree3) (tree4)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:15.)
=================================================
Progress: 251


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (spec (target (tree2))) = plus (targetNew (tree1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (tree1:tree), SUCC (spec (target (Leaf))) = plus (targetNew (tree1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 252


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (tree1:tree), SUCC (spec (target (Leaf))) = plus (targetNew (tree1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (tree1:tree), SUCC (ZERO) = plus (targetNew (tree1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 253


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (tree1:tree), SUCC (ZERO) = plus (targetNew (tree1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
Base3 : tree1 = Leaf
---------------------------------------
SUCC (ZERO) = plus (targetNew (Leaf)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 254


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
Base3 : tree1 = Leaf
---------------------------------------
SUCC (ZERO) = plus (targetNew (Leaf)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (targetNew (Node (nat2) (tree3) (tree4))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 255


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (targetNew (Node (nat2) (tree3) (tree4))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:8.)
=================================================
Progress: 256


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
parent
targetNew (tree3)
lower
targetNew(_)
upper
plus(plus(plus(_, _), SUCC(ZERO())), SUCC(ZERO()))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
asdf
=================================================
Progress: 257


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), SUCC (plus (ZERO) (spec (target (tree2)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 258


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), SUCC (plus (ZERO) (spec (target (tree2)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), SUCC (spec (target (tree2))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 259


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), SUCC (spec (target (tree2))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (spec (target (Leaf))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 260


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (spec (target (Leaf))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (spec (target (Node (nat2) (tree3) (tree4)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 261


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (spec (target (Node (nat2) (tree3) (tree4)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:15.)
=================================================
Progress: 262


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (spec (target (Leaf)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 263


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (spec (target (Leaf)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 264


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 265


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 266


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 267


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (targetNew (tree1))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 268


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (targetNew (tree1))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (ZERO) = plus (targetNew (tree1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 269


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (ZERO) = plus (targetNew (tree1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
Base3 : tree1 = Leaf
---------------------------------------
SUCC (ZERO) = plus (targetNew (Leaf)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 270


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
Base3 : tree1 = Leaf
---------------------------------------
SUCC (ZERO) = plus (targetNew (Leaf)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (targetNew (Node (nat2) (tree3) (tree4))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 271


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (targetNew (Node (nat2) (tree3) (tree4))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:8.)
=================================================
Progress: 272


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
parent
targetNew (tree3)
lower
targetNew(_)
upper
plus(plus(plus(_, _), SUCC(ZERO())), SUCC(ZERO()))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
asdf
=================================================
Progress: 273


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (Leaf))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 274


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (Leaf))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 275


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 276


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 277


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 278


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (spec (target (Leaf))))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))))) = spec (target (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (spec (target (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
parent
target (tree3)
lower
target(_)
upper
SUCC(SUCC(plus(spec(_), spec(target(tree4)))))
remove upper
target(tree3)
remove lower
target(_)
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
asdf
=================================================
Progress: 279


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
parent
target (tree3)
lower
target(_)
upper
SUCC(SUCC(plus(spec(_), spec(target(tree4)))))
remove upper
target(tree3)
remove lower
target(_)
parent
target (tree4)
lower
target(_)
upper
SUCC(spec(_))
remove upper
target(tree4)
remove lower
target(tree4)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (spec (target (Node (ZERO) (Leaf) (Leaf))))
asdf
previous tactics
simpl in goal
parent
target (tree3)
lower
target(_)
upper
SUCC(SUCC(plus(spec(_), spec(target(tree4)))))
remove upper
target(tree3)
remove lower
target(_)
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
asdf
=================================================
Progress: 280


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
Prop: SUCC (SUCC (plus (SUCC (SUCC (ZERO))) (spec (target (Leaf))))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (spec (target (Leaf))))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (spec (target (Leaf))))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (SUCC (SUCC (ZERO))) (spec (target (Leaf))))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)))) (spec (target (Leaf)))) = spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
parent
target (tree3)
lower
target(_)
upper
SUCC(SUCC(plus(spec(_), spec(target(tree4)))))
remove upper
target(tree3)
remove lower
target(_)
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
asdf
=================================================
Progress: 281


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
parent
target (tree3)
lower
target(_)
upper
SUCC(SUCC(plus(spec(_), spec(target(tree4)))))
remove upper
target(tree3)
remove lower
target(_)
parent
target (tree4)
lower
target(_)
upper
SUCC(spec(_))
remove upper
target(tree4)
remove lower
target(tree4)
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (SUCC (SUCC (SUCC (ZERO)))))) = SUCC (SUCC (SUCC (SUCC (ZERO))))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = spec (target (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
parent
target (tree3)
lower
target(_)
upper
SUCC(SUCC(plus(spec(_), spec(target(tree4)))))
remove upper
target(tree3)
remove lower
target(_)
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))) (spec (target (Leaf))))) = SUCC (ZERO)
asdf
=================================================
Progress: 282


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO))) = SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 283


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO))) = SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (spec (target (Node (nat2) (tree3) (tree4))))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 284


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (spec (target (Node (nat2) (tree3) (tree4))))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:14.)
induction nat1(rank:15.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 285


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:14.)
induction nat1(rank:15.)
=================================================
Progress: 286


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = SUCC (plus (nat1) (spec (target (tree3))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 287


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = SUCC (plus (nat1) (spec (target (tree3))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = SUCC (plus (ZERO) (spec (target (tree3))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 288


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = SUCC (plus (ZERO) (spec (target (tree3))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 289


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 290


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))) = spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = SUCC (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))
asdf
previous tactics
simpl in goal
rewrite IH2 in goal at 0
Prop: SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = spec (target (Leaf))
Prop: SUCC (plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))
asdf
previous tactics
simpl in goal
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (spec (target (Leaf))))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (SUCC (SUCC (ZERO))) (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Leaf)))) = spec (target (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (spec (target (Leaf)))) = spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))))))) = SUCC (spec (target (Leaf)))
asdf
=================================================
Progress: 291


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = SUCC (plus (nat1) (spec (target (tree4))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 292


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = SUCC (plus (nat1) (spec (target (tree4))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = SUCC (plus (ZERO) (spec (target (tree4))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 293


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = SUCC (plus (ZERO) (spec (target (tree4))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 294


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 295


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (spec (target (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (ZERO)) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = spec (target (Leaf))
Prop: SUCC (plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))))) = SUCC (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (spec (target (Node (ZERO) (Leaf) (Leaf))))
asdf
=================================================
Progress: 296


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = SUCC (plus (nat1) (spec (target (tree3))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 297


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = SUCC (plus (nat1) (spec (target (tree3))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = SUCC (plus (ZERO) (spec (target (tree3))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 298


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = SUCC (plus (ZERO) (spec (target (tree3))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7.)
=================================================
Progress: 299


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 300


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (spec (target (Leaf))))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))))) = spec (target (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))) = SUCC (SUCC (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = spec (target (Leaf))
Prop: SUCC (plus (plus (spec (target (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))))
Prop: SUCC (plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (plus (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))))
asdf
previous tactics
simpl in goal
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))))) = spec (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (spec (target (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
asdf
=================================================
Progress: 301


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO)))) = SUCC (plus (nat1) (spec (target (tree3))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 302


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO)))) = SUCC (plus (nat1) (spec (target (tree3))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO)))) = SUCC (plus (ZERO) (spec (target (tree3))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 303


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO)))) = SUCC (plus (ZERO) (spec (target (tree3))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 304


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO)))) = SUCC (plus (nat1) (spec (target (tree4))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:15.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 305


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO))) = SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 306


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO))) = SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (Node (nat2) (tree3) (tree4)))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 307


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (Node (nat2) (tree3) (tree4)))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 308


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
induction nat1(rank:16.)
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 309


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:7.)
=================================================
Progress: 310


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 2(rank:15.)
rewrite <- IH1 in goal at 1(rank:23.)
induction nat1(rank:16.)
rewrite <- IH1 in goal at 0(rank:23.)
=================================================
Progress: 311


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:7.)
=================================================
Progress: 312


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:15.)
induction nat1(rank:16.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 313


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 314


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 315


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 316


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = ZERO
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = ZERO
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = ZERO
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf))))))) = SUCC (ZERO)
asdf
=================================================
Progress: 317


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 318


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 319


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO)))) = SUCC (plus (nat1) (spec (target (tree4))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO)))) = SUCC (plus (ZERO) (spec (target (tree4))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 320


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO)))) = SUCC (plus (ZERO) (spec (target (tree4))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 321


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 2(rank:15.)
induction nat1(rank:16.)
=================================================
Progress: 322


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
induction nat1(rank:16.)
=================================================
Progress: 323


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:15.)
induction nat1(rank:16.)
rewrite IH2 in goal at 2(rank:23.)
=================================================
Progress: 324


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
rewrite IH2 in goal at 0(rank:23.)
=================================================
Progress: 325


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction nat1(rank:16.)
rewrite IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 326


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
rewrite IH2 in goal at 0(rank:23.)
=================================================
Progress: 327


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 328


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 329


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 330


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 331


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 332


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 333


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 334


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 335


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 336


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 337


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 338


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 339


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 340


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 341


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 342


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
simpl in goal
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 343


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 344


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 345


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 346


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 347


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 348


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 349


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 350


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
simpl in goal
Prop: plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (SUCC (ZERO))) (ZERO)) (SUCC (ZERO)))
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 351


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 352


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 353


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 354


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 355


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 356


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 357


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 358


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 359


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 360


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (Leaf)) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 361


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 362


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 363


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 22.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree2)) (SUCC (ZERO))(rank:7.)
=================================================
Progress: 364


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (targetNew (tree2)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:23.)
rewrite IH1 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite IH1 in goal at 1(rank:23.)
=================================================
Progress: 365


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 22.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree2)) (SUCC (ZERO))(rank:7.)
=================================================
Progress: 366


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (targetNew (tree2)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:15.)
rewrite IH1 in goal at 2(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 1(rank:15.)
=================================================
Progress: 367


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 368


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (spec (target (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf))))) = plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (SUCC (SUCC (ZERO))))) (spec (target (Leaf)))) = plus (plus (SUCC (SUCC (SUCC (SUCC (ZERO))))) (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 0
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (SUCC (ZERO)))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))) (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 369


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:18.)
=================================================
Progress: 370


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 371


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 1
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (ZERO) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 1
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = plus (plus (SUCC (ZERO)) (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (spec (target (Leaf)))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
=================================================
Progress: 372


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 373


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 2
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Leaf))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (targetNew (Leaf))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 374


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction nat1(rank:14.)
induction tree1(rank:14.)
induction tree2(rank:14.)
=================================================
Progress: 375


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (plus (ZERO) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 376


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (plus (ZERO) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (targetNew (tree2)) = plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction tree1(rank:15.)
induction tree2(rank:15.)
=================================================
Progress: 377


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 378


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:15.)
induction tree2(rank:15.)
=================================================
Progress: 379


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (Leaf))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 380


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (Leaf))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:15.)
induction tree1(rank:15.)
=================================================
Progress: 381


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 382


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (targetNew (Leaf))) = plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
=================================================
Progress: 383


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 384


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction nat1(rank:14.)
induction tree1(rank:14.)
induction tree2(rank:14.)
=================================================
Progress: 385


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (plus (ZERO) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 386


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (plus (ZERO) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (spec (target (tree2))) = plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction tree1(rank:15.)
induction tree2(rank:15.)
=================================================
Progress: 387


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 388


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:15.)
induction tree2(rank:15.)
=================================================
Progress: 389


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (Leaf)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 390


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (Leaf)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:15.)
induction tree1(rank:15.)
=================================================
Progress: 391


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (targetNew (tree2)) = plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), SUCC (targetNew (tree2)) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 392


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), SUCC (targetNew (tree2)) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), SUCC (targetNew (tree2)) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 393


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), SUCC (targetNew (tree2)) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (targetNew (Leaf)) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 394


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (targetNew (Leaf)) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (targetNew (Node (nat2) (tree3) (tree4))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 395


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (targetNew (Node (nat2) (tree3) (tree4))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:8.)
rewrite <- IH1 in goal at 3(rank:15.)
rewrite <- IH2 in goal at 3(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
=================================================
Progress: 396


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 1(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 397


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (targetNew (tree2)) = plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (tree1:tree), SUCC (targetNew (Leaf)) = plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 398


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (tree1:tree), SUCC (targetNew (Leaf)) = plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (tree1:tree), SUCC (ZERO) = plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 399


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (tree1:tree), SUCC (ZERO) = plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
Base3 : tree1 = Leaf
---------------------------------------
SUCC (ZERO) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 400


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
Base3 : tree1 = Leaf
---------------------------------------
SUCC (ZERO) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (targetNew (tree4)) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (targetNew (Node (nat2) (tree3) (tree4))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 401


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (targetNew (tree4)) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (targetNew (Node (nat2) (tree3) (tree4))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (targetNew (tree4)) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:8.)
=================================================
Progress: 402


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (targetNew (tree4)) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (targetNew (tree4)) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (ZERO) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
parent
targetNew (tree3)
lower
targetNew(_)
upper
plus(plus(plus(plus(_, _), SUCC(ZERO())), ZERO()), SUCC(ZERO()))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
=================================================
Progress: 403


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), SUCC (plus (ZERO) (targetNew (tree2))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 404


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), SUCC (plus (ZERO) (targetNew (tree2))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), SUCC (targetNew (tree2)) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 405


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), SUCC (targetNew (tree2)) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (targetNew (Leaf)) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 406


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (targetNew (Leaf)) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (targetNew (Node (nat2) (tree3) (tree4))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 407


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (targetNew (Node (nat2) (tree3) (tree4))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:8.)
rewrite <- IH1 in goal at 3(rank:15.)
rewrite <- IH2 in goal at 3(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
=================================================
Progress: 408


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 1(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 409


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (targetNew (Leaf))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 410


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (targetNew (Leaf))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 411


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 412


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 413


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 414


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (plus (ZERO) (ZERO)) = plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 415


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (plus (ZERO) (ZERO)) = plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (ZERO) = plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 416


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (ZERO) = plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
Base3 : tree1 = Leaf
---------------------------------------
SUCC (ZERO) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 417


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
Base3 : tree1 = Leaf
---------------------------------------
SUCC (ZERO) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (targetNew (tree4)) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (targetNew (Node (nat2) (tree3) (tree4))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 418


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (targetNew (tree4)) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (targetNew (Node (nat2) (tree3) (tree4))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (targetNew (tree4)) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:8.)
=================================================
Progress: 419


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (targetNew (tree4)) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (targetNew (tree4)) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (ZERO) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
parent
targetNew (tree3)
lower
targetNew(_)
upper
plus(plus(plus(plus(_, _), SUCC(ZERO())), ZERO()), SUCC(ZERO()))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
=================================================
Progress: 420


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 421


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 422


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 423


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 424


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 425


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (spec (target (tree2))) = plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), SUCC (spec (target (tree2))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 426


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), SUCC (spec (target (tree2))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), SUCC (spec (target (tree2))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 427


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), SUCC (spec (target (tree2))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (spec (target (Leaf))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 428


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (spec (target (Leaf))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (spec (target (Node (nat2) (tree3) (tree4)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 429


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (spec (target (Node (nat2) (tree3) (tree4)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:15.)
=================================================
Progress: 430


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (spec (target (tree2))) = plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (tree1:tree), SUCC (spec (target (Leaf))) = plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 431


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (tree1:tree), SUCC (spec (target (Leaf))) = plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (tree1:tree), SUCC (ZERO) = plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 432


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (tree1:tree), SUCC (ZERO) = plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
Base3 : tree1 = Leaf
---------------------------------------
SUCC (ZERO) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 433


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
Base3 : tree1 = Leaf
---------------------------------------
SUCC (ZERO) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (targetNew (tree4)) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (targetNew (Node (nat2) (tree3) (tree4))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 434


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (targetNew (tree4)) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (targetNew (Node (nat2) (tree3) (tree4))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (targetNew (tree4)) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:8.)
=================================================
Progress: 435


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (targetNew (tree4)) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (targetNew (tree4)) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (ZERO) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
parent
targetNew (tree3)
lower
targetNew(_)
upper
plus(plus(plus(plus(_, _), SUCC(ZERO())), ZERO()), SUCC(ZERO()))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (plus (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
=================================================
Progress: 436


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), SUCC (plus (ZERO) (spec (target (tree2)))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 437


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), SUCC (plus (ZERO) (spec (target (tree2)))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), SUCC (spec (target (tree2))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 438


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), SUCC (spec (target (tree2))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (spec (target (Leaf))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 439


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (spec (target (Leaf))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (spec (target (Node (nat2) (tree3) (tree4)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 440


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (spec (target (Node (nat2) (tree3) (tree4)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:15.)
=================================================
Progress: 441


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (spec (target (Leaf)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 442


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (spec (target (Leaf)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 443


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 444


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 445


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 446


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (plus (ZERO) (ZERO)) = plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 447


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (plus (ZERO) (ZERO)) = plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (ZERO) = plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 448


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (ZERO) = plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
Base3 : tree1 = Leaf
---------------------------------------
SUCC (ZERO) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 449


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
Base3 : tree1 = Leaf
---------------------------------------
SUCC (ZERO) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (targetNew (tree4)) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (targetNew (Node (nat2) (tree3) (tree4))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 450


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (targetNew (tree4)) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (targetNew (Node (nat2) (tree3) (tree4))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (targetNew (tree4)) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:8.)
=================================================
Progress: 451


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (targetNew (tree4)) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (targetNew (tree4)) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (ZERO) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
parent
targetNew (tree3)
lower
targetNew(_)
upper
plus(plus(plus(plus(_, _), SUCC(ZERO())), ZERO()), SUCC(ZERO()))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = plus (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
=================================================
Progress: 452


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 453


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 454


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 455


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 456


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 457


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 3(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:8.)
rewrite <- IH2 in goal at 2(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
=================================================
Progress: 458


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 459


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 3(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:8.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 460


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 461


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 3(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:8.)
rewrite <- IH2 in goal at 2(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
=================================================
Progress: 462


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 463


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 3(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:8.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 464


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 465


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 466


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (targetNew (Node (nat2) (tree3) (tree4)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 467


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (targetNew (Node (nat2) (tree3) (tree4)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:7.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 468


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
rewrite <- IH1 in goal at 2(rank:15.)
rewrite <- IH2 in goal at 2(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
induction nat1(rank:16.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 469


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) = SUCC (plus (nat1) (targetNew (tree3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:7.)
=================================================
Progress: 470


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) = SUCC (plus (nat1) (targetNew (tree3)))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
induction nat1(rank:16.)
rewrite IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 471


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) = SUCC (plus (nat1) (targetNew (tree4)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:7.)
=================================================
Progress: 472


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) = SUCC (plus (nat1) (targetNew (tree4)))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
induction nat1(rank:16.)
rewrite IH2 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 473


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 474


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (Node (nat2) (tree3) (tree4))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 475


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (Node (nat2) (tree3) (tree4))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 476


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
induction nat1(rank:16.)
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 477


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:6.)
=================================================
Progress: 478


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:7.)
=================================================
Progress: 479


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 2(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 480


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:6.)
=================================================
Progress: 481


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:7.)
=================================================
Progress: 482


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 483


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (spec (target (Leaf))))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (SUCC (SUCC (ZERO))) (spec (target (Leaf))))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (spec (target (Leaf)))) = spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Leaf)))) (spec (target (Leaf))))) = SUCC (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Leaf))))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (ZERO) (Leaf) (Leaf))))) (spec (target (Leaf))))) = SUCC (spec (target (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (ZERO) (Leaf) (Leaf)))))
asdf
previous tactics
simpl in goal
parent
target (tree3)
lower
target(_)
upper
SUCC(SUCC(plus(spec(_), spec(target(tree4)))))
remove upper
target(tree3)
remove lower
target(_)
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = ZERO
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
asdf
=================================================
Progress: 484


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
parent
target (tree3)
lower
target(_)
upper
SUCC(SUCC(plus(spec(_), spec(target(tree4)))))
remove upper
target(tree3)
remove lower
target(_)
parent
target (tree4)
lower
target(_)
upper
SUCC(spec(_))
remove upper
target(tree4)
remove lower
target(tree4)
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (Leaf)))))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = spec (target (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
parent
target (tree3)
lower
target(_)
upper
SUCC(SUCC(plus(spec(_), spec(target(tree4)))))
remove upper
target(tree3)
remove lower
target(_)
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
asdf
=================================================
Progress: 485


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (spec (target (Leaf))))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (spec (target (Leaf))))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (SUCC (SUCC (SUCC (ZERO)))) (spec (target (Leaf))))) = SUCC (SUCC (SUCC (SUCC (ZERO))))
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Leaf))))) = SUCC (spec (target (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (spec (target (Leaf))))) = SUCC (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))
asdf
previous tactics
simpl in goal
parent
target (tree3)
lower
target(_)
upper
SUCC(SUCC(plus(spec(_), spec(target(tree4)))))
remove upper
target(tree3)
remove lower
target(_)
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
asdf
=================================================
Progress: 486


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
parent
target (tree3)
lower
target(_)
upper
SUCC(SUCC(plus(spec(_), spec(target(tree4)))))
remove upper
target(tree3)
remove lower
target(_)
parent
target (tree4)
lower
target(_)
upper
SUCC(spec(_))
remove upper
target(tree4)
remove lower
target(tree4)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))))))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = SUCC (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) = SUCC (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (spec (target (Node (ZERO) (Leaf) (Leaf))))
asdf
previous tactics
simpl in goal
parent
target (tree3)
lower
target(_)
upper
SUCC(SUCC(plus(spec(_), spec(target(tree4)))))
remove upper
target(tree3)
remove lower
target(_)
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)))) (Leaf))))) (spec (target (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)))))) = SUCC (ZERO)
asdf
=================================================
Progress: 487


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 488


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (spec (target (Node (nat2) (tree3) (tree4))))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 489


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (spec (target (Node (nat2) (tree3) (tree4))))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:14.)
induction nat1(rank:15.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 490


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (spec (target (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:14.)
induction nat1(rank:15.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 491


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = SUCC (plus (nat1) (spec (target (tree3))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 492


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = SUCC (plus (nat1) (spec (target (tree3))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = SUCC (plus (ZERO) (spec (target (tree3))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 493


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = SUCC (plus (ZERO) (spec (target (tree3))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 494


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 495


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = spec (target (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = spec (target (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
rewrite IH2 in goal at 0
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (SUCC (ZERO)) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO)) = spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
Prop: plus (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) = spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (spec (target (Node (ZERO) (Leaf) (Leaf))))
asdf
previous tactics
simpl in goal
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (spec (target (Leaf))))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (spec (target (Leaf)))) = spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))))) = SUCC (spec (target (Leaf)))
asdf
=================================================
Progress: 496


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = SUCC (plus (nat1) (spec (target (tree4))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 497


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = SUCC (plus (nat1) (spec (target (tree4))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = SUCC (plus (ZERO) (spec (target (tree4))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 498


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = SUCC (plus (ZERO) (spec (target (tree4))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 499


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 500


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (Leaf)))) (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (Leaf))))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = spec (target (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (spec (target (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Leaf))) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf))) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))) = spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) = spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (Leaf)))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (spec (target (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
asdf
=================================================
Progress: 501


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (spec (target (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (spec (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (spec (target (tree3))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 502


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (spec (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (spec (target (tree3))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (spec (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (spec (target (tree3))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 503


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (spec (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (spec (target (tree3))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 504


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (spec (target (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (spec (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (spec (target (tree4))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:15.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 505


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 506


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (Node (nat2) (tree3) (tree4))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 507


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (Node (nat2) (tree3) (tree4))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 508


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
induction nat1(rank:16.)
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 509


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:6.)
=================================================
Progress: 510


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:7.)
=================================================
Progress: 511


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 2(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 512


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:6.)
=================================================
Progress: 513


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:7.)
=================================================
Progress: 514


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 515


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 516


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
rewrite <- IH1 in goal at 0(rank:23.)
=================================================
Progress: 517


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro nat1(rank:7.)
rewrite <- IH1 in goal at 2(rank:15.)
=================================================
Progress: 518


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 2(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
=================================================
Progress: 519


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro nat1(rank:7.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 520


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 521


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 522


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 523


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7.)
=================================================
Progress: 524


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite IH2 in goal at 0
intro nat1
rewrite <- IH1 in goal at 0
simpl in goal
rewrite <- IH2 in goal at 0
rewrite IH1 in goal at 0
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (SUCC (ZERO)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (SUCC (ZERO)) (ZERO)) (ZERO)) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (SUCC (ZERO)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (SUCC (ZERO)) = SUCC (plus (plus (plus (SUCC (SUCC (ZERO))) (ZERO)) (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (SUCC (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite IH2 in goal at 0
intro nat1
rewrite <- IH1 in goal at 0
simpl in goal
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (ZERO) (ZERO) = plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: plus (ZERO) (ZERO) = plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: plus (SUCC (SUCC (ZERO))) (ZERO) = plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = SUCC (plus (plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf))) (Leaf)) (Leaf))) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite IH2 in goal at 0
intro nat1
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
asdf
Lemma List
forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = SUCC (plus (plus (plus (nat1) (ZERO)) (nat2)) (SUCC (ZERO)))
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 525


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = SUCC (plus (plus (plus (nat1) (ZERO)) (nat2)) (SUCC (ZERO)))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = SUCC (plus (plus (plus (nat1) (ZERO)) (nat2)) (SUCC (ZERO)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = SUCC (plus (plus (plus (nat1) (ZERO)) (nat2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 526


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = SUCC (plus (plus (plus (nat1) (ZERO)) (nat2)) (SUCC (ZERO)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = SUCC (plus (plus (plus (nat1) (ZERO)) (nat2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = SUCC (plus (plus (plus (nat1) (ZERO)) (nat2)) (SUCC (ZERO)))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = SUCC (plus (plus (plus (nat1) (ZERO)) (nat2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 527


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = SUCC (plus (plus (plus (nat1) (ZERO)) (nat2)) (SUCC (ZERO)))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = SUCC (plus (plus (plus (nat1) (ZERO)) (nat2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = SUCC (plus (plus (plus (nat1) (ZERO)) (nat2)) (SUCC (ZERO)))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat) (nat2:nat), plus (plus (nat1) (nat2)) (SUCC (ZERO)) = SUCC (plus (plus (plus (nat1) (ZERO)) (nat2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 528


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = SUCC (plus (plus (plus (nat1) (ZERO)) (nat2)) (SUCC (ZERO)))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat) (nat2:nat), plus (plus (nat1) (nat2)) (SUCC (ZERO)) = SUCC (plus (plus (plus (nat1) (ZERO)) (nat2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = SUCC (plus (plus (plus (nat1) (ZERO)) (nat2)) (SUCC (ZERO)))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), plus (plus (ZERO) (nat2)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (nat2)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 529


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = SUCC (plus (plus (plus (nat1) (ZERO)) (nat2)) (SUCC (ZERO)))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), plus (plus (ZERO) (nat2)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (nat2)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = SUCC (plus (plus (plus (nat1) (ZERO)) (nat2)) (SUCC (ZERO)))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), plus (nat2) (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:9.)
=================================================
Progress: 530


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = SUCC (plus (plus (plus (nat1) (ZERO)) (nat2)) (SUCC (ZERO)))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), plus (nat2) (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = SUCC (plus (plus (plus (nat1) (ZERO)) (nat2)) (SUCC (ZERO)))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 531


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = SUCC (plus (plus (plus (nat1) (ZERO)) (nat2)) (SUCC (ZERO)))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = SUCC (plus (plus (plus (nat1) (ZERO)) (nat2)) (SUCC (ZERO)))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 532


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 533


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:15.)
induction nat1(rank:16.)
rewrite IH2 in goal at 0(rank:15.)
=================================================
Progress: 534


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 535


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 536


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 537


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
simpl in goal
rewrite <- IH1 in goal at 0
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
simpl in goal
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (ZERO) (ZERO) = plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: plus (ZERO) (ZERO) = plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: plus (ZERO) (ZERO) = plus (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (targetNew (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (ZERO)) (ZERO)) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
simpl in goal
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (ZERO)) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (SUCC (ZERO)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 538


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 539


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 540


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7.)
=================================================
Progress: 541


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH2 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
simpl in goal
rewrite <- IH2 in goal at 0
rewrite IH1 in goal at 0
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH2 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
simpl in goal
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (ZERO) = plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (ZERO) (ZERO) = plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: plus (SUCC (ZERO)) (ZERO) = plus (plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)) (Leaf)) (Leaf))) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = SUCC (plus (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH2 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (SUCC (ZERO)))
asdf
Lemma List
forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO)))
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 542


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO)))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO)))

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 543


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO)))

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (nat1)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 544


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (nat1)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 545


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:9.)
=================================================
Progress: 546


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 547


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 548


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 549


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 550


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 551


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = ZERO
Prop: SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
asdf
=================================================
Progress: 552


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (spec (target (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (spec (target (tree3))) (SUCC (ZERO)))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 553


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (spec (target (tree3))) (SUCC (ZERO)))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 554


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (spec (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (spec (target (tree4))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (spec (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (spec (target (tree4))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 555


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (spec (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (spec (target (tree4))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 556


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro nat1(rank:7.)
rewrite <- IH1 in goal at 2(rank:15.)
=================================================
Progress: 557


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 2(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
=================================================
Progress: 558


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro nat1(rank:7.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 559


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 560


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 561


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 562


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7.)
=================================================
Progress: 563


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite IH2 in goal at 0
intro nat1
rewrite <- IH1 in goal at 0
simpl in goal
rewrite <- IH2 in goal at 0
rewrite IH1 in goal at 0
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (plus (plus (SUCC (SUCC (ZERO))) (ZERO)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (ZERO)) (ZERO)) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite IH2 in goal at 0
intro nat1
rewrite <- IH1 in goal at 0
simpl in goal
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (ZERO) = plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (SUCC (SUCC (ZERO))) (ZERO) = plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: plus (ZERO) (ZERO) = plus (plus (plus (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite IH2 in goal at 0
intro nat1
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 564


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 565


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:15.)
induction nat1(rank:16.)
rewrite IH2 in goal at 0(rank:15.)
=================================================
Progress: 566


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 567


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 568


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 569


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
simpl in goal
rewrite <- IH1 in goal at 0
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf))) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (ZERO)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
simpl in goal
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (ZERO) = plus (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Leaf))) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (ZERO) (ZERO) = plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: plus (SUCC (SUCC (SUCC (ZERO)))) (ZERO) = plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
simpl in goal
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (ZERO)) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (SUCC (ZERO)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
asdf
=================================================
Progress: 570


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 571


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 572


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7.)
=================================================
Progress: 573


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH2 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
simpl in goal
rewrite <- IH2 in goal at 0
rewrite IH1 in goal at 0
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO)) = SUCC (plus (plus (plus (SUCC (SUCC (ZERO))) (ZERO)) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH2 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
simpl in goal
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (ZERO) (ZERO) = plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: plus (ZERO) (ZERO) = plus (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: plus (ZERO) (ZERO) = plus (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH2 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 574


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 575


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree4)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 576


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree4)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree4)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite IH1 in goal at 0
rewrite <- IH1 in goal at 2
rewrite IH2 in goal at 0
intro nat1
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (SUCC (SUCC (ZERO))) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
=================================================
Progress: 577


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite IH1 in goal at 0
intro nat1
rewrite <- IH1 in goal at 2
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (SUCC (ZERO)) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (ZERO) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (ZERO) (ZERO))) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (SUCC (plus (ZERO) (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (SUCC (plus (ZERO) (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (ZERO) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite IH1 in goal at 0
intro nat1
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (nat1) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 578


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (nat1) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (nat1) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (nat1) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 579


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (nat1) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (nat1) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (nat1) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (nat1) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 580


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (nat1) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (nat1) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (nat1) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat) (nat2:nat), plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (nat1) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 581


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (nat1) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat) (nat2:nat), plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (nat1) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (nat1) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), plus (plus (ZERO) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 582


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (nat1) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), plus (plus (ZERO) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (nat1) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), plus (nat2) (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:9.)
=================================================
Progress: 583


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (nat1) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), plus (nat2) (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (nat1) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 584


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (nat1) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (nat1) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 585


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
=================================================
Progress: 586


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
simpl in goal
rewrite IH1 in goal at 0
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (SUCC (ZERO)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (plus (SUCC (SUCC (SUCC (ZERO)))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (SUCC (SUCC (SUCC (ZERO)))) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (SUCC (ZERO)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (ZERO) (ZERO) = plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: plus (ZERO) (ZERO) = plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: plus (SUCC (SUCC (SUCC (ZERO)))) (ZERO) = plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 587


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
simpl in goal
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (ZERO) (ZERO) = plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: plus (SUCC (SUCC (ZERO))) (ZERO) = plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: plus (SUCC (SUCC (ZERO))) (ZERO) = plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 588


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 589


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree4)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 590


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree4)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree4)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite IH1 in goal at 0
rewrite <- IH1 in goal at 2
rewrite IH2 in goal at 0
intro nat1
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Leaf))) (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
=================================================
Progress: 591


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite IH1 in goal at 0
intro nat1
rewrite <- IH1 in goal at 2
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (ZERO) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (SUCC (plus (ZERO) (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (ZERO) (ZERO))) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: plus (plus (ZERO) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) = plus (plus (SUCC (plus (ZERO) (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (ZERO) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (ZERO) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite IH1 in goal at 0
intro nat1
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (SUCC (SUCC (ZERO))) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
asdf
=================================================
Progress: 592


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (ZERO)) = plus (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
=================================================
Progress: 593


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
simpl in goal
rewrite IH1 in goal at 0
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (ZERO)) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (SUCC (ZERO)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (SUCC (ZERO)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) (ZERO)) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (ZERO) (ZERO) = plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: plus (ZERO) (ZERO) = plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: plus (SUCC (SUCC (ZERO))) (ZERO) = plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)))
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (Leaf))))) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 594


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
simpl in goal
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) (ZERO)) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (ZERO) (ZERO) = plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: plus (SUCC (ZERO)) (ZERO) = plus (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (SUCC (ZERO)) (ZERO) = plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (nat1) (ZERO) = plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 595


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (nat1) (ZERO) = plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (nat1) (ZERO) = plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (nat1) (ZERO) = plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 596


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (nat1) (ZERO) = plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (nat1) (ZERO) = plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (nat1) (ZERO) = plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> plus (nat1) (ZERO) = plus (plus (plus (targetNew (Leaf)) (ZERO)) (nat1)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 597


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (nat1) (ZERO) = plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> plus (nat1) (ZERO) = plus (plus (plus (targetNew (Leaf)) (ZERO)) (nat1)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (nat1) (ZERO) = plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), true = true -> plus (nat1) (ZERO) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 598


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (nat1) (ZERO) = plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), true = true -> plus (nat1) (ZERO) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (nat1) (ZERO) = plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (nat1:nat), plus (nat1) (ZERO) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:9.)
=================================================
Progress: 599


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (nat1) (ZERO) = plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (nat1:nat), plus (nat1) (ZERO) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (nat1) (ZERO) = plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (ZERO) (ZERO) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 600


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (nat1) (ZERO) = plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (ZERO) (ZERO) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (nat1) (ZERO) = plus (plus (plus (targetNew (tree1)) (ZERO)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
ZERO = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 601


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 602


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))
asdf
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
Lemma List
forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (nat1) (nat1)) (SUCC (ZERO))) = SUCC (nat1)
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 603


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (nat1) (nat1)) (SUCC (ZERO))) = SUCC (nat1)(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (nat1) (nat1)) (SUCC (ZERO))) = SUCC (nat1)

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (nat1) (nat1)) (SUCC (ZERO))) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 604


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (nat1) (nat1)) (SUCC (ZERO))) = SUCC (nat1)

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (nat1) (nat1)) (SUCC (ZERO))) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (nat1) (nat1)) (SUCC (ZERO))) = SUCC (nat1)
tree1 : tree
---------------------------------------
forall (nat1:nat), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (nat1) (nat1)) (SUCC (ZERO))) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 605


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (nat1) (nat1)) (SUCC (ZERO))) = SUCC (nat1)
tree1 : tree
---------------------------------------
forall (nat1:nat), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (nat1) (nat1)) (SUCC (ZERO))) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (nat1) (nat1)) (SUCC (ZERO))) = SUCC (nat1)
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (plus (nat1) (nat1)) (SUCC (ZERO))) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 606


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (nat1) (nat1)) (SUCC (ZERO))) = SUCC (nat1)
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (plus (nat1) (nat1)) (SUCC (ZERO))) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (nat1) (nat1)) (SUCC (ZERO))) = SUCC (nat1)
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 607


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (nat1) (nat1)) (SUCC (ZERO))) = SUCC (nat1)
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (nat1) (nat1)) (SUCC (ZERO))) = SUCC (nat1)
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 608


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 609


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = SUCC (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH2 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf))) (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 610


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 611


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf)))) = targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 612


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 613


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (targetNew (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH2 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf))))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)))))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 614


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 615


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 616


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree3)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 617


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree3)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 618


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 619


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 620


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 621


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 622


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 623


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 624


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 625


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 626


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 627


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 628


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree3)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 629


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree3)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 630


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 631


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 632


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 633


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 634


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (nat1)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 635


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (plus (targetNew (tree3)) (ZERO)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (targetNew (Leaf)) (ZERO)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 636


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 637


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:19.)
=================================================
Progress: 638


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (plus (nat1) (targetNew (Leaf))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19.)
=================================================
Progress: 639


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (plus (nat1) (targetNew (Leaf))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:19.)
=================================================
Progress: 640


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:19.)
=================================================
Progress: 641


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:19.)
=================================================
Progress: 642


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:19.)
=================================================
Progress: 643


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond4(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:20.)
=================================================
Progress: 644


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 20.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:19.)
=================================================
Progress: 645


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:19.)
=================================================
Progress: 646


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:27.)
rewrite <- IH1 in goal at 0(rank:27.)
=================================================
Progress: 647


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 3(rank : 22.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (spec (target (tree2))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (spec (target (tree2))) (SUCC (ZERO))(rank:7.)
=================================================
Progress: 648


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (spec (target (tree2))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (spec (target (tree2))) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 1(rank:15.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
=================================================
Progress: 649


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 650


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite IH1 in goal at 0
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Leaf)) (Leaf)))) = plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
=================================================
Progress: 651


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 15.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 652


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite <- IH1 in goal at 1
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 653


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction nat1(rank:14.)
induction tree1(rank:14.)
induction tree2(rank:14.)
=================================================
Progress: 654


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (plus (ZERO) (targetNew (tree2))) = plus (plus (ZERO) (targetNew (tree1))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 655


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (plus (ZERO) (targetNew (tree2))) = plus (plus (ZERO) (targetNew (tree1))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (targetNew (tree2)) = plus (targetNew (tree1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction tree1(rank:15.)
induction tree2(rank:15.)
=================================================
Progress: 656


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (Leaf))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 657


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (Leaf))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:15.)
induction tree2(rank:15.)
=================================================
Progress: 658


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (Leaf))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 659


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (Leaf))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:15.)
induction tree1(rank:15.)
=================================================
Progress: 660


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (targetNew (tree2)) = plus (targetNew (tree1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), SUCC (targetNew (tree2)) = plus (targetNew (Leaf)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 661


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), SUCC (targetNew (tree2)) = plus (targetNew (Leaf)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), SUCC (targetNew (tree2)) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 662


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), SUCC (targetNew (tree2)) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (targetNew (Leaf)) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 663


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (targetNew (Leaf)) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (targetNew (Node (nat2) (tree3) (tree4))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 664


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (targetNew (Node (nat2) (tree3) (tree4))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:8.)
rewrite <- IH1 in goal at 3(rank:15.)
rewrite <- IH2 in goal at 3(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
=================================================
Progress: 665


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 1(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 666


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (targetNew (tree2)) = plus (targetNew (tree1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (tree1:tree), SUCC (targetNew (Leaf)) = plus (targetNew (tree1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 667


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (tree1:tree), SUCC (targetNew (Leaf)) = plus (targetNew (tree1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (tree1:tree), SUCC (ZERO) = plus (targetNew (tree1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 668


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (tree1:tree), SUCC (ZERO) = plus (targetNew (tree1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
Base3 : tree1 = Leaf
---------------------------------------
SUCC (ZERO) = plus (targetNew (Leaf)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 669


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
Base3 : tree1 = Leaf
---------------------------------------
SUCC (ZERO) = plus (targetNew (Leaf)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (targetNew (Node (nat2) (tree3) (tree4))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 670


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (targetNew (Node (nat2) (tree3) (tree4))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:8.)
=================================================
Progress: 671


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
parent
targetNew (tree3)
lower
targetNew(_)
upper
plus(plus(plus(_, _), SUCC(ZERO())), SUCC(ZERO()))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))
asdf
=================================================
Progress: 672


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), SUCC (plus (ZERO) (targetNew (tree2))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 673


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), SUCC (plus (ZERO) (targetNew (tree2))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), SUCC (targetNew (tree2)) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 674


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), SUCC (targetNew (tree2)) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (targetNew (Leaf)) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 675


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (targetNew (Leaf)) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (targetNew (Node (nat2) (tree3) (tree4))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 676


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (targetNew (Node (nat2) (tree3) (tree4))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:8.)
rewrite <- IH1 in goal at 3(rank:15.)
rewrite <- IH2 in goal at 3(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
=================================================
Progress: 677


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 1(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 678


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (targetNew (Leaf))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 679


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (targetNew (Leaf))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 680


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 681


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 682


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 683


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (targetNew (tree1))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 684


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (targetNew (tree1))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (ZERO) = plus (targetNew (tree1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 685


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (ZERO) = plus (targetNew (tree1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
Base3 : tree1 = Leaf
---------------------------------------
SUCC (ZERO) = plus (targetNew (Leaf)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 686


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
Base3 : tree1 = Leaf
---------------------------------------
SUCC (ZERO) = plus (targetNew (Leaf)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (targetNew (Node (nat2) (tree3) (tree4))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 687


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (targetNew (Node (nat2) (tree3) (tree4))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:8.)
=================================================
Progress: 688


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
parent
targetNew (tree3)
lower
targetNew(_)
upper
plus(plus(plus(_, _), SUCC(ZERO())), SUCC(ZERO()))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
asdf
=================================================
Progress: 689


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (Leaf))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 690


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (Leaf))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 691


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 692


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 693


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (plus (SUCC (nat2)) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 694


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 3(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:8.)
rewrite <- IH2 in goal at 2(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
=================================================
Progress: 695


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 696


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 3(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:8.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 697


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 698


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 3(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:8.)
rewrite <- IH2 in goal at 2(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
=================================================
Progress: 699


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 700


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 3(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:8.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 701


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 702


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO))) = SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 703


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO))) = SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (targetNew (Node (nat2) (tree3) (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 704


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (targetNew (Node (nat2) (tree3) (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:7.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 705


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:15.)
induction nat1(rank:16.)
rewrite <- IH2 in goal at 0(rank:15.)
=================================================
Progress: 706


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) = SUCC (plus (nat1) (targetNew (tree3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:7.)
=================================================
Progress: 707


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) = SUCC (plus (nat1) (targetNew (tree3)))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 708


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) = SUCC (plus (nat1) (targetNew (tree4)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:7.)
=================================================
Progress: 709


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) = SUCC (plus (nat1) (targetNew (tree4)))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
rewrite IH2 in goal at 0(rank:23.)
=================================================
Progress: 710


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO))) = SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 711


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (plus (nat2) (ZERO)) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO))) = SUCC (plus (plus (nat2) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (Node (nat2) (tree3) (tree4)))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 712


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (Node (nat2) (tree3) (tree4)))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 713


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
induction nat1(rank:16.)
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 714


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:7.)
=================================================
Progress: 715


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 2(rank:15.)
rewrite <- IH1 in goal at 1(rank:23.)
induction nat1(rank:16.)
rewrite <- IH1 in goal at 0(rank:23.)
=================================================
Progress: 716


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:7.)
=================================================
Progress: 717


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:15.)
induction nat1(rank:16.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 718


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 719


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree3)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 720


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree3)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Leaf)) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Leaf)) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
=================================================
Progress: 721


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 722


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 723


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
=================================================
Progress: 724


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 2(rank:15.)
induction nat1(rank:16.)
=================================================
Progress: 725


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
induction nat1(rank:16.)
=================================================
Progress: 726


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:15.)
induction nat1(rank:16.)
rewrite IH2 in goal at 2(rank:23.)
=================================================
Progress: 727


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
rewrite IH2 in goal at 0(rank:23.)
=================================================
Progress: 728


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction nat1(rank:16.)
rewrite IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 729


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
rewrite IH2 in goal at 0(rank:23.)
=================================================
Progress: 730


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 731


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 732


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 733


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 734


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 735


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 736


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 737


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 738


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 739


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (targetNew (Leaf))) = targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Leaf))))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
Lemma List
forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree1))
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 740


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree1))(rank : 0.)


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree1))

---------------------------------------
forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 741


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree1))

---------------------------------------
forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree1))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 742


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree1))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree1))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
true = true -> SUCC (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 743


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree1))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
true = true -> SUCC (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree1))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
SUCC (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
=================================================
Progress: 744


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 745


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
asdf
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH2 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 746


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 747


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf))) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf))) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
asdf
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 748


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 749


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)))) = targetNew (Leaf)
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH2 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (ZERO)) = targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
Lemma List
forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (targetNew (tree1))) = targetNew (tree2)
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 750


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (targetNew (tree1))) = targetNew (tree2)(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (targetNew (tree1))) = targetNew (tree2)

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (targetNew (tree1))) = targetNew (tree2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 751


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (targetNew (tree1))) = targetNew (tree2)

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (targetNew (tree1))) = targetNew (tree2)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (targetNew (tree1))) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (tree2)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 752


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (targetNew (tree1))) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (tree2)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (targetNew (tree1))) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), true = true -> SUCC (ZERO) = targetNew (tree2)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 753


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (targetNew (tree1))) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), true = true -> SUCC (ZERO) = targetNew (tree2)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (targetNew (tree1))) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (tree2:tree), SUCC (ZERO) = targetNew (tree2)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 754


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (targetNew (tree1))) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (tree2:tree), SUCC (ZERO) = targetNew (tree2)

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (targetNew (tree1))) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
SUCC (ZERO) = targetNew (Leaf)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 755


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (targetNew (tree1))) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
SUCC (ZERO) = targetNew (Leaf)

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (targetNew (tree1))) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
SUCC (ZERO) = ZERO

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 756


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 757


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 758


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree3)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 759


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree3)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
=================================================
Progress: 760


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 761


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
=================================================
Progress: 762


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 763


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 764


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 765


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 766


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 767


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 768


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 769


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
simpl in goal
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (SUCC (ZERO))) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 770


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 771


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 772


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 773


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 774


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 775


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 776


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 777


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
simpl in goal
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (SUCC (ZERO))) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 778


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 779


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 780


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 781


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 782


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 783


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf)) (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (Leaf))) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf))) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 784


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 785


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 786


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 787


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf))) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 788


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 789


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf))) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 790


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (targetNew (tree2))) then SUCC (targetNew (tree2)) else targetNew (tree2))) = SUCC (targetNew (tree2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))(rank:7.)
=================================================
Progress: 791


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (targetNew (tree2))) then SUCC (targetNew (tree2)) else targetNew (tree2))) = SUCC (targetNew (tree2))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 1(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
rewrite IH1 in goal at 2(rank:23.)
=================================================
Progress: 792


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 793


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
rewrite IH1 in goal at 1
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)) (Leaf))))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
rewrite IH1 in goal at 1
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))) (SUCC (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Leaf)))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
=================================================
Progress: 794


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 22.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (targetNew (tree2))) then SUCC (ZERO) else targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))(rank:7.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
=================================================
Progress: 795


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (targetNew (tree2))) then SUCC (ZERO) else targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:15.)
rewrite <- IH2 in goal at 2(rank:15.)
rewrite <- IH2 in goal at 1(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 796


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 797


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 798


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 799


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
rewrite <- IH2 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 800


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 22.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (targetNew (tree2)) else targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
=================================================
Progress: 801


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 22.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree3)) else targetNew (tree2))) = SUCC (targetNew (tree3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))(rank:7.)
=================================================
Progress: 802


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree3)) else targetNew (tree2))) = SUCC (targetNew (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 1(rank:15.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 2(rank:23.)
=================================================
Progress: 803


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 804


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
rewrite IH2 in goal at 1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (Leaf))) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (Leaf))) (Leaf)))) (SUCC (targetNew (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (Leaf))) (Leaf)))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
rewrite IH2 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (SUCC (SUCC (ZERO))))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))))) (ZERO)) = ZERO
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)))))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf))))))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))))) = targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)))
asdf
=================================================
Progress: 805


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 22.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (targetNew (tree3))) then SUCC (ZERO) else targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 806


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (targetNew (tree3))) then SUCC (ZERO) else targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:15.)
rewrite <- IH2 in goal at 2(rank:15.)
rewrite <- IH2 in goal at 1(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 807


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 808


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 809


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 810


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (targetNew (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
rewrite <- IH2 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 811


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 22.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (targetNew (tree3)) else targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 812


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (targetNew (tree3)) else targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (targetNew (tree2))) then SUCC (targetNew (tree3)) else targetNew (tree2))) = SUCC (targetNew (tree2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (ZERO) then SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))) else targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (ZERO) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO) then SUCC (targetNew (Leaf)) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (ZERO) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (ZERO) then SUCC (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) else targetNew (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) then SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) else targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) = targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (if lq (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) then SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))) else targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 2
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))))) (if lq (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (if lq (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf) (Leaf))) (Leaf))))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf) (Leaf))) (Leaf)))))) (if lq (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf) (Leaf))) (Leaf))))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf) (Leaf))) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (ZERO)
asdf
=================================================
Progress: 813


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))) = SUCC (targetNew (tree2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 22.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree3)) else targetNew (tree2))) = SUCC (targetNew (tree2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))(rank:7.)
=================================================
Progress: 814


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree3)) else targetNew (tree2))) = SUCC (targetNew (tree2))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 815


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
=================================================
Progress: 816


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))) = SUCC (targetNew (tree2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 22.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (targetNew (tree3))) then SUCC (ZERO) else targetNew (tree2))) = SUCC (targetNew (tree2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
Prop: SUCC (plus (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (ZERO))))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else SUCC (SUCC (SUCC (ZERO))))) = SUCC (SUCC (SUCC (SUCC (ZERO))))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) = targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (SUCC (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))) then SUCC (ZERO) else targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = SUCC (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (if lq (SUCC (ZERO)) (SUCC (ZERO)) then SUCC (ZERO) else SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (if lq (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
asdf
=================================================
Progress: 817


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))) = SUCC (targetNew (tree2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 22.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (targetNew (tree3)) else targetNew (tree2))) = SUCC (targetNew (tree2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 2
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (if lq (SUCC (ZERO)) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) else SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else ZERO)) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (if lq (SUCC (SUCC (ZERO))) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))) else SUCC (SUCC (ZERO)))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else ZERO)) = SUCC (ZERO)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Node (ZERO) (Leaf) (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf)))) (Leaf))) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (if lq (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (if lq (SUCC (ZERO)) (SUCC (ZERO)) then SUCC (ZERO) else SUCC (ZERO))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (if lq (SUCC (ZERO)) (SUCC (ZERO)) then SUCC (ZERO) else SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))) (Leaf)) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))) (Leaf)) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))) (Leaf)) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))) (Leaf)) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf)))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))) (Leaf)) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))
asdf
previous tactics
simpl in goal
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) (if lq (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
asdf
=================================================
Progress: 818


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))) = SUCC (targetNew (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (targetNew (tree2))) then SUCC (targetNew (tree2)) else targetNew (tree2))) = SUCC (targetNew (tree3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))(rank:7.)
=================================================
Progress: 819


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (targetNew (tree2))) then SUCC (targetNew (tree2)) else targetNew (tree2))) = SUCC (targetNew (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:23.)
=================================================
Progress: 820


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 821


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))) = SUCC (targetNew (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 22.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (targetNew (tree2))) then SUCC (ZERO) else targetNew (tree2))) = SUCC (targetNew (tree3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
rewrite <- IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (SUCC (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) then SUCC (ZERO) else targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
asdf
=================================================
Progress: 822


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree2))) = SUCC (targetNew (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 22.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (targetNew (tree2)) else targetNew (tree2))) = SUCC (targetNew (tree3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
rewrite <- IH1 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (Leaf))) else targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (Leaf))) = targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)) (Leaf))))) (if lq (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)) (Leaf)))) (SUCC (ZERO)) then SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)) (Leaf)))) else targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)) (Leaf)))) = targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) = targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
previous tactics
simpl in goal
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))))) (if lq (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))))) = SUCC (ZERO)
asdf
=================================================
Progress: 823


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 22.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 824


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 825


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7.)
=================================================
Progress: 826


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 827


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = ZERO
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = ZERO
Prop: plus (plus (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (ZERO)) (SUCC (ZERO)) = ZERO
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
asdf
=================================================
Progress: 828


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO)))) = SUCC (plus (nat1) (spec (target (tree4))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = SUCC (plus (nat1) (spec (target (tree4))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 829


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = SUCC (plus (nat1) (spec (target (tree4))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = SUCC (plus (ZERO) (spec (target (tree4))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 830


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = SUCC (plus (ZERO) (spec (target (tree4))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7.)
=================================================
Progress: 831


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 832


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (SUCC (SUCC (ZERO))))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (SUCC (SUCC (ZERO))))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) = SUCC (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))))) = SUCC (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (ZERO)) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = spec (target (Leaf))
Prop: SUCC (plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (plus (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))
asdf
=================================================
Progress: 833


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (spec (target (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = SUCC (plus (nat1) (spec (target (tree3))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 834


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = SUCC (plus (nat1) (spec (target (tree3))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = SUCC (plus (ZERO) (spec (target (tree3))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 835


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = SUCC (plus (ZERO) (spec (target (tree3))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7.)
=================================================
Progress: 836


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 837


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (spec (target (Leaf))))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (spec (target (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Leaf)))))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))))))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (spec (target (Leaf)))) = spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Leaf))))) = SUCC (spec (target (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Leaf))))) = SUCC (spec (target (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (spec (target (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))) = spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
asdf
=================================================
Progress: 838


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (spec (target (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 22.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 839


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 840


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7.)
=================================================
Progress: 841


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 842


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf))) (Node (ZERO) (Leaf) (Leaf)))))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
asdf
=================================================
Progress: 843


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (spec (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (spec (target (tree4))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = SUCC (plus (nat1) (spec (target (tree4))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 844


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = SUCC (plus (nat1) (spec (target (tree4))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = SUCC (plus (ZERO) (spec (target (tree4))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 845


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = SUCC (plus (ZERO) (spec (target (tree4))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7.)
=================================================
Progress: 846


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 847


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) = SUCC (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = spec (target (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (spec (target (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))))
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf)))) (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf))))) = spec (target (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) = spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
asdf
=================================================
Progress: 848


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (targetNew (tree2))) then SUCC (ZERO) else targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 22.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (targetNew (tree2))) then SUCC (targetNew (tree3)) else targetNew (tree2))) = SUCC (targetNew (tree3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 0
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(_)
remove upper
ZERO()
remove lower
ZERO()
remove upper
targetNew(tree3)
remove lower
targetNew(tree3)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then ZERO else targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) then ZERO else targetNew (Node (ZERO) (Leaf) (Leaf)))) = ZERO
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then ZERO else targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) then SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))) else targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) then SUCC (targetNew (Leaf)) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) then SUCC (targetNew (Leaf)) else targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (SUCC (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) then SUCC (targetNew (Leaf)) else targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
asdf
=================================================
Progress: 849


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (targetNew (tree2))) then SUCC (ZERO) else targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 22.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (targetNew (tree2))) then SUCC (targetNew (tree3)) else targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 1
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) then SUCC (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)) (Leaf))) else targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) then SUCC (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf))) else targetNew (Node (ZERO) (Leaf) (Leaf))) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) then SUCC (targetNew (Leaf)) else targetNew (Node (ZERO) (Leaf) (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) then SUCC (targetNew (Leaf)) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)))) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)))) (Leaf)))) (if lq (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)))) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)))) (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
asdf
=================================================
Progress: 850


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (targetNew (tree2)) else targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 22.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree2)) else targetNew (tree2))) = SUCC (targetNew (tree3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (ZERO) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (if lq (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) then SUCC (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) else targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) else targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (ZERO) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (ZERO) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (ZERO) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) else targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)))))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf))))))) (if lq (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)))))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf))))))) = SUCC (ZERO)
asdf
=================================================
Progress: 851


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (ZERO)) then SUCC (targetNew (tree2)) else targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 22.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree2)) else targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) else targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) = ZERO
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) else targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) else targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf))))) (if lq (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (Leaf)))) then SUCC (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf)))) else targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) else targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))) else targetNew (Node (ZERO) (Leaf) (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
asdf
=================================================
Progress: 852


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (targetNew (tree3))) then SUCC (ZERO) else targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (if lq (targetNew (tree2)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree2)) else targetNew (tree2))) = SUCC (targetNew (tree2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then ZERO else targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then ZERO else targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then ZERO else targetNew (Leaf))) = ZERO
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (if lq (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf))) then SUCC (SUCC (ZERO)) else targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) then SUCC (SUCC (ZERO)) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) then ZERO else targetNew (Leaf))) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)))) then SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))) else targetNew (Node (ZERO) (Leaf) (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (Leaf)) (Leaf))) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (Leaf)) (Leaf))) else targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (Leaf)) (Leaf))) = targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (Leaf)) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Leaf)) (Leaf)))) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (Leaf))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))))) then SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Leaf)) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Leaf)) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Leaf)) (Leaf)) (Leaf))) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Leaf)) (Leaf)) (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf)))) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (if lq (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
asdf
=================================================
Progress: 853


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
case lq (targetNew (tree2)) (SUCC (ZERO))
parent
target (tree2)
lower
target(_)
upper
SUCC(plus(spec(_), spec(target(tree3))))
remove upper
target(tree2)
remove lower
target(_)
parent
targetNew (tree2)
lower
targetNew(_)
upper
plus(plus(_, _), SUCC(ZERO()))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))))) = plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))
=================================================
Progress: 854


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
case lq (targetNew (tree2)) (SUCC (ZERO))
parent
target (tree2)
lower
target(_)
upper
SUCC(plus(spec(_), spec(target(tree3))))
remove upper
target(tree2)
remove lower
target(_)
parent
targetNew (tree2)
lower
targetNew(_)
upper
plus(plus(_, _), SUCC(ZERO()))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (spec (target (Leaf)))) = plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
=================================================
Progress: 855


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (spec (target (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (spec (target (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
=================================================
Progress: 856


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (spec (target (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))))) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (SUCC (ZERO)))) (spec (target (Leaf)))) = plus (plus (spec (target (Leaf))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 857


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:18.)
=================================================
Progress: 858


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (Leaf))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 859


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (Leaf))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:19.)
=================================================
Progress: 860


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (plus (nat1) (spec (target (Leaf)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19.)
=================================================
Progress: 861


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (plus (nat1) (spec (target (Leaf)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:19.)
=================================================
Progress: 862


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:19.)
=================================================
Progress: 863


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:19.)
=================================================
Progress: 864


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:19.)
=================================================
Progress: 865


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond4(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:20.)
=================================================
Progress: 866


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 20.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:19.)
=================================================
Progress: 867


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:19.)
=================================================
Progress: 868


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:27.)
rewrite <- IH1 in goal at 0(rank:27.)
=================================================
Progress: 869


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (targetNew (Leaf))) = plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
Prop: SUCC (plus (ZERO) (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (spec (target (Leaf)))) = plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
=================================================
Progress: 870


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (spec (target (Leaf)))) = plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (SUCC (SUCC (ZERO)))) (spec (target (Leaf)))) = plus (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
=================================================
Progress: 871


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (targetNew (Leaf))) = plus (plus (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (spec (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
Prop: SUCC (plus (ZERO) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 872


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:18.)
=================================================
Progress: 873


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (Leaf))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 874


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (Leaf))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:19.)
=================================================
Progress: 875


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (plus (nat1) (targetNew (Leaf))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19.)
=================================================
Progress: 876


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (plus (nat1) (targetNew (Leaf))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:19.)
=================================================
Progress: 877


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:19.)
=================================================
Progress: 878


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:19.)
=================================================
Progress: 879


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:19.)
=================================================
Progress: 880


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond4(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:20.)
=================================================
Progress: 881


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 20.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:19.)
=================================================
Progress: 882


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:19.)
=================================================
Progress: 883


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:27.)
rewrite <- IH1 in goal at 0(rank:27.)
=================================================
Progress: 884


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 3(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 3
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Leaf)))) = plus (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)))))) (Leaf))))))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (SUCC (ZERO)) (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
=================================================
Progress: 885


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 886


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
=================================================
Progress: 887


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 888


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (spec (target (Leaf)))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf))) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Leaf))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))
=================================================
Progress: 889


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Lemma List
forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 890


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:18.)
=================================================
Progress: 891


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:18.)
=================================================
Progress: 892


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (Leaf))) (targetNew (tree2))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 893


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (Leaf))) (spec (target (tree2)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 894


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (Leaf))) (targetNew (tree2))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (targetNew (tree2)) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:19.)
=================================================
Progress: 895


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (Leaf))) (spec (target (tree2)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (spec (target (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:19.)
=================================================
Progress: 896


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (targetNew (tree2)) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 19.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (targetNew (Leaf)) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:18.)
=================================================
Progress: 897


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (targetNew (Leaf)) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
nat_eq (ZERO) (height (Node (nat1) (tree3) (tree4))) = true -> true = true -> balanced (Node (nat1) (tree3) (tree4)) = true -> true = true -> SUCC (targetNew (Node (nat1) (tree3) (tree4))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 898


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
nat_eq (ZERO) (height (Node (nat1) (tree3) (tree4))) = true -> true = true -> balanced (Node (nat1) (tree3) (tree4)) = true -> true = true -> SUCC (targetNew (Node (nat1) (tree3) (tree4))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true -> true = true -> if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true -> true = true -> SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:18.)
=================================================
Progress: 899


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true -> true = true -> if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true -> true = true -> SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
---------------------------------------
true = true -> if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true -> true = true -> SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:18.)
=================================================
Progress: 900


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
---------------------------------------
true = true -> if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true -> true = true -> SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
Cond2 : true = true
---------------------------------------
if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true -> true = true -> SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:18.)
=================================================
Progress: 901


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
Cond2 : true = true
---------------------------------------
if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true -> true = true -> SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
Cond2 : true = true
Cond3 : if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true
---------------------------------------
true = true -> SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:18.)
=================================================
Progress: 902


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
Cond2 : true = true
Cond3 : if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true
---------------------------------------
true = true -> SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond4(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
Cond2 : true = true
Cond3 : if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true
Cond4 : true = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:19.)
rewrite <- IH1 in goal at 3(rank:30.)
rewrite <- IH2 in goal at 1(rank:38.)
rewrite <- IH1 in goal at 1(rank:38.)
rewrite <- IH1 in goal at 2(rank:38.)
rewrite <- IH2 in goal at 3(rank:30.)
rewrite <- IH2 in goal at 2(rank:38.)
=================================================
Progress: 903


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (spec (target (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 19.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (spec (target (Leaf))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:18.)
=================================================
Progress: 904


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (spec (target (Leaf))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
nat_eq (ZERO) (height (Node (nat1) (tree3) (tree4))) = true -> true = true -> balanced (Node (nat1) (tree3) (tree4)) = true -> true = true -> SUCC (spec (target (Node (nat1) (tree3) (tree4)))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 905


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
nat_eq (ZERO) (height (Node (nat1) (tree3) (tree4))) = true -> true = true -> balanced (Node (nat1) (tree3) (tree4)) = true -> true = true -> SUCC (spec (target (Node (nat1) (tree3) (tree4)))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true -> true = true -> if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true -> true = true -> SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:18.)
=================================================
Progress: 906


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true -> true = true -> if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true -> true = true -> SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
---------------------------------------
true = true -> if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true -> true = true -> SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:18.)
=================================================
Progress: 907


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
---------------------------------------
true = true -> if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true -> true = true -> SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
Cond2 : true = true
---------------------------------------
if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true -> true = true -> SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:18.)
=================================================
Progress: 908


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
Cond2 : true = true
---------------------------------------
if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true -> true = true -> SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
Cond2 : true = true
Cond3 : if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true
---------------------------------------
true = true -> SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:18.)
=================================================
Progress: 909


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
Cond2 : true = true
Cond3 : if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true
---------------------------------------
true = true -> SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond4(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
Cond2 : true = true
Cond3 : if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true
Cond4 : true = true
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 1(rank:30.)
rewrite <- IH2 in goal at 1(rank:30.)
=================================================
Progress: 910


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
Cond2 : true = true
Cond3 : if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true
Cond4 : true = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 19.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
Cond2 : true = true
Cond3 : if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true
Cond4 : true = true
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 2(rank:31.)
rewrite <- IH1 in goal at 1(rank:39.)
rewrite <- IH2 in goal at 2(rank:31.)
rewrite <- IH2 in goal at 1(rank:39.)
=================================================
Progress: 911


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) = targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (SUCC (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) = SUCC (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))
asdf
previous tactics
simpl in goal
case lq (targetNew (tree2)) (SUCC (ZERO))
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 912


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 1
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(_)))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
case lq (targetNew (tree2)) (SUCC (ZERO))
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 913


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (ZERO)) = ZERO
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
case lq (targetNew (tree2)) (SUCC (ZERO))
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 914


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH2 in goal at 1
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(targetNew(tree3))))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (targetNew (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
case lq (targetNew (tree2)) (SUCC (ZERO))
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 915


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH2 in goal at 2(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
=================================================
Progress: 916


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))) (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (SUCC (SUCC (SUCC (ZERO))))) (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (SUCC (ZERO))) = SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
=================================================
Progress: 917


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
=================================================
Progress: 918


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
=================================================
Progress: 919


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 2(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 920


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (SUCC (ZERO))) = SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))))))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))))))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))))))
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (targetNew (tree2)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (Leaf))))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (Leaf)))))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
=================================================
Progress: 921


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf) (Leaf)))) (SUCC (targetNew (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf) (Leaf)))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (targetNew (tree2)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
=================================================
Progress: 922


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (ZERO)) = ZERO
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (Leaf))))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (Leaf)))))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf)))))) = targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (targetNew (tree2)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Lemma List
forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 923


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 924


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 925


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), true = true -> SUCC (SUCC (ZERO)) = SUCC (targetNew (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 926


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), true = true -> SUCC (SUCC (ZERO)) = SUCC (targetNew (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (tree2:tree), SUCC (SUCC (ZERO)) = SUCC (targetNew (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 927


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (tree2:tree), SUCC (SUCC (ZERO)) = SUCC (targetNew (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
SUCC (SUCC (ZERO)) = SUCC (targetNew (Leaf))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 928


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
SUCC (SUCC (ZERO)) = SUCC (targetNew (Leaf))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
SUCC (SUCC (ZERO)) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 929


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 930


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Leaf)) (Leaf))) (Leaf)) (Leaf)) (Leaf)) (Leaf)) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf)))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (SUCC (ZERO)))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf))) (Node (ZERO) (Leaf) (Leaf)))))) = plus (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite IH1 in goal at 0
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (spec (target (Leaf)))) = plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
=================================================
Progress: 931


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 932


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (targetNew (Leaf)) (targetNew (Leaf))) = plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (targetNew (Leaf)) (targetNew (Leaf))) = plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: SUCC (plus (targetNew (Leaf)) (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))) = plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (targetNew (Leaf)) (spec (target (Leaf)))) = plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (targetNew (Leaf)) (spec (target (Leaf)))) = plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (spec (target (Leaf)))) = plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (SUCC (ZERO)))) (spec (target (Leaf)))) = plus (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO))
=================================================
Progress: 933


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 934


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite IH1 in goal at 2
rewrite IH2 in goal at 0
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite IH1 in goal at 2
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (SUCC (ZERO)))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) = plus (plus (targetNew (Leaf)) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf)) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 935


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:18.)
=================================================
Progress: 936


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (spec (target (Leaf))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 937


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (spec (target (Leaf))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:19.)
=================================================
Progress: 938


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (plus (nat1) (targetNew (Leaf))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19.)
=================================================
Progress: 939


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (plus (nat1) (targetNew (Leaf))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:19.)
=================================================
Progress: 940


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:19.)
=================================================
Progress: 941


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:19.)
=================================================
Progress: 942


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
---------------------------------------
forall (nat1:nat), true = true -> true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:19.)
=================================================
Progress: 943


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond4(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:20.)
=================================================
Progress: 944


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 20.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:19.)
=================================================
Progress: 945


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:19.)
=================================================
Progress: 946


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 19.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
Cond1 : nat_eq (ZERO) (ZERO) = true
Cond2 : true = true
Cond3 : true = true
Cond4 : true = true
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:27.)
rewrite <- IH1 in goal at 0(rank:27.)
=================================================
Progress: 947


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 3(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 948


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite IH1 in goal at 3
rewrite IH2 in goal at 0
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (targetNew (Leaf))) = plus (plus (SUCC (SUCC (ZERO))) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite IH1 in goal at 3
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (spec (target (Leaf)))) = plus (plus (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
=================================================
Progress: 949


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite IH2 in goal at 0
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))))) = plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
=================================================
Progress: 950


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 0
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (Leaf))))))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
=================================================
Progress: 951


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 1
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (spec (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (spec (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)))))) = plus (plus (ZERO) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (ZERO) (Leaf) (Leaf)))))) = plus (plus (SUCC (ZERO)) (targetNew (Leaf))) (SUCC (ZERO))
=================================================
Progress: 952


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 2
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Leaf))))) (Leaf)))))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
=================================================
Progress: 953


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
rewrite IH1 in goal at 0
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (SUCC (ZERO)))) (targetNew (Leaf))) = plus (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (SUCC (ZERO)))) (targetNew (Leaf))) = plus (plus (SUCC (SUCC (SUCC (ZERO)))) (targetNew (Leaf))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))
=================================================
Progress: 954


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
rewrite IH1 in goal at 1
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (spec (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (spec (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (targetNew (Leaf))) = plus (plus (SUCC (SUCC (ZERO))) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))))) = plus (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf))))) = plus (plus (SUCC (ZERO)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 955


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction nat1(rank:14.)
induction tree1(rank:14.)
induction tree2(rank:14.)
=================================================
Progress: 956


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (plus (ZERO) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 957


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (plus (ZERO) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (targetNew (tree2)) = plus (plus (spec (target (tree1))) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction tree1(rank:15.)
induction tree2(rank:15.)
=================================================
Progress: 958


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (Leaf))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 959


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (Leaf))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:15.)
induction tree2(rank:15.)
=================================================
Progress: 960


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (Leaf))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 961


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (Leaf))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:15.)
induction tree1(rank:15.)
=================================================
Progress: 962


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (targetNew (tree2)) = plus (plus (spec (target (tree1))) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), SUCC (targetNew (tree2)) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 963


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), SUCC (targetNew (tree2)) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), SUCC (targetNew (tree2)) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 964


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), SUCC (targetNew (tree2)) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (targetNew (Leaf)) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 965


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (targetNew (Leaf)) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (targetNew (Node (nat2) (tree3) (tree4))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 966


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (targetNew (Node (nat2) (tree3) (tree4))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:8.)
rewrite <- IH1 in goal at 3(rank:15.)
rewrite <- IH2 in goal at 3(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
=================================================
Progress: 967


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 1(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 968


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (targetNew (tree2)) = plus (plus (spec (target (tree1))) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (tree1:tree), SUCC (targetNew (Leaf)) = plus (plus (spec (target (tree1))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 969


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (tree1:tree), SUCC (targetNew (Leaf)) = plus (plus (spec (target (tree1))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (tree1:tree), SUCC (ZERO) = plus (plus (spec (target (tree1))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 970


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (tree1:tree), SUCC (ZERO) = plus (plus (spec (target (tree1))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
Base3 : tree1 = Leaf
---------------------------------------
SUCC (ZERO) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 971


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
Base3 : tree1 = Leaf
---------------------------------------
SUCC (ZERO) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (spec (target (tree4))) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (spec (target (Node (nat2) (tree3) (tree4)))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 972


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (spec (target (tree4))) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (spec (target (Node (nat2) (tree3) (tree4)))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (spec (target (tree4))) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
parent
target (tree3)
lower
target(_)
upper
SUCC(plus(plus(plus(spec(_), spec(target(tree4))), ZERO()), SUCC(ZERO())))
remove upper
target(tree3)
remove lower
target(_)
validate generalize_common_subterm_goal
Prop: ZERO = plus (plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (Leaf))))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 973


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), SUCC (plus (ZERO) (targetNew (tree2))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 974


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), SUCC (plus (ZERO) (targetNew (tree2))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), SUCC (targetNew (tree2)) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 975


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), SUCC (targetNew (tree2)) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (targetNew (Leaf)) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 976


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (targetNew (Leaf)) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (targetNew (Node (nat2) (tree3) (tree4))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 977


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (targetNew (Node (nat2) (tree3) (tree4))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:8.)
rewrite <- IH1 in goal at 3(rank:15.)
rewrite <- IH2 in goal at 3(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
=================================================
Progress: 978


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 1(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 979


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (targetNew (Leaf))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 980


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (targetNew (Leaf))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 981


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 982


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 983


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 984


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (plus (ZERO) (ZERO)) = plus (plus (spec (target (tree1))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 985


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (plus (ZERO) (ZERO)) = plus (plus (spec (target (tree1))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (ZERO) = plus (plus (spec (target (tree1))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 986


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (ZERO) = plus (plus (spec (target (tree1))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
Base3 : tree1 = Leaf
---------------------------------------
SUCC (ZERO) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 987


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
Base3 : tree1 = Leaf
---------------------------------------
SUCC (ZERO) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (spec (target (tree4))) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (spec (target (Node (nat2) (tree3) (tree4)))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 988


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (spec (target (tree4))) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (spec (target (Node (nat2) (tree3) (tree4)))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (spec (target (tree4))) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
parent
target (tree3)
lower
target(_)
upper
SUCC(plus(plus(plus(spec(_), spec(target(tree4))), ZERO()), SUCC(ZERO())))
remove upper
target(tree3)
remove lower
target(_)
validate generalize_common_subterm_goal
Prop: ZERO = plus (plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (plus (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))) (Leaf)) (Leaf)))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)))) (Leaf)))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 989


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (Leaf))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 990


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (Leaf))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 991


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 992


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 993


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 994


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 3(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:8.)
rewrite <- IH2 in goal at 2(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
=================================================
Progress: 995


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 996


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 3(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:8.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 997


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 998


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 3(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:8.)
rewrite <- IH2 in goal at 2(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
=================================================
Progress: 999


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1000


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 3(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:8.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 1001


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1002


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 1003


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (targetNew (Node (nat2) (tree3) (tree4)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 1004


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (targetNew (Node (nat2) (tree3) (tree4)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:7.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 1005


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
rewrite <- IH1 in goal at 2(rank:15.)
rewrite <- IH2 in goal at 2(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
induction nat1(rank:16.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 1006


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) = SUCC (plus (nat1) (targetNew (tree3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:7.)
=================================================
Progress: 1007


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) = SUCC (plus (nat1) (targetNew (tree3)))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
induction nat1(rank:16.)
rewrite IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 1008


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) = SUCC (plus (nat1) (targetNew (tree4)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:7.)
=================================================
Progress: 1009


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3)))) = SUCC (plus (nat1) (targetNew (tree4)))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
induction nat1(rank:16.)
rewrite IH2 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 1010


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 1011


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (Node (nat2) (tree3) (tree4)))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 1012


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (Node (nat2) (tree3) (tree4)))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (nat1)) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:14.)
induction nat1(rank:15.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 1013


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (nat1)) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (nat1)) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:6.)
=================================================
Progress: 1014


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (nat1)) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
---------------------------------------
plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (nat1)) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
intro nat1
Prop: plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (plus (SUCC (ZERO)) (spec (target (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (plus (SUCC (SUCC (ZERO))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (SUCC (SUCC (ZERO))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (SUCC (SUCC (ZERO))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (SUCC (SUCC (ZERO))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))))) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1015


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (nat1)) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (nat1)) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:6.)
=================================================
Progress: 1016


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (nat1)) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
---------------------------------------
plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (nat1)) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH2 in goal at 0
intro nat1
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (Leaf))) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (ZERO)) (ZERO)) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (Leaf))) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: plus (plus (spec (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (spec (target (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (ZERO))) (SUCC (ZERO)))
asdf
=================================================
Progress: 1017


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 1018


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
rewrite <- IH1 in goal at 0(rank:23.)
=================================================
Progress: 1019


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (nat1)) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1020


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = plus (plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (spec (target (Leaf))) (spec (target (Node (SUCC (SUCC (ZERO))) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf))) (Leaf))))) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Node (ZERO) (Leaf) (Leaf))))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1021


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1022


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1023


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1024


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
asdf
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH2 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))
asdf
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1025


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1026


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) (SUCC (targetNew (Leaf))) = targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (Leaf)))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (Leaf))))) (SUCC (targetNew (Leaf))) = targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
asdf
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1027


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1028


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)))))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (Leaf))))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH2 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Leaf))
previous tactics
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
Lemma List
forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1029


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 1030


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (tree2)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1031


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (tree2)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), true = true -> SUCC (ZERO) = targetNew (tree2)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 1032


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), true = true -> SUCC (ZERO) = targetNew (tree2)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (tree2:tree), SUCC (ZERO) = targetNew (tree2)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 1033


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (tree2:tree), SUCC (ZERO) = targetNew (tree2)

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
SUCC (ZERO) = targetNew (Leaf)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1034


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
SUCC (ZERO) = targetNew (Leaf)

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
SUCC (ZERO) = ZERO

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 1035


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1036


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1037


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree3)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1038


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree3)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1039


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1040


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1041


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree3)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1042


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree3)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1043


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1044


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1045


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
rewrite IH1 in goal at 2
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (targetNew (Leaf))) = plus (plus (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
=================================================
Progress: 1046


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (Leaf))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) = plus (plus (ZERO) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))) = plus (plus (SUCC (ZERO)) (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Leaf))))) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))))) = plus (plus (SUCC (ZERO)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (SUCC (ZERO)) (targetNew (Leaf))) (SUCC (ZERO))
=================================================
Progress: 1047


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 1048


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 2
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 2
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf))))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO))
=================================================
Progress: 1049


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 2
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
=================================================
Progress: 1050


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (SUCC (SUCC (ZERO))))) (targetNew (Leaf))) = plus (plus (SUCC (SUCC (SUCC (SUCC (ZERO))))) (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)))))) (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf))))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)))))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (spec (target (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (spec (target (Leaf)))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))
=================================================
Progress: 1051


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (targetNew (Leaf))) = plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
=================================================
Progress: 1052


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 1053


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (spec (target (Leaf)))) = plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Node (ZERO) (Leaf) (Leaf)))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (SUCC (ZERO)))) (targetNew (Leaf))) = plus (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
=================================================
Progress: 1054


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 1055


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (Leaf)) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (Leaf)) (Leaf)))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Leaf))) (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (SUCC (ZERO)))) (targetNew (Leaf))) = plus (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
=================================================
Progress: 1056


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 1057


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (spec (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (spec (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 1058


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction nat1(rank:14.)
induction tree1(rank:14.)
induction tree2(rank:14.)
=================================================
Progress: 1059


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (plus (ZERO) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 1060


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (plus (ZERO) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (spec (target (tree2))) = plus (plus (spec (target (tree1))) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction tree1(rank:15.)
induction tree2(rank:15.)
=================================================
Progress: 1061


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (Leaf))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 1062


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (Leaf))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:15.)
induction tree2(rank:15.)
=================================================
Progress: 1063


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (Leaf)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 1064


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (spec (target (Leaf)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:15.)
induction tree1(rank:15.)
=================================================
Progress: 1065


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (spec (target (tree2))) = plus (plus (spec (target (tree1))) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), SUCC (spec (target (tree2))) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1066


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), SUCC (spec (target (tree2))) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), SUCC (spec (target (tree2))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 1067


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), SUCC (spec (target (tree2))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (spec (target (Leaf))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 1068


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (spec (target (Leaf))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (spec (target (Node (nat2) (tree3) (tree4)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1069


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (spec (target (Node (nat2) (tree3) (tree4)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:15.)
=================================================
Progress: 1070


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree) (tree2:tree), SUCC (spec (target (tree2))) = plus (plus (spec (target (tree1))) (ZERO)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (tree1:tree), SUCC (spec (target (Leaf))) = plus (plus (spec (target (tree1))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1071


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (tree1:tree), SUCC (spec (target (Leaf))) = plus (plus (spec (target (tree1))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (tree1:tree), SUCC (ZERO) = plus (plus (spec (target (tree1))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 1072


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (tree1:tree), SUCC (ZERO) = plus (plus (spec (target (tree1))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
Base3 : tree1 = Leaf
---------------------------------------
SUCC (ZERO) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 1073


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
Base3 : tree1 = Leaf
---------------------------------------
SUCC (ZERO) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (spec (target (tree4))) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (spec (target (Node (nat2) (tree3) (tree4)))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1074


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (spec (target (tree4))) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (spec (target (Node (nat2) (tree3) (tree4)))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (spec (target (tree4))) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
parent
target (tree3)
lower
target(_)
upper
SUCC(plus(plus(plus(spec(_), spec(target(tree4))), ZERO()), SUCC(ZERO())))
remove upper
target(tree3)
remove lower
target(_)
validate generalize_common_subterm_goal
Prop: ZERO = plus (plus (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)))))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1075


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), SUCC (plus (ZERO) (spec (target (tree2)))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1076


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), SUCC (plus (ZERO) (spec (target (tree2)))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), SUCC (spec (target (tree2))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 1077


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), SUCC (spec (target (tree2))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (spec (target (Leaf))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 1078


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (spec (target (Leaf))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (spec (target (Node (nat2) (tree3) (tree4)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1079


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (spec (target (Node (nat2) (tree3) (tree4)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:15.)
=================================================
Progress: 1080


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (spec (target (Leaf)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1081


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (spec (target (Leaf)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1082


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 1083


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1084


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 1085


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (plus (ZERO) (ZERO)) = plus (plus (spec (target (tree1))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1086


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (plus (ZERO) (ZERO)) = plus (plus (spec (target (tree1))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (ZERO) = plus (plus (spec (target (tree1))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 1087


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), SUCC (ZERO) = plus (plus (spec (target (tree1))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
Base3 : tree1 = Leaf
---------------------------------------
SUCC (ZERO) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 1088


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
Base3 : tree1 = Leaf
---------------------------------------
SUCC (ZERO) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (spec (target (tree4))) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (spec (target (Node (nat2) (tree3) (tree4)))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1089


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (spec (target (tree4))) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = plus (plus (spec (target (Node (nat2) (tree3) (tree4)))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (ZERO) = plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))
IH2 : SUCC (ZERO) = plus (plus (spec (target (tree4))) (ZERO)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
parent
target (tree3)
lower
target(_)
upper
SUCC(plus(plus(plus(spec(_), spec(target(tree4))), ZERO()), SUCC(ZERO())))
remove upper
target(tree3)
remove lower
target(_)
validate generalize_common_subterm_goal
Prop: ZERO = plus (plus (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (spec (target (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (spec (target (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1090


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (Leaf))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1091


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (Leaf))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1092


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 1093


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1094


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (SUCC (nat2)) (ZERO)) = plus (SUCC (nat2)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 1095


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (spec (target (Leaf))))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (spec (target (Leaf))))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Leaf)))) = spec (target (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = SUCC (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))))))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
parent
target (tree3)
lower
target(_)
upper
SUCC(SUCC(plus(spec(_), spec(target(tree4)))))
remove upper
target(tree3)
remove lower
target(_)
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf))))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
asdf
=================================================
Progress: 1096


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
parent
target (tree3)
lower
target(_)
upper
SUCC(SUCC(plus(spec(_), spec(target(tree4)))))
remove upper
target(tree3)
remove lower
target(_)
parent
target (tree4)
lower
target(_)
upper
SUCC(spec(_))
remove upper
target(tree4)
remove lower
target(tree4)
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (SUCC (ZERO))))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (spec (target (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf))))))) = SUCC (spec (target (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf)))))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) = SUCC (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))
asdf
previous tactics
simpl in goal
parent
target (tree3)
lower
target(_)
upper
SUCC(SUCC(plus(spec(_), spec(target(tree4)))))
remove upper
target(tree3)
remove lower
target(_)
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
asdf
=================================================
Progress: 1097


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
Prop: SUCC (SUCC (plus (SUCC (SUCC (SUCC (ZERO)))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (SUCC (SUCC (SUCC (ZERO))))
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Leaf))))))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (spec (target (Leaf))))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (Leaf)))) (Leaf))) (Leaf)) (Leaf))))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (spec (target (Leaf)))) = spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) (spec (target (Leaf))))) = SUCC (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (spec (target (Leaf))))) = SUCC (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))
asdf
previous tactics
simpl in goal
parent
target (tree3)
lower
target(_)
upper
SUCC(SUCC(plus(spec(_), spec(target(tree4)))))
remove upper
target(tree3)
remove lower
target(_)
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
asdf
=================================================
Progress: 1098


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
parent
target (tree3)
lower
target(_)
upper
SUCC(SUCC(plus(spec(_), spec(target(tree4)))))
remove upper
target(tree3)
remove lower
target(_)
parent
target (tree4)
lower
target(_)
upper
SUCC(spec(_))
remove upper
target(tree4)
remove lower
target(tree4)
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
parent
target (tree3)
lower
target(_)
upper
SUCC(SUCC(plus(spec(_), spec(target(tree4)))))
remove upper
target(tree3)
remove lower
target(_)
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (spec (target (Leaf))))) = SUCC (ZERO)
asdf
=================================================
Progress: 1099


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 1100


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (spec (target (Node (nat2) (tree3) (tree4))))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 1101


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (spec (target (Node (nat2) (tree3) (tree4))))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:14.)
induction nat1(rank:15.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 1102


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (spec (target (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:14.)
induction nat1(rank:15.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 1103


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = SUCC (plus (nat1) (spec (target (tree3))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 1104


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = SUCC (plus (nat1) (spec (target (tree3))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = SUCC (plus (ZERO) (spec (target (tree3))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1105


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = SUCC (plus (ZERO) (spec (target (tree3))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 1106


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 1107


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (ZERO)))))) = SUCC (SUCC (SUCC (SUCC (ZERO))))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = spec (target (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf))))) (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf))))))) = SUCC (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf)))))
asdf
previous tactics
simpl in goal
rewrite IH2 in goal at 0
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (SUCC (ZERO)) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) (SUCC (ZERO)) = spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (spec (target (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (spec (target (Node (ZERO) (Leaf) (Leaf))))
asdf
previous tactics
simpl in goal
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (spec (target (Leaf))))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (spec (target (Leaf))))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (spec (target (Leaf))))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))))) = SUCC (spec (target (Node (ZERO) (Leaf) (Leaf))))
asdf
=================================================
Progress: 1108


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = SUCC (plus (nat1) (spec (target (tree4))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 1109


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = SUCC (plus (nat1) (spec (target (tree4))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = SUCC (plus (ZERO) (spec (target (tree4))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1110


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = SUCC (plus (ZERO) (spec (target (tree4))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 1111


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 1112


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)))))))))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf))) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf))))) (Leaf)))) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf)) (Leaf)))) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (SUCC (ZERO))))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf))))) = spec (target (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)))) (spec (target (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)))))) = SUCC (spec (target (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))))) = SUCC (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) = SUCC (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))
asdf
=================================================
Progress: 1113


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (spec (target (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (spec (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (spec (target (tree3))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 1114


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (spec (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (spec (target (tree3))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (spec (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (spec (target (tree3))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1115


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (spec (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (spec (target (tree3))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 1116


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (spec (target (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (spec (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (spec (target (tree4))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:15.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 1117


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 1118


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (plus (nat2) (ZERO)) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (Node (nat2) (tree3) (tree4)))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 1119


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (Node (nat2) (tree3) (tree4)))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (nat1)) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:14.)
induction nat1(rank:15.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 1120


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (nat1)) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (nat1)) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:6.)
=================================================
Progress: 1121


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (nat1)) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
---------------------------------------
plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (nat1)) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
intro nat1
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) (ZERO)) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (plus (SUCC (SUCC (ZERO))) (spec (target (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO)))
Prop: plus (plus (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1122


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (nat1)) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (nat1)) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:6.)
=================================================
Progress: 1123


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (nat1)) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
---------------------------------------
plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (nat1)) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH2 in goal at 0
intro nat1
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (Leaf))) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf))))) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (Leaf))) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (Leaf))) (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: plus (plus (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (Leaf))) (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)))
Prop: plus (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1124


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1125


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree4)))))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 1126


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 1127


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (Leaf))))) (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (Leaf)))))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (spec (target (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
asdf
=================================================
Progress: 1128


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (spec (target (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (spec (target (tree3))) (SUCC (ZERO)))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1129


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (spec (target (tree3))) (SUCC (ZERO)))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 1130


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (spec (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (spec (target (tree4))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (spec (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (spec (target (tree4))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1131


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (spec (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (spec (target (tree4))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 1132


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (nat1)) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1133


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree3))) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (spec (target (tree4))) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (plus (spec (target (tree3))) (spec (target (tree4)))) (ZERO)) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = plus (plus (plus (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (plus (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (plus (spec (target (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1134


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (spec (target (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = SUCC (plus (nat1) (spec (target (tree3))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 1135


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = SUCC (plus (nat1) (spec (target (tree3))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = SUCC (plus (ZERO) (spec (target (tree3))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1136


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = SUCC (plus (ZERO) (spec (target (tree3))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7.)
=================================================
Progress: 1137


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 1138


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (spec (target (Leaf))))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (ZERO) (Leaf) (Leaf))))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
Prop: SUCC (plus (SUCC (ZERO)) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (ZERO))) = SUCC (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (spec (target (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
asdf
=================================================
Progress: 1139


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (spec (target (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 22.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 1140


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = plus (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1141


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7.)
=================================================
Progress: 1142


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 1143


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (spec (target (Leaf))))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))))) (spec (target (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
asdf
=================================================
Progress: 1144


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (spec (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (spec (target (tree4))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = SUCC (plus (nat1) (spec (target (tree4))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 1145


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = SUCC (plus (nat1) (spec (target (tree4))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = SUCC (plus (ZERO) (spec (target (tree4))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1146


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (spec (target (tree3))) (spec (target (tree3)))))) = SUCC (plus (ZERO) (spec (target (tree4))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7.)
=================================================
Progress: 1147


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 1148


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (SUCC (SUCC (ZERO))))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (Leaf)))) (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))))) = SUCC (spec (target (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))))) = SUCC (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = spec (target (Node (ZERO) (Leaf) (Leaf)))
Prop: plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
asdf
=================================================
Progress: 1149


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 3(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 1150


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 3
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = plus (plus (ZERO) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)))))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = plus (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (ZERO) (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
=================================================
Progress: 1151


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (SUCC (SUCC (ZERO))))) (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf))))) = plus (plus (SUCC (SUCC (SUCC (SUCC (ZERO))))) (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (SUCC (SUCC (ZERO)))) (spec (target (Leaf)))) = plus (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
=================================================
Progress: 1152


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: SUCC (plus (targetNew (Leaf)) (targetNew (Leaf))) = plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (targetNew (Leaf)) (targetNew (Leaf))) = plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (targetNew (Leaf)) (targetNew (Leaf))) = plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (Leaf))) (Node (ZERO) (Leaf) (Leaf)))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
=================================================
Progress: 1153


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite IH1 in goal at 2
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
=================================================
Progress: 1154


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite <- IH2 in goal at 0
rewrite IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: SUCC (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (spec (target (Leaf)))) = plus (plus (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) (SUCC (ZERO))
Prop: SUCC (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (spec (target (Leaf)))) = plus (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))
Prop: SUCC (plus (targetNew (Leaf)) (spec (target (Leaf)))) = plus (plus (spec (target (Leaf))) (spec (target (Leaf)))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
=================================================
Progress: 1155


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite <- IH2 in goal at 0
rewrite IH1 in goal at 2
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case lq (spec (target (tree2))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
=================================================
Progress: 1156


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (spec (target (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = spec (target (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (spec (target (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))) = SUCC (SUCC (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = spec (target (Leaf))
Prop: SUCC (plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
asdf
=================================================
Progress: 1157


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = spec (target (Leaf))
Prop: SUCC (plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
asdf
=================================================
Progress: 1158


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
induction nat1(rank:16.)
rewrite IH2 in goal at 1(rank:15.)
rewrite IH2 in goal at 2(rank:23.)
=================================================
Progress: 1159


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1160


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1161


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1162


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1163


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)))
Lemma List
forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (targetNew (tree2)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1164


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (targetNew (tree2)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (targetNew (tree2)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (targetNew (tree2)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 1165


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (targetNew (tree2)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (targetNew (tree2)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (targetNew (tree2)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> plus (targetNew (tree2)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1166


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (targetNew (tree2)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> plus (targetNew (tree2)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (targetNew (tree2)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), true = true -> plus (targetNew (tree2)) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 1167


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (targetNew (tree2)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), true = true -> plus (targetNew (tree2)) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (targetNew (tree2)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (tree2:tree), plus (targetNew (tree2)) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 1168


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (targetNew (tree2)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (tree2:tree), plus (targetNew (tree2)) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (targetNew (tree2)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1169


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (targetNew (tree2)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (targetNew (tree2)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
SUCC (ZERO) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 1170


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1171


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1172


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1173


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1174


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1175


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
induction nat1(rank:16.)
=================================================
Progress: 1176


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1177


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1178


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1179


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1180


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)))
=================================================
Progress: 1181


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1182


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1183


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1184


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)))
Lemma List
forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (ZERO) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1185


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (ZERO) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))(rank : 0.)


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (ZERO) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (ZERO) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 1186


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (ZERO) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (ZERO) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (ZERO) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1187


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (ZERO) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (ZERO) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
true = true -> SUCC (ZERO) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 1188


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (ZERO) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
true = true -> SUCC (ZERO) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (ZERO) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
SUCC (ZERO) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
=================================================
Progress: 1189


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15.)
induction nat1(rank:16.)
=================================================
Progress: 1190


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 2(rank:15.)
induction nat1(rank:16.)
=================================================
Progress: 1191


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
rewrite IH2 in goal at 0(rank:23.)
=================================================
Progress: 1192


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1193


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1194


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1195


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1196


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1197


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1198


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1199


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
simpl in goal
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1200


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1201


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (SUCC (ZERO))) (ZERO)) (SUCC (ZERO)))
Prop: plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (SUCC (ZERO))) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1202


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = ZERO
Prop: plus (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (ZERO)) (SUCC (ZERO)) = ZERO
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (spec (target (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1203


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Leaf))))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = ZERO
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = ZERO
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (spec (target (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1204


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (spec (target (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (plus (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (ZERO)) (SUCC (ZERO)) = spec (target (Leaf))
Prop: SUCC (plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))))
Prop: SUCC (plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))
Prop: SUCC (plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
asdf
=================================================
Progress: 1205


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (spec (target (tree3))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Leaf)))) (SUCC (SUCC (ZERO))))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))))) = spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf))))) = spec (target (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (spec (target (Node (ZERO) (Leaf) (Leaf))))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (ZERO)) (SUCC (ZERO)) = spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO)) = spec (target (Leaf))
Prop: SUCC (plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
asdf
=================================================
Progress: 1206


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1207


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1208


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1209


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1210


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1211


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1212


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1213


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1214


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1215


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
simpl in goal
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1216


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
rewrite <- IH2 in goal at 1(rank:23.)
=================================================
Progress: 1217


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1218


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1219


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1220


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1221


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1222


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1223


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1224


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1225


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1226


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1227


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1228


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
simpl in goal
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1229


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 1230


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (spec (target (Leaf)))) = plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 0
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))) = plus (plus (SUCC (ZERO)) (targetNew (Leaf))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (targetNew (Leaf))) = plus (plus (SUCC (SUCC (ZERO))) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = plus (plus (ZERO) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))
=================================================
Progress: 1231


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 1232


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (targetNew (tree2)) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 1
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (SUCC (SUCC (SUCC (ZERO)))) (spec (target (Leaf)))) = plus (plus (spec (target (Leaf))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (spec (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 1
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) = plus (plus (spec (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (spec (target (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) = plus (plus (spec (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
=================================================
Progress: 1233


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 1234


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 2
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
=================================================
Progress: 1235


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 1236


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (ZERO) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
=================================================
Progress: 1237


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = plus (plus (ZERO) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (SUCC (ZERO)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (ZERO) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (SUCC (ZERO)) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Leaf))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))
=================================================
Progress: 1238


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree3)) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))(rank:8.)
=================================================
Progress: 1239


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree3)) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 1(rank:16.)
rewrite IH1 in goal at 0(rank:24.)
rewrite IH1 in goal at 2(rank:24.)
=================================================
Progress: 1240


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1241


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
rewrite IH1 in goal at 1
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Leaf)))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
rewrite IH1 in goal at 1
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf))))) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))
asdf
=================================================
Progress: 1242


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))(rank:8.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
=================================================
Progress: 1243


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 1(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1244


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1245


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (SUCC (SUCC (ZERO))))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (targetNew (Leaf))) = targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (ZERO)) = targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1246


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1247


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
rewrite <- IH2 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1248


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (targetNew (tree3)) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
=================================================
Progress: 1249


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))(rank:8.)
=================================================
Progress: 1250


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 1(rank:16.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
=================================================
Progress: 1251


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1252


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
rewrite IH2 in goal at 1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (Node (ZERO) (Leaf) (Leaf)))))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (Node (ZERO) (Leaf) (Leaf))))))) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (Node (ZERO) (Leaf) (Leaf)))))))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
rewrite IH2 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Node (SUCC (ZERO)) (Leaf) (Leaf))))
asdf
=================================================
Progress: 1253


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))(rank:8.)
rewrite <- IH1 in goal at 0(rank:23.)
=================================================
Progress: 1254


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 1(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1255


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1256


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf))))) = SUCC (SUCC (SUCC (SUCC (ZERO))))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1257


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1258


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (SUCC (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (SUCC (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
rewrite <- IH2 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (Leaf))
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (Leaf))) (Leaf))))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (Leaf))) (Leaf)))))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) (Leaf)) (Leaf)))) (targetNew (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) (Leaf)) (Leaf))))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1259


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 1260


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (SUCC (SUCC (SUCC (ZERO))))) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (SUCC (SUCC (SUCC (ZERO))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (SUCC (ZERO))) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (ZERO) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = ZERO
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO) then SUCC (targetNew (Leaf)) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (ZERO) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (ZERO) then SUCC (targetNew (Leaf)) else targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (Leaf))) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) then SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 2
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) else targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (ZERO)
asdf
=================================================
Progress: 1261


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree3)) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))(rank:8.)
=================================================
Progress: 1262


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree3)) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 1(rank:16.)
rewrite IH1 in goal at 0(rank:24.)
rewrite IH1 in goal at 2(rank:24.)
=================================================
Progress: 1263


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1264


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
rewrite IH1 in goal at 1
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf)))) = targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
rewrite IH1 in goal at 1
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Leaf)))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
=================================================
Progress: 1265


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))(rank:8.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
=================================================
Progress: 1266


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 1(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1267


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1268


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (SUCC (SUCC (ZERO))))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (targetNew (Leaf))) = targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1269


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1270


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) = targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)) (Leaf)) (Leaf))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
rewrite <- IH2 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1271


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (targetNew (tree3)) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
=================================================
Progress: 1272


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))(rank:8.)
=================================================
Progress: 1273


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 1(rank:16.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
=================================================
Progress: 1274


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1275


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
rewrite IH2 in goal at 1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
rewrite IH2 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))))) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
=================================================
Progress: 1276


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))(rank:8.)
rewrite <- IH1 in goal at 0(rank:23.)
=================================================
Progress: 1277


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 1(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1278


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1279


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (SUCC (SUCC (SUCC (ZERO))))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf))))) (SUCC (targetNew (Leaf))) = targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf)))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1280


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1281


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))))) (targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))))) (SUCC (targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) = targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
rewrite <- IH2 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1282


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 1283


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (ZERO) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (ZERO) then SUCC (targetNew (Leaf)) else targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (ZERO) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = ZERO
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (ZERO) then SUCC (targetNew (Leaf)) else targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (ZERO) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO) then SUCC (targetNew (Leaf)) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) then SUCC (targetNew (Leaf)) else targetNew (Node (ZERO) (Leaf) (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) then SUCC (targetNew (Leaf)) else targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf))) (Leaf))) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) then SUCC (targetNew (Leaf)) else targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 2
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf))) else targetNew (Node (ZERO) (Leaf) (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))) else targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Leaf)))) = SUCC (ZERO)
asdf
=================================================
Progress: 1284


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))(rank:8.)
=================================================
Progress: 1285


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:16.)
rewrite IH1 in goal at 0(rank:24.)
=================================================
Progress: 1286


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
=================================================
Progress: 1287


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (SUCC (SUCC (SUCC (ZERO))))) (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (if lq (SUCC (SUCC (SUCC (SUCC (ZERO))))) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else SUCC (SUCC (SUCC (SUCC (ZERO)))))) = SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (if lq (SUCC (ZERO)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (if lq (SUCC (SUCC (ZERO))) (SUCC (ZERO)) then SUCC (ZERO) else SUCC (SUCC (ZERO)))) = SUCC (SUCC (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
asdf
=================================================
Progress: 1288


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 2
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (if lq (SUCC (ZERO)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else SUCC (ZERO))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (if lq (SUCC (ZERO)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else ZERO)) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Node (ZERO) (Leaf) (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (if lq (SUCC (ZERO)) (SUCC (ZERO)) then SUCC (ZERO) else SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (if lq (SUCC (SUCC (ZERO))) (SUCC (ZERO)) then SUCC (ZERO) else SUCC (SUCC (ZERO)))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)))) = SUCC (ZERO)
asdf
=================================================
Progress: 1289


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree3)) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))(rank:8.)
=================================================
Progress: 1290


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree3)) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite IH2 in goal at 0(rank:24.)
=================================================
Progress: 1291


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1292


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
rewrite <- IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Leaf))) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Leaf))) (Leaf)))) (if lq (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Leaf))) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Leaf))) (Leaf))) = targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Leaf)))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
asdf
=================================================
Progress: 1293


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (targetNew (tree3)) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
rewrite <- IH1 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))) else targetNew (Node (ZERO) (Leaf) (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))) else targetNew (Node (ZERO) (Leaf) (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) = targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Leaf)) (Leaf))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = SUCC (ZERO)
asdf
=================================================
Progress: 1294


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))(rank:8.)
=================================================
Progress: 1295


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:16.)
rewrite IH1 in goal at 0(rank:24.)
=================================================
Progress: 1296


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
=================================================
Progress: 1297


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (SUCC (SUCC (SUCC (ZERO))))) (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (if lq (SUCC (SUCC (SUCC (SUCC (ZERO))))) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else SUCC (SUCC (SUCC (SUCC (ZERO)))))) = SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (if lq (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (ZERO))))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) then SUCC (ZERO) else SUCC (SUCC (SUCC (ZERO))))) = SUCC (SUCC (SUCC (SUCC (ZERO))))
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (if lq (SUCC (ZERO)) (SUCC (ZERO)) then SUCC (ZERO) else SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))) (Leaf)) (Leaf)))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))) (Leaf)) (Leaf))))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))) (Leaf)) (Leaf)))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))) (Leaf)) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))) (Leaf)) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = SUCC (ZERO)
asdf
=================================================
Progress: 1298


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 2
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (if lq (SUCC (ZERO)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else ZERO)) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else ZERO)) = SUCC (ZERO)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))) else targetNew (Node (ZERO) (Leaf) (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (if lq (SUCC (ZERO)) (SUCC (ZERO)) then SUCC (ZERO) else SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (if lq (SUCC (ZERO)) (SUCC (ZERO)) then SUCC (ZERO) else SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (ZERO)
asdf
=================================================
Progress: 1299


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree3)) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))(rank:8.)
=================================================
Progress: 1300


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree3)) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite IH2 in goal at 0(rank:24.)
=================================================
Progress: 1301


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1302


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
rewrite <- IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))))) (if lq (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))))) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))) (SUCC (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))) then SUCC (ZERO) else targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (if lq (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (SUCC (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) then SUCC (ZERO) else targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (SUCC (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))))))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (if lq (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))))) (if lq (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
asdf
=================================================
Progress: 1303


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (targetNew (tree3)) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
rewrite <- IH1 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf))))) (if lq (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)))) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)))) else targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) else targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf))) (Leaf))) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Leaf)) (Leaf))))
asdf
previous tactics
simpl in goal
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
asdf
=================================================
Progress: 1304


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3))))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1305


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3))))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3))))) = SUCC (plus (ZERO) (targetNew (tree3)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1306


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3))))) = SUCC (plus (ZERO) (targetNew (tree3)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 1307


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1308


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: SUCC (SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (targetNew (Leaf)))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (targetNew (Leaf)))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (plus (SUCC (SUCC (SUCC (SUCC (ZERO))))) (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (targetNew (Leaf)))) = SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (targetNew (Leaf))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
=================================================
Progress: 1309


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3))))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1310


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3))))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3))))) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1311


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3))))) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3)))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 1312


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3)))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1313


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4)))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Leaf))) = ZERO
Prop: SUCC (SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)))))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))))))) (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) = SUCC (ZERO)
previous tactics
simpl in goal
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = ZERO
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf) (Leaf))) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf) (Leaf))) (Leaf)))) (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf) (Leaf))) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (ZERO)
asdf
Lemma List
forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (ZERO)
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4)))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1314


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4)))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (ZERO)(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (ZERO)

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 1315


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (ZERO)

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (ZERO)
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (tree2)))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1316


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (ZERO)
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (tree2)))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (ZERO)
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), true = true -> SUCC (SUCC (targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 1317


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (ZERO)
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), true = true -> SUCC (SUCC (targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (ZERO)
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (tree2:tree), SUCC (SUCC (targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 1318


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (ZERO)
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (tree2:tree), SUCC (SUCC (targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (ZERO)
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
SUCC (SUCC (targetNew (Leaf))) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1319


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (ZERO)
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
SUCC (SUCC (targetNew (Leaf))) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (ZERO)
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
SUCC (SUCC (ZERO)) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 1320


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4))))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1321


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4))))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4))))) = SUCC (plus (ZERO) (targetNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1322


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4))))) = SUCC (plus (ZERO) (targetNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:8.)
=================================================
Progress: 1323


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1324


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Leaf)) (Leaf)))) = targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Leaf)) (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
=================================================
Progress: 1325


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4))))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1326


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4))))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4))))) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1327


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4))))) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4)))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:8.)
=================================================
Progress: 1328


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4)))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1329


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3)))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = ZERO
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf)) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = ZERO
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (ZERO)
asdf
=================================================
Progress: 1330


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- IH2 in goal at 2(rank:15.)
induction nat1(rank:16.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
=================================================
Progress: 1331


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
rewrite <- IH1 in goal at 0(rank:23.)
=================================================
Progress: 1332


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1333


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1334


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1335


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1336


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3))))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1337


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3))))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3))))) = SUCC (plus (ZERO) (targetNew (tree3)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1338


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3))))) = SUCC (plus (ZERO) (targetNew (tree3)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 1339


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1340


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (targetNew (Leaf)))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (targetNew (Leaf)))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Leaf))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Leaf))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Leaf))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
Prop: SUCC (SUCC (plus (plus (SUCC (SUCC (SUCC (SUCC (ZERO))))) (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (SUCC (SUCC (SUCC (SUCC (ZERO))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))
Prop: SUCC (SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
=================================================
Progress: 1341


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4))))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1342


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4))))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4))))) = SUCC (plus (ZERO) (targetNew (tree3)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1343


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4))))) = SUCC (plus (ZERO) (targetNew (tree3)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:8.)
=================================================
Progress: 1344


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1345


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
Prop: SUCC (SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (SUCC (ZERO))))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)))) (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite IH2 in goal at 0
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))))) (SUCC (ZERO)) = targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)))
Prop: plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (targetNew (Leaf)))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: SUCC (SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
=================================================
Progress: 1346


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 2(rank:15.)
induction nat1(rank:16.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 1347


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 1348


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (nat1) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1349


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1350


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree3)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1351


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree3)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1352


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3))))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1353


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3))))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3))))) = SUCC (plus (ZERO) (targetNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1354


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3))))) = SUCC (plus (ZERO) (targetNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 1355


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1356


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (Leaf)) (Leaf)))) (SUCC (SUCC (ZERO))))) = SUCC (SUCC (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))))) = targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = targetNew (Leaf)
Prop: SUCC (SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
=================================================
Progress: 1357


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4))))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1358


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4))))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4))))) = SUCC (plus (ZERO) (targetNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1359


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4))))) = SUCC (plus (ZERO) (targetNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:8.)
=================================================
Progress: 1360


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1361


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = targetNew (Leaf)
Prop: SUCC (SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (Leaf)) (Leaf)))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (Leaf)) (Leaf))))) = SUCC (targetNew (Leaf))
Prop: SUCC (SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))))) = SUCC (targetNew (Leaf))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))
asdf
previous tactics
simpl in goal
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (SUCC (ZERO))))) = SUCC (SUCC (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)) (Leaf)))))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)) (Leaf))))))
asdf
=================================================
Progress: 1362


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (nat1) (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 1(rank:15.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 2(rank:23.)
=================================================
Progress: 1363


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (nat1) (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
rewrite IH2 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (SUCC (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf))) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
=================================================
Progress: 1364


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 1365


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 1
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Leaf))) (Leaf)))) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf) (Leaf))))) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO))
asdf
Lemma List
forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1366


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 1367


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat1(rank:7.)
intro tree1(rank:7.)
induction tree1(rank:16.)
induction tree2(rank:16.)
=================================================
Progress: 1368


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 1369


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1370


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat) (tree2:tree), plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 1371


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1372


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
nat1 : nat
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1373


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat) (tree2:tree), plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1374


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 1375


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
nat1 : nat
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
nat1 : nat
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), true = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 1376


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:9.)
=================================================
Progress: 1377


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat1) (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:9.)
=================================================
Progress: 1378


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
nat1 : nat
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), true = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
nat1 : nat
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (tree2:tree), plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 1379


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1380


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1381


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
nat1 : nat
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (tree2:tree), plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
nat1 : nat
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1382


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
tree2 : tree
Base1 : tree2 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = plus (plus (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (plus (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
=================================================
Progress: 1383


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 1384


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
nat1 : nat
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
nat1 : nat
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
Prop: ZERO = SUCC (ZERO)
Prop: SUCC (ZERO) = SUCC (SUCC (ZERO))
Prop: ZERO = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
Prop: plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (SUCC (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1385


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1386


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), true = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 1387


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat) (tree2:tree), true = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (nat1:nat) (tree2:tree), plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
induction nat1(rank:17.)
induction tree2(rank:17.)
=================================================
Progress: 1388


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1389


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (nat1) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:9.)
=================================================
Progress: 1390


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (nat1) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> plus (nat1) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1391


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> plus (nat1) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), true = true -> plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 1392


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), true = true -> plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:10.)
=================================================
Progress: 1393


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 10.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
Cond1 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1394


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
Cond1 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
Base2 : tree1 = Leaf
Cond1 : true = true
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (SUCC (ZERO))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 1395


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (nat1:nat) (tree2:tree), plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 17.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), plus (plus (targetNew (tree2)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1396


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), plus (plus (targetNew (tree2)) (ZERO)) (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), plus (plus (targetNew (tree2)) (ZERO)) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:10.)
=================================================
Progress: 1397


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), plus (plus (targetNew (tree2)) (ZERO)) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 10.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1398


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (ZERO) = SUCC (SUCC (ZERO))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 1399


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (nat1:nat) (tree2:tree), plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 17.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1400


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:10.)
=================================================
Progress: 1401


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 10.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1402


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (SUCC (ZERO))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 1403


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7.)
=================================================
Progress: 1404


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 2(rank:7.)
=================================================
Progress: 1405


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 1406


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree4)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH2 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH2 in goal at 0
rewrite IH1 in goal at 0
rewrite <- IH1 in goal at 2
rewrite IH2 in goal at 0
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (SUCC (SUCC (ZERO))) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: plus (plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH2 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH2 in goal at 0
rewrite IH1 in goal at 0
rewrite <- IH1 in goal at 2
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (ZERO) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (SUCC (ZERO)) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (ZERO) (ZERO))) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (SUCC (plus (ZERO) (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (SUCC (plus (ZERO) (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (ZERO) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH2 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH2 in goal at 0
rewrite IH1 in goal at 0
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH2 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = plus (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH2 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)) (Leaf))) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
asdf
=================================================
Progress: 1407


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (SUCC (ZERO)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (ZERO) (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf))))) = spec (target (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))))) = SUCC (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (SUCC (ZERO)) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (SUCC (ZERO)) = spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
asdf
=================================================
Progress: 1408


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (SUCC (SUCC (ZERO))) (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (SUCC (plus (ZERO) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Leaf)))) = spec (target (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
Prop: SUCC (plus (SUCC (ZERO)) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) = SUCC (SUCC (SUCC (SUCC (ZERO))))
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) = spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (spec (target (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (ZERO)) = spec (target (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (ZERO))) = SUCC (spec (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))
asdf
=================================================
Progress: 1409


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (nat1) (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 1(rank:15.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 2(rank:23.)
=================================================
Progress: 1410


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (nat1) (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
rewrite IH2 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = plus (plus (SUCC (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (SUCC (SUCC (SUCC (ZERO)))) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
=================================================
Progress: 1411


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 1412


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 1
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = plus (plus (plus (plus (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: plus (plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
=================================================
Progress: 1413


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7.)
=================================================
Progress: 1414


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 2(rank:7.)
=================================================
Progress: 1415


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 1416


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree4)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH2 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH2 in goal at 0
rewrite IH1 in goal at 0
rewrite <- IH1 in goal at 2
rewrite IH2 in goal at 0
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH2 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH2 in goal at 0
rewrite IH1 in goal at 0
rewrite <- IH1 in goal at 2
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (SUCC (ZERO)) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (ZERO) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (ZERO) (ZERO))) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (ZERO) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (SUCC (SUCC (ZERO))) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (SUCC (SUCC (ZERO))) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) = plus (plus (SUCC (plus (ZERO) (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO)) = plus (plus (SUCC (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH2 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH2 in goal at 0
rewrite IH1 in goal at 0
Prop: plus (plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH2 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH2 in goal at 0
intro nat1
case lq (targetNew (tree3)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
Lemma List
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree4)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1417


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
nat1 : nat
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree4)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 1418


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1419


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (tree2:tree), plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1420


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (tree2:tree), plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat) (tree2:tree), plus (plus (ZERO) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (ZERO)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1421


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat) (tree2:tree), plus (plus (ZERO) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (ZERO)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat) (tree2:tree), plus (nat2) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (ZERO)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
induction nat2(rank:17.)
induction tree2(rank:17.)
=================================================
Progress: 1422


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat) (tree2:tree), plus (nat2) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (ZERO)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
forall (tree2:tree), plus (ZERO) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1423


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
forall (tree2:tree), plus (ZERO) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
forall (tree2:tree), SUCC (ZERO) = plus (plus (plus (plus (targetNew (tree2)) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:10.)
=================================================
Progress: 1424


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
forall (tree2:tree), SUCC (ZERO) = plus (plus (plus (plus (targetNew (tree2)) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (ZERO) = plus (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1425


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (ZERO) = plus (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
tree2 : tree
Base3 : tree2 = Leaf
---------------------------------------
SUCC (ZERO) = SUCC (SUCC (ZERO))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 1426


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat) (tree2:tree), plus (nat2) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (ZERO)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat2:nat), plus (nat2) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1427


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat2:nat), plus (nat2) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat2:nat), plus (nat2) (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:10.)
=================================================
Progress: 1428


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
forall (nat2:nat), plus (nat2) (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
nat2 : nat
Base3 : nat2 = ZERO
---------------------------------------
plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1429


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
nat2 : nat
Base3 : nat2 = ZERO
---------------------------------------
plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (nat1) (nat2)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree2)) (nat1)) (SUCC (ZERO))) (nat2)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
tree2 : tree
Base2 : tree2 = Leaf
nat2 : nat
Base3 : nat2 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (SUCC (ZERO))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 1430


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4))))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1431


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4))))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4))))) = SUCC (plus (ZERO) (targetNew (tree3)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1432


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4))))) = SUCC (plus (ZERO) (targetNew (tree3)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:8.)
=================================================
Progress: 1433


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1434


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite IH2 in goal at 0
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (plus (ZERO) (ZERO)) (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Leaf)))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: SUCC (SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
Prop: SUCC (SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))
Lemma List
forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (targetNew (tree1))
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1435


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (targetNew (tree1))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (targetNew (tree1))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (targetNew (tree1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 1436


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (targetNew (tree1))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (targetNew (tree1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (targetNew (tree1))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (tree2)))) = SUCC (targetNew (Leaf))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1437


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (targetNew (tree1))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (tree2)))) = SUCC (targetNew (Leaf))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (targetNew (tree1))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), true = true -> SUCC (SUCC (targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 1438


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (targetNew (tree1))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), true = true -> SUCC (SUCC (targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (targetNew (tree1))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (tree2:tree), SUCC (SUCC (targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 1439


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (targetNew (tree1))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (tree2:tree), SUCC (SUCC (targetNew (tree2))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (targetNew (tree1))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
SUCC (SUCC (targetNew (Leaf))) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1440


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (targetNew (tree1))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
SUCC (SUCC (targetNew (Leaf))) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (targetNew (tree2)))) = SUCC (targetNew (tree1))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
SUCC (SUCC (ZERO)) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 1441


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3))))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1442


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3))))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3))))) = SUCC (plus (ZERO) (targetNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1443


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3))))) = SUCC (plus (ZERO) (targetNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 1444


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1445


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (targetNew (tree4)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: SUCC (SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))))))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)))
Prop: SUCC (SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Leaf))
Prop: SUCC (SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
=================================================
Progress: 1446


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
SUCC (plus (nat1) (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 2(rank:7.)
=================================================
Progress: 1447


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
SUCC (plus (nat1) (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree4)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite IH1 in goal at 0
intro nat1
rewrite <- IH1 in goal at 0
rewrite IH2 in goal at 2
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite IH1 in goal at 0
intro nat1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = plus (plus (SUCC (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite IH1 in goal at 0
intro nat1
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (Leaf)))) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (Leaf)))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (Leaf))))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
=================================================
Progress: 1448


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (spec (target (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (spec (target (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1449


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = ZERO
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Leaf))))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1450


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree3))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (spec (target (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (spec (target (Leaf))))) = SUCC (spec (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = spec (target (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))))
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (spec (target (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Leaf)))) (SUCC (ZERO))) = SUCC (spec (target (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))))
asdf
=================================================
Progress: 1451


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (spec (target (tree3))) (SUCC (ZERO))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree3)))) = plus (nat1) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (spec (target (tree4)))) = plus (nat1) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (spec (target (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (SUCC (SUCC (SUCC (ZERO)))))) = SUCC (SUCC (SUCC (SUCC (ZERO))))
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (ZERO))) = SUCC (ZERO)
Prop: SUCC (SUCC (plus (spec (target (Leaf))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = spec (target (Leaf))
Prop: SUCC (SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
Prop: SUCC (SUCC (plus (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))) (Leaf))) (Leaf)))) (spec (target (Leaf))))) = SUCC (spec (target (Leaf)))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = spec (target (Leaf))
Prop: plus (spec (target (Leaf))) (SUCC (ZERO)) = spec (target (Leaf))
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
Prop: SUCC (plus (spec (target (Leaf))) (SUCC (ZERO))) = SUCC (spec (target (Leaf)))
asdf
=================================================
Progress: 1452


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
SUCC (plus (nat1) (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 2(rank:7.)
=================================================
Progress: 1453


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
SUCC (plus (nat1) (ZERO)) = plus (plus (SUCC (plus (targetNew (tree3)) (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
SUCC (plus (nat1) (ZERO)) = plus (plus (plus (plus (targetNew (tree4)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite IH1 in goal at 0
intro nat1
rewrite <- IH1 in goal at 0
rewrite IH2 in goal at 2
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite IH1 in goal at 0
intro nat1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (plus (SUCC (plus (targetNew (Leaf)) (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
case lq (targetNew (tree3)) (SUCC (ZERO))
rewrite IH1 in goal at 0
intro nat1
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: plus (plus (ZERO) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1454


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (targetNew (tree4)) (nat1)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree3)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat1(rank:7.)
intro tree1(rank:7.)
induction tree1(rank:16.)
=================================================
Progress: 1455


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
nat1 : nat
---------------------------------------
forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 1456


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
---------------------------------------
forall (nat1:nat), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1457


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
---------------------------------------
forall (nat1:nat), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 1458


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Cond1 : lq (targetNew (tree1)) (SUCC (ZERO)) = true
nat1 : nat
---------------------------------------
plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: plus (plus (ZERO) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (SUCC (SUCC (ZERO))) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (ZERO)) (SUCC (ZERO))
asdf
=================================================
Progress: 1459


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
nat1 : nat
---------------------------------------
forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
nat1 : nat
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1460


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
nat1 : nat
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
nat1 : nat
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
true = true -> plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 1461


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
nat1 : nat
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
true = true -> plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
nat1 : nat
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))
asdf
=================================================
Progress: 1462


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1463


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> plus (plus (targetNew (Leaf)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), true = true -> plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 1464


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), true = true -> plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:9.)
=================================================
Progress: 1465


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1466


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (plus (targetNew (tree1)) (nat1)) (SUCC (ZERO)) = plus (plus (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) (nat1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 1467


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 1468


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (spec (target (tree2))) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (spec (target (Leaf)))) = plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
=================================================
Progress: 1469


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 1470


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (spec (target (tree2)))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (spec (target (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf))))) = plus (plus (targetNew (Leaf)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (spec (target (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf))))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (ZERO) (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (ZERO) (Leaf) (Leaf)))))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)))) (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)))) (SUCC (ZERO))
=================================================
Progress: 1471


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (ZERO) (Leaf) (Leaf)))) (spec (target (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (spec (target (Leaf)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case nat_eq (height (tree2)) (height (tree3))
case balanced (tree2)
case balanced (tree3)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 3
case lq (spec (target (tree2))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf)))) (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf)) (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (spec (target (Leaf))) (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))
Lemma List
forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 1472


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (targetNew (tree3))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:18.)
=================================================
Progress: 1473


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (target (tree2)) = targetNew (tree2)
IH2 : spec (target (tree3)) = targetNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : nat_eq (height (tree2)) (height (tree3)) = true
Case2 : balanced (tree2) = true
Case3 : balanced (tree3) = true
Case4 : lq (spec (target (tree2))) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (spec (target (tree2))) (spec (target (tree3)))) = plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:18.)
=================================================
Progress: 1474


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (spec (target (Leaf))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (Leaf))) (targetNew (tree2))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 1475


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (spec (target (Leaf))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (Leaf))) (spec (target (tree2)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 1476


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (spec (target (Leaf))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (Leaf))) (targetNew (tree2))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (targetNew (tree2)) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:19.)
=================================================
Progress: 1477


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), nat_eq (height (Leaf)) (height (tree2)) = true -> balanced (Leaf) = true -> balanced (tree2) = true -> lq (spec (target (Leaf))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (Leaf))) (spec (target (tree2)))) = plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (spec (target (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:19.)
=================================================
Progress: 1478


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (targetNew (tree2)) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 19.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (targetNew (Leaf)) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:18.)
=================================================
Progress: 1479


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (targetNew (Leaf)) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
nat_eq (ZERO) (height (Node (nat1) (tree3) (tree4))) = true -> true = true -> balanced (Node (nat1) (tree3) (tree4)) = true -> true = true -> SUCC (targetNew (Node (nat1) (tree3) (tree4))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 1480


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
nat_eq (ZERO) (height (Node (nat1) (tree3) (tree4))) = true -> true = true -> balanced (Node (nat1) (tree3) (tree4)) = true -> true = true -> SUCC (targetNew (Node (nat1) (tree3) (tree4))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true -> true = true -> if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true -> true = true -> SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:18.)
=================================================
Progress: 1481


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true -> true = true -> if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true -> true = true -> SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
---------------------------------------
true = true -> if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true -> true = true -> SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:18.)
=================================================
Progress: 1482


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
---------------------------------------
true = true -> if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true -> true = true -> SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
Cond2 : true = true
---------------------------------------
if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true -> true = true -> SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:18.)
=================================================
Progress: 1483


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
Cond2 : true = true
---------------------------------------
if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true -> true = true -> SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
Cond2 : true = true
Cond3 : if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true
---------------------------------------
true = true -> SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:18.)
=================================================
Progress: 1484


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
Cond2 : true = true
Cond3 : if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true
---------------------------------------
true = true -> SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond4(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
Cond2 : true = true
Cond3 : if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true
Cond4 : true = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
case lq (targetNew (tree3)) (SUCC (ZERO))(rank:19.)
rewrite <- IH1 in goal at 3(rank:30.)
rewrite <- IH2 in goal at 1(rank:38.)
rewrite <- IH1 in goal at 1(rank:38.)
rewrite <- IH1 in goal at 2(rank:38.)
rewrite <- IH2 in goal at 3(rank:30.)
rewrite <- IH2 in goal at 2(rank:38.)
=================================================
Progress: 1485


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), nat_eq (ZERO) (height (tree2)) = true -> true = true -> balanced (tree2) = true -> true = true -> SUCC (spec (target (tree2))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 19.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (spec (target (Leaf))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:18.)
=================================================
Progress: 1486


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
nat_eq (ZERO) (height (Leaf)) = true -> true = true -> balanced (Leaf) = true -> true = true -> SUCC (spec (target (Leaf))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
nat_eq (ZERO) (height (Node (nat1) (tree3) (tree4))) = true -> true = true -> balanced (Node (nat1) (tree3) (tree4)) = true -> true = true -> SUCC (spec (target (Node (nat1) (tree3) (tree4)))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 1487


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
nat_eq (ZERO) (height (Node (nat1) (tree3) (tree4))) = true -> true = true -> balanced (Node (nat1) (tree3) (tree4)) = true -> true = true -> SUCC (spec (target (Node (nat1) (tree3) (tree4)))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true -> true = true -> if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true -> true = true -> SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:18.)
=================================================
Progress: 1488


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true -> true = true -> if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true -> true = true -> SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
---------------------------------------
true = true -> if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true -> true = true -> SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:18.)
=================================================
Progress: 1489


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
---------------------------------------
true = true -> if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true -> true = true -> SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
Cond2 : true = true
---------------------------------------
if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true -> true = true -> SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:18.)
=================================================
Progress: 1490


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
Cond2 : true = true
---------------------------------------
if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true -> true = true -> SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
Cond2 : true = true
Cond3 : if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true
---------------------------------------
true = true -> SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:18.)
=================================================
Progress: 1491


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
Cond2 : true = true
Cond3 : if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true
---------------------------------------
true = true -> SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond4(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (spec (target (tree2)))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (spec (target (tree3))) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (spec (target (tree4))) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
Cond2 : true = true
Cond3 : if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true
Cond4 : true = true
---------------------------------------
SUCC (SUCC (plus (spec (target (tree3))) (spec (target (tree4))))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 1(rank:30.)
rewrite <- IH2 in goal at 1(rank:30.)
=================================================
Progress: 1492


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
Cond2 : true = true
Cond3 : if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true
Cond4 : true = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (ZERO))(rank : 19.)


1st goal of : forall (tree1:tree) (tree2:tree), nat_eq (height (tree1)) (height (tree2)) = true -> balanced (tree1) = true -> balanced (tree2) = true -> lq (spec (target (tree1))) (SUCC (ZERO)) = true -> SUCC (plus (spec (target (tree1))) (targetNew (tree2))) = plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : nat_eq (ZERO) (height (tree3)) = true -> true = true -> balanced (tree3) = true -> true = true -> SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : nat_eq (ZERO) (height (tree4)) = true -> true = true -> balanced (tree4) = true -> true = true -> SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
Cond1 : nat_eq (ZERO) (SUCC (if lq (height (tree3)) (height (tree4)) then height (tree4) else height (tree3))) = true
Cond2 : true = true
Cond3 : if nat_eq (height (tree3)) (height (tree4)) then if balanced (tree3) then balanced (tree4) else false else false = true
Cond4 : true = true
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 2(rank:31.)
rewrite <- IH1 in goal at 1(rank:39.)
rewrite <- IH2 in goal at 2(rank:31.)
rewrite <- IH2 in goal at 1(rank:39.)
=================================================
Progress: 1493


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree3)) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))(rank:8.)
=================================================
Progress: 1494


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree3)) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 1(rank:16.)
rewrite IH1 in goal at 0(rank:24.)
rewrite IH1 in goal at 2(rank:24.)
=================================================
Progress: 1495


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1496


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
rewrite IH1 in goal at 1
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))) (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (Leaf))))) (Leaf)))) = targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
rewrite IH1 in goal at 1
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (SUCC (SUCC (SUCC (ZERO))))) (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (SUCC (ZERO))) = SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (SUCC (SUCC (ZERO))))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
=================================================
Progress: 1497


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))(rank:8.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
=================================================
Progress: 1498


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 1(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1499


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1500


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1501


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1502


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
rewrite <- IH2 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1503


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (targetNew (tree3)) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
=================================================
Progress: 1504


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))(rank:8.)
=================================================
Progress: 1505


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 1(rank:16.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
=================================================
Progress: 1506


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1507


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
rewrite IH2 in goal at 1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (Leaf)) (Leaf)) (Leaf)) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
rewrite IH2 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf))))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))))) = targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
Lemma List
forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1508


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 1509


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (targetNew (Leaf)) (SUCC (targetNew (tree2))) = true -> SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1510


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (targetNew (Leaf)) (SUCC (targetNew (tree2))) = true -> SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), true = true -> SUCC (SUCC (ZERO)) = SUCC (targetNew (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 1511


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), true = true -> SUCC (SUCC (ZERO)) = SUCC (targetNew (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (tree2:tree), SUCC (SUCC (ZERO)) = SUCC (targetNew (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 1512


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (tree2:tree), SUCC (SUCC (ZERO)) = SUCC (targetNew (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
SUCC (SUCC (ZERO)) = SUCC (targetNew (Leaf))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1513


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
SUCC (SUCC (ZERO)) = SUCC (targetNew (Leaf))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
SUCC (SUCC (ZERO)) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 1514


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))(rank:8.)
rewrite <- IH1 in goal at 0(rank:23.)
=================================================
Progress: 1515


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 1(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1516


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1517


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf))))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (targetNew (Leaf))) = targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) = SUCC (SUCC (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1518


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1519


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
rewrite <- IH2 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1520


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 1521


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO) then SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (Leaf)) (Leaf))))) (Leaf))) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (ZERO) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = ZERO
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (ZERO) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 2
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf)))) else targetNew (Leaf))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
asdf
=================================================
Progress: 1522


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree3)) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))(rank:8.)
=================================================
Progress: 1523


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree3)) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 1(rank:16.)
rewrite IH1 in goal at 0(rank:24.)
rewrite IH1 in goal at 2(rank:24.)
=================================================
Progress: 1524


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1525


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
rewrite IH1 in goal at 1
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (SUCC (SUCC (SUCC (SUCC (ZERO))))) (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))))) = SUCC (SUCC (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (targetNew (Leaf))) = targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
rewrite IH1 in goal at 1
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (Leaf)))))) (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (Leaf))))))) (SUCC (ZERO))) = SUCC (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (Leaf))))))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) = ZERO
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (SUCC (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))) = SUCC (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
=================================================
Progress: 1526


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))(rank:8.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
=================================================
Progress: 1527


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 1(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1528


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1529


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1530


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1531


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
rewrite <- IH2 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf))))) (Leaf))) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1532


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (targetNew (tree3)) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
=================================================
Progress: 1533


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))(rank:8.)
=================================================
Progress: 1534


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 1(rank:16.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
=================================================
Progress: 1535


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1536


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
rewrite IH2 in goal at 1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf))
Prop: plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
rewrite IH2 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (Leaf)))) (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)) (Leaf)) (Leaf))))) = targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)) (Leaf)) (Leaf)))
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
=================================================
Progress: 1537


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))(rank:8.)
rewrite <- IH1 in goal at 0(rank:23.)
=================================================
Progress: 1538


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 1(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1539


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1540


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (SUCC (SUCC (SUCC (ZERO))))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1541


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1542


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf))) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf))) (Leaf)))) (SUCC (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf))) (Leaf)))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (targetNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
rewrite <- IH2 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
Lemma List
forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1543


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 1544


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (targetNew (Leaf)) (SUCC (targetNew (tree2))) = true -> plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (tree2)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1545


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (targetNew (Leaf)) (SUCC (targetNew (tree2))) = true -> plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (tree2)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), true = true -> SUCC (ZERO) = targetNew (tree2)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 1546


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), true = true -> SUCC (ZERO) = targetNew (tree2)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (tree2:tree), SUCC (ZERO) = targetNew (tree2)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 1547


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
forall (tree2:tree), SUCC (ZERO) = targetNew (tree2)

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
SUCC (ZERO) = targetNew (Leaf)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1548


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
SUCC (ZERO) = targetNew (Leaf)

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (targetNew (tree1)) (SUCC (targetNew (tree2))) = true -> plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO)) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
SUCC (ZERO) = ZERO

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 1549


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 1550


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (if lq (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (ZERO) then SUCC (targetNew (Leaf)) else targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (Leaf))))) (if lq (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (Leaf)))) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (ZERO) then SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))) else targetNew (Leaf))) = ZERO
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO) then SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (ZERO) then SUCC (targetNew (Leaf)) else targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) then SUCC (targetNew (Leaf)) else targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) = targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) then SUCC (targetNew (Leaf)) else targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (Leaf)))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (Leaf))))) (if lq (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (Leaf)))) (SUCC (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (Leaf))))) then SUCC (targetNew (Leaf)) else targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (Leaf))))) = SUCC (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (Leaf))))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 2
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) else targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Leaf))) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))) else targetNew (Leaf))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
asdf
=================================================
Progress: 1551


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))(rank:8.)
=================================================
Progress: 1552


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:16.)
rewrite IH1 in goal at 0(rank:24.)
=================================================
Progress: 1553


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
=================================================
Progress: 1554


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (if lq (SUCC (ZERO)) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) then SUCC (ZERO) else SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (if lq (SUCC (ZERO)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (Leaf)))) (if lq (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (Leaf))) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (Leaf))) = targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (if lq (SUCC (SUCC (ZERO))) (SUCC (ZERO)) then SUCC (ZERO) else SUCC (SUCC (ZERO)))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (if lq (targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
asdf
=================================================
Progress: 1555


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 2
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (if lq (SUCC (ZERO)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (if lq (SUCC (ZERO)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else SUCC (ZERO))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (if lq (SUCC (ZERO)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else ZERO)) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (if lq (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) else targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) = targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))))) (if lq (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))))) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) else targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (if lq (SUCC (ZERO)) (SUCC (ZERO)) then SUCC (ZERO) else SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (if lq (SUCC (SUCC (ZERO))) (SUCC (ZERO)) then SUCC (ZERO) else SUCC (SUCC (ZERO)))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (if lq (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
asdf
=================================================
Progress: 1556


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree3)) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))(rank:8.)
=================================================
Progress: 1557


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree3)) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite IH2 in goal at 0(rank:24.)
=================================================
Progress: 1558


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1559


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
rewrite <- IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) then SUCC (ZERO) else targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))
asdf
previous tactics
simpl in goal
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
asdf
=================================================
Progress: 1560


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (targetNew (tree3)) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
rewrite <- IH1 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))))) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))))) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))))) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))))) (Leaf))) else targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))))) (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) else targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (if lq (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))))) (if lq (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
asdf
=================================================
Progress: 1561


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))(rank:8.)
=================================================
Progress: 1562


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (targetNew (tree4)))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:16.)
rewrite IH1 in goal at 0(rank:24.)
=================================================
Progress: 1563


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree4)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree4))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
=================================================
Progress: 1564


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree4))) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (if lq (SUCC (ZERO)) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) then SUCC (ZERO) else SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) = targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (if lq (SUCC (ZERO)) (SUCC (ZERO)) then SUCC (ZERO) else SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (if lq (SUCC (SUCC (ZERO))) (SUCC (ZERO)) then SUCC (ZERO) else SUCC (SUCC (ZERO)))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (if lq (SUCC (ZERO)) (SUCC (ZERO)) then SUCC (ZERO) else SUCC (ZERO))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (if lq (SUCC (SUCC (ZERO))) (SUCC (ZERO)) then SUCC (ZERO) else SUCC (SUCC (ZERO)))) = SUCC (SUCC (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (Node (SUCC (ZERO)) (Leaf) (Leaf))))))) (if lq (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (Node (SUCC (ZERO)) (Leaf) (Leaf))))))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (Node (SUCC (ZERO)) (Leaf) (Leaf))))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
asdf
=================================================
Progress: 1565


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (targetNew (tree4)) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 2
Prop: SUCC (plus (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (ZERO))))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else SUCC (SUCC (SUCC (ZERO))))) = SUCC (SUCC (SUCC (SUCC (ZERO))))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (if lq (SUCC (ZERO)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (if lq (SUCC (ZERO)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else SUCC (ZERO))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else ZERO)) = SUCC (ZERO)
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Leaf)) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) else targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Leaf)) (Leaf))) = targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Leaf)) (Leaf))
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) = targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))) else targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (if lq (SUCC (ZERO)) (SUCC (ZERO)) then SUCC (ZERO) else SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (if lq (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (SUCC (ZERO)) then SUCC (ZERO) else SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (if lq (SUCC (ZERO)) (SUCC (ZERO)) then SUCC (ZERO) else SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (if lq (ZERO) (SUCC (ZERO)) then SUCC (ZERO) else ZERO)) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf))) = targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (if lq (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
asdf
=================================================
Progress: 1566


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree3)) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))(rank:8.)
=================================================
Progress: 1567


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree3)) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite IH2 in goal at 0(rank:24.)
=================================================
Progress: 1568


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1569


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
rewrite <- IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))))) (if lq (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))))) then SUCC (ZERO) else targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (targetNew (Leaf))) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (Leaf)))))))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (if lq (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (ZERO)
asdf
=================================================
Progress: 1570


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (targetNew (tree3)) else targetNew (tree3))) = SUCC (targetNew (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
rewrite <- IH1 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (if lq (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) else targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (if lq (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) then SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))) else targetNew (Node (ZERO) (Leaf) (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (targetNew (Leaf)) else targetNew (Leaf))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf))))) (if lq (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf))))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
parent
targetNew (tree3)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), _))
remove upper
targetNew(tree3)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree5), targetNew(tree5)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)))) (if lq (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (if lq (targetNew (Leaf)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (Leaf)) (Leaf)))) (if lq (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (Leaf)) (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (Leaf)) (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (targetNew (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (if lq (targetNew (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = SUCC (ZERO)
asdf
=================================================
Progress: 1571


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:15.)
induction nat1(rank:16.)
=================================================
Progress: 1572


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1573


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1574


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
=================================================
Progress: 1575


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1576


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1577


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree4)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
induction nat1(rank:16.)
=================================================
Progress: 1578


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1579


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (nat1) (targetNew (tree3)))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree3)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1580


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = SUCC (plus (ZERO) (targetNew (tree3)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) = SUCC (SUCC (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) = targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
asdf
=================================================
Progress: 1581


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1582


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) = plus (plus (ZERO) (ZERO)) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree3))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (targetNew (tree4))) = plus (plus (nat1) (ZERO)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1583


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
induction nat1(rank:16.)
rewrite IH2 in goal at 1(rank:15.)
rewrite IH2 in goal at 2(rank:23.)
=================================================
Progress: 1584


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1585


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1586


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1587


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1588


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1589


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1590


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1591


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) (Leaf)))) (Leaf)) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1592


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1593


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1594


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
induction nat1(rank:16.)
=================================================
Progress: 1595


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1596


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1597


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1598


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1599


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))))) (Leaf)))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1600


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1601


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1602


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1603


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)))
Lemma List
forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (ZERO) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1604


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (ZERO) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))(rank : 0.)


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (ZERO) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (ZERO) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 1605


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (ZERO) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (ZERO) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (ZERO) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1606


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (ZERO) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (ZERO) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
true = true -> SUCC (ZERO) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 1607


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (ZERO) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
true = true -> SUCC (ZERO) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (ZERO) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
SUCC (ZERO) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
=================================================
Progress: 1608


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15.)
induction nat1(rank:16.)
=================================================
Progress: 1609


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 2(rank:15.)
induction nat1(rank:16.)
=================================================
Progress: 1610


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
rewrite IH2 in goal at 0(rank:23.)
=================================================
Progress: 1611


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1612


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1613


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1614


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1615


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1616


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1617


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1618


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
simpl in goal
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf))) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))))) (ZERO)) (SUCC (ZERO)))
Lemma List
forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (targetNew (tree1)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1619


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (targetNew (tree1)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))(rank : 0.)


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (targetNew (tree1)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (targetNew (tree1)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 1620


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (targetNew (tree1)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (targetNew (tree1)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (targetNew (tree1)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1621


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (targetNew (tree1)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (targetNew (tree1)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
true = true -> SUCC (ZERO) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 1622


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (targetNew (tree1)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
true = true -> SUCC (ZERO) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> plus (targetNew (tree1)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree1)) (ZERO)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
SUCC (ZERO) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
=================================================
Progress: 1623


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1624


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (SUCC (ZERO))) (ZERO)) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (SUCC (ZERO))) (ZERO)) (SUCC (ZERO)))
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf))) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1625


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1626


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1627


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1628


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1629


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf))) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1630


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1631


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1632


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1633


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1634


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
simpl in goal
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1635


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
rewrite <- IH2 in goal at 1(rank:23.)
=================================================
Progress: 1636


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1637


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1638


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1639


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree4)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1640


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1641


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1642


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (ZERO)) = plus (plus (ZERO) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1643


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (SUCC (plus (targetNew (tree3)) (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 1644


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
---------------------------------------
forall (nat1:nat), plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (nat1) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1645


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (ZERO) (targetNew (tree3))) (SUCC (ZERO)) = plus (plus (ZERO) (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO)))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1646


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (plus (plus (targetNew (tree3)) (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1647


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = plus (SUCC (plus (targetNew (tree3)) (ZERO))) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (nat1) (targetNew (tree1))) (SUCC (ZERO))
tree2 : tree
Base1 : tree2 = Leaf
tree1 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree3))) (SUCC (ZERO))
IH2 : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (plus (nat1) (targetNew (tree4))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (ZERO)) = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (targetNew (tree3)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (tree3)) (ZERO)) (SUCC (ZERO)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
simpl in goal
Prop: plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (SUCC (ZERO))) (ZERO)) (SUCC (ZERO)))
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = SUCC (plus (plus (targetNew (Leaf)) (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 1648


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH2 in goal at 2(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
=================================================
Progress: 1649


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf))) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf))) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (SUCC (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))))) = SUCC (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
=================================================
Progress: 1650


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 1651


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
rewrite IH1 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (SUCC (SUCC (ZERO))))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf) (Leaf))) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf) (Leaf))) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf) (Leaf))) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = SUCC (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
asdf
=================================================
Progress: 1652


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) = ZERO
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1653


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
rewrite <- IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1654


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1655


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
rewrite <- IH2 in goal at 1
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(targetNew(tree3))))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) = ZERO
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1656


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 2(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 1657


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 2
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) = ZERO
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Leaf))) (Leaf)) (Leaf)))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Leaf))) (Leaf)) (Leaf))))
asdf
=================================================
Progress: 1658


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 1659


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
rewrite IH2 in goal at 2
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
rewrite IH2 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (Leaf)))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) = targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
asdf
=================================================
Progress: 1660


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))
Prop: plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf))) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf))) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)))) (SUCC (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf))) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)))) = targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf))) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1661


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
rewrite <- IH1 in goal at 1
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(_)))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (SUCC (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1662


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1663


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
rewrite <- IH2 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
parent
targetNew (tree2)
lower
targetNew(_)
upper
SUCC(plus(plus(_, _), SUCC(ZERO())))
remove upper
targetNew(tree2)
remove lower
targetNew(_)
remove upper
plus(plus(targetNew(tree4), targetNew(tree4)), _)
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 1664


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 1665


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (ZERO)) = ZERO
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))))) (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))))) (SUCC (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Leaf)))) (Leaf)))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Leaf)))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))))
asdf
=================================================
Progress: 1666


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
rewrite IH2 in goal at 0
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
rewrite IH2 in goal at 0
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
Prop: SUCC (plus (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (ZERO))))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (SUCC (SUCC (SUCC (ZERO))))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (targetNew (Leaf))) = targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf))) = targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))
asdf
=================================================
Progress: 1667


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)))) (SUCC (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)))) = targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
rewrite IH2 in goal at 0
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree3)))
Prop: SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (SUCC (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)))))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
=================================================
Progress: 1668


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 1669


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
rewrite <- IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
rewrite <- IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
rewrite <- IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))
Prop: plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (SUCC (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) = targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
=================================================
Progress: 1670


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
rewrite <- IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf)))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf))))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
rewrite <- IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
rewrite <- IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) = targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Leaf)))))
asdf
=================================================
Progress: 1671


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (targetNew (tree2))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
rewrite <- IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))) (Leaf)))) = targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
rewrite <- IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (Leaf))))) (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)))))) (SUCC (ZERO))) = SUCC (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
rewrite <- IH1 in goal at 0
case lq (targetNew (tree2)) (SUCC (targetNew (tree2)))
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf))))) = SUCC (targetNew (Leaf))
asdf
=================================================
Progress: 1672


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))
asdf
=================================================
Progress: 1673


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree3)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (targetNew (tree2)) (SUCC (ZERO))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))
Lemma List
forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree1))
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1674


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree1))(rank : 0.)


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree1))

---------------------------------------
forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 1675


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree1))

---------------------------------------
forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree1))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1676


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree1))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
lq (targetNew (Leaf)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree1))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
true = true -> SUCC (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 1677


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree1))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
true = true -> SUCC (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree), lq (targetNew (tree1)) (SUCC (ZERO)) = true -> SUCC (plus (plus (targetNew (tree1)) (targetNew (tree1))) (SUCC (ZERO))) = SUCC (targetNew (tree1))
tree1 : tree
Base1 : tree1 = Leaf
Cond1 : true = true
---------------------------------------
SUCC (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
=================================================
Progress: 1678


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (targetNew (tree2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) = targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = SUCC (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf))))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (targetNew (Leaf))
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (targetNew (tree2)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
=================================================
Progress: 1679


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (plus (nat1) (targetNew (tree1))) = plus (plus (nat1) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (targetNew (tree2)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree3)) = SUCC (ZERO)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Case1 : lq (targetNew (tree2)) (SUCC (ZERO)) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree2)) (targetNew (tree2))) (SUCC (targetNew (tree2)))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf))) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (targetNew (Leaf)))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))))) (SUCC (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (targetNew (tree2)) (SUCC (ZERO))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (targetNew (tree2)) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO)) = targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Leaf))) (Leaf))
Prop: plus (plus (targetNew (Node (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (targetNew (Node (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (SUCC (ZERO)) = targetNew (Leaf)
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: SUCC (plus (plus (targetNew (Leaf)) (targetNew (Leaf))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
asdf
=================================================
Progress: 1680


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (ZERO)) then SUCC (ZERO) else targetNew (tree3))) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree3)) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))(rank:8.)
=================================================
Progress: 1681


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (if lq (targetNew (tree3)) (SUCC (targetNew (tree3))) then SUCC (targetNew (tree3)) else targetNew (tree3))) = SUCC (targetNew (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (targetNew (tree3)) (SUCC (targetNew (tree3)))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 1(rank:16.)
rewrite IH1 in goal at 0(rank:24.)
rewrite IH1 in goal at 2(rank:24.)
=================================================
Progress: 1682


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (targetNew (tree3)))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), SUCC (plus (nat1) (targetNew (tree2))) = plus (plus (spec (target (tree1))) (nat1)) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Base2 : tree1 = Leaf
tree2 : tree
nat2 : nat
tree3 : tree
tree4 : tree
IH1 : SUCC (targetNew (tree3)) = SUCC (ZERO)
IH2 : SUCC (targetNew (tree4)) = SUCC (ZERO)
Inductive1 : tree2 = Node (nat2) (tree3) (tree4)
Case1 : lq (targetNew (tree3)) (SUCC (targetNew (tree3))) = true
---------------------------------------
SUCC (plus (plus (targetNew (tree3)) (targetNew (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
