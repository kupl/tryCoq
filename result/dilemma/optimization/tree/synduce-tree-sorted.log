Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (tr:tree), main (tr) = mainNew (tr)(rank : 0.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), main (tree1) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), main (tree1) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = match (reprNew (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction tree1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = match (reprNew (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> induction tree1(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
match (tf1 (repr (Leaf (nat1)))) with
| Tuple2 _ b -> b = match (reprNew (Leaf (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
match (tf1 (repr (Leaf (nat1)))) with
| Tuple2 _ b -> b = match (reprNew (Leaf (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
match (tf1 (repr (Node (nat1) (tree2) (tree3)))) with
| Tuple2 _ b -> b = match (reprNew (Node (nat1) (tree2) (tree3))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
match (tf1 (repr (Node (nat1) (tree2) (tree3)))) with
| Tuple2 _ b -> b = match (reprNew (Node (nat1) (tree2) (tree3))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:4.)
rewrite IH1 in goal at 0(rank:11.)
rewrite IH2 in goal at 0(rank:11.)
rewrite <- IH1 in goal at 0(rank:11.)
rewrite <- IH2 in goal at 0(rank:11.)
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:4.)
=================================================
Progress: 6


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH2 in goal at 0(rank:12.)
=================================================
Progress: 7


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite IH2 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 8


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 9


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 10


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:4.)
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:4.)
rewrite IH2 in goal at 0(rank:11.)
rewrite <- IH2 in goal at 0(rank:11.)
=================================================
Progress: 11


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite IH2 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 12


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite IH2 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 13


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 14


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 15


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:4.)
rewrite <- IH1 in goal at 0(rank:11.)
=================================================
Progress: 16


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 17


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 18


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:5.)
case tf1 (repr (tree3))(rank:5.)
=================================================
Progress: 19


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
Prop: match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 20


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 21


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))) = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 22


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:4.)
rewrite <- IH2 in goal at 0(rank:11.)
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:4.)
=================================================
Progress: 23


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH2 in goal at 0(rank:12.)
=================================================
Progress: 24


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH2 in goal at 0(rank:20.)
=================================================
Progress: 25


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 26


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 27


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:4.)
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:4.)
=================================================
Progress: 28


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH2 in goal at 0(rank:12.)
=================================================
Progress: 29


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite IH2 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite IH2 in goal at 0(rank:20.)
rewrite IH2 in goal at 1(rank:20.)
=================================================
Progress: 30


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 31


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 32


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:4.)
=================================================
Progress: 33


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 34


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 35


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:5.)
case tf1 (repr (tree3))(rank:5.)
=================================================
Progress: 36


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 37


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 38


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 39


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:4.)
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:4.)
=================================================
Progress: 40


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite IH2 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 41


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite IH2 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite IH2 in goal at 0(rank:20.)
rewrite IH2 in goal at 1(rank:20.)
=================================================
Progress: 42


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 43


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 44


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:4.)
=================================================
Progress: 45


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 46


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 47


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:5.)
case tf1 (repr (tree3))(rank:5.)
=================================================
Progress: 48


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
asdf
=================================================
Progress: 49


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 50


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (ZERO)))) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (SUCC (ZERO))) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 51


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:4.)
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:4.)
=================================================
Progress: 52


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH2 in goal at 0(rank:12.)
=================================================
Progress: 53


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH2 in goal at 0(rank:20.)
rewrite IH2 in goal at 2(rank:12.)
rewrite IH2 in goal at 1(rank:20.)
=================================================
Progress: 54


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 55


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 56


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite IH2 in goal at 0(rank:20.)
=================================================
Progress: 57


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 58


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (SUCC (SUCC (ZERO))) (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
parent
lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
lower
lq(_, _)
upper
_
remove upper
_
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Lemma List
forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 59


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)(rank : 0.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

---------------------------------------
forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro bool_nat_tuple21(rank:5.)
=================================================
Progress: 60


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

---------------------------------------
forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro bool_nat_tuple21(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:5.)
=================================================
Progress: 61


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree2(rank:5.)
=================================================
Progress: 62


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 63


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 64


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 65


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false(rank:6.)
=================================================
Progress: 66


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false(rank : 6.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (bool_nat_tuple21) with
| Tuple2 a _ -> a = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
intro Cond1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 67


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 68


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 69


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:5.)
case tf1 (repr (tree3))(rank:5.)
=================================================
Progress: 70


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
asdf
=================================================
Progress: 71


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 72


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (SUCC (SUCC (SUCC (ZERO)))))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (SUCC (SUCC (SUCC (ZERO)))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 73


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite IH2 in goal at 0(rank:20.)
=================================================
Progress: 74


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 75


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b else false = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (SUCC (SUCC (ZERO)))) then lq (SUCC (SUCC (SUCC (ZERO)))) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (SUCC (SUCC (SUCC (ZERO)))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Lemma List
forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 76


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)(rank : 0.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

---------------------------------------
forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro bool_nat_tuple21(rank:5.)
=================================================
Progress: 77


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

---------------------------------------
forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro bool_nat_tuple21(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:5.)
=================================================
Progress: 78


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree2(rank:5.)
=================================================
Progress: 79


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 80


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 81


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 82


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false(rank:6.)
=================================================
Progress: 83


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false(rank : 6.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (bool_nat_tuple21) with
| Tuple2 a _ -> a = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
intro Cond1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 84


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 85


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 86


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite IH2 in goal at 0(rank:20.)
=================================================
Progress: 87


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 88


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a else false = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (ZERO)))) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (ZERO)))) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a else false = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
parent
lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
lower
lq(_, _)
upper
_
remove upper
_
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (SUCC (SUCC (ZERO))) then lq (SUCC (SUCC (ZERO))) (match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b else false = lq (SUCC (SUCC (ZERO))) (match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Lemma List
forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 89


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)(rank : 0.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

---------------------------------------
forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro bool_nat_tuple21(rank:5.)
=================================================
Progress: 90


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

---------------------------------------
forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro bool_nat_tuple21(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:5.)
=================================================
Progress: 91


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree2(rank:5.)
=================================================
Progress: 92


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 93


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 94


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 95


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false(rank:6.)
=================================================
Progress: 96


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false(rank : 6.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (bool_nat_tuple21) with
| Tuple2 a _ -> a = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
intro Cond1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 97


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 98


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 99


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 100


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 101


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 102


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 103


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:5.)
case tf1 (repr (tree3))(rank:5.)
=================================================
Progress: 104


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (SUCC (SUCC (ZERO))) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))))))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 105


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 106


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (ZERO))) (Leaf (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (ZERO))) (Leaf (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (ZERO)))) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 107


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite IH2 in goal at 0(rank:20.)
=================================================
Progress: 108


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 109


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (SUCC (SUCC (ZERO)))))) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Node (ZERO) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (ZERO))) (Leaf (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (SUCC (SUCC (ZERO))) then lq (SUCC (SUCC (ZERO))) (match (tf1 (repr (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))))))) with
| Tuple2 _ b -> b else false = lq (SUCC (SUCC (ZERO))) (match (reprNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (SUCC (ZERO)))) (Node (ZERO) (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (SUCC (ZERO)))) (Node (ZERO) (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Lemma List
forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 110


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)(rank : 0.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

---------------------------------------
forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro bool_nat_tuple21(rank:5.)
=================================================
Progress: 111


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

---------------------------------------
forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro bool_nat_tuple21(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:5.)
=================================================
Progress: 112


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree2(rank:5.)
=================================================
Progress: 113


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 114


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 115


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 116


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false(rank:6.)
=================================================
Progress: 117


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false(rank : 6.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (bool_nat_tuple21) with
| Tuple2 a _ -> a = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
intro Cond1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (ZERO)))) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 118


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite IH2 in goal at 2(rank:12.)
rewrite IH2 in goal at 0(rank:20.)
rewrite IH2 in goal at 1(rank:20.)
=================================================
Progress: 119


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 120


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
=================================================
Progress: 121


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 122


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
=================================================
Progress: 123


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 124


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
parent
lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
lower
lq(_, _)
upper
_
remove upper
_
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 125


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
parent
lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
lower
lq(_, _)
upper
_
remove upper
_
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 126


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Lemma List
forall (nat1:nat) (tree1:tree), match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 127


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree), match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree), match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)

---------------------------------------
forall (nat1:nat) (tree1:tree), match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:14.)
induction tree1(rank:14.)
=================================================
Progress: 128


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Node (ZERO) (Node (ZERO) (Leaf (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Leaf (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 129


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 130


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 131


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 132


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 133


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (match (reprNew (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 134


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 135


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 136


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 137


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 138


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 139


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 140


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (match (reprNew (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 141


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (ZERO))) (Leaf (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (ZERO))) (Leaf (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (SUCC (ZERO))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
Lemma List
forall (nat1:nat) (tree1:tree), match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 142


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree), match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree), match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)

---------------------------------------
forall (nat1:nat) (tree1:tree), match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:14.)
induction tree1(rank:14.)
=================================================
Progress: 143


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (SUCC (ZERO))))) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 144


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (ZERO)))) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (ZERO)))) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (ZERO)))) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 145


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 146


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (ZERO) (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))))) (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))))) (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 147


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
rewrite IH2 in goal at 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (SUCC (ZERO))))) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (SUCC (ZERO))))) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
rewrite IH2 in goal at 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Node (SUCC (SUCC (ZERO))) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (SUCC (SUCC (ZERO))) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 148


1st goal of : forall (nat1:nat) (tree1:tree), match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)

---------------------------------------
forall (nat1:nat) (tree1:tree), match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree), match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:7.)
=================================================
Progress: 149


1st goal of : forall (nat1:nat) (tree1:tree), match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
match (tf1 (repr (Leaf (nat2)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (nat2))) with
| Tuple2 _ b -> b)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 150


1st goal of : forall (nat1:nat) (tree1:tree), match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
match (tf1 (repr (Leaf (nat2)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (nat2))) with
| Tuple2 _ b -> b)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
true = lq (ZERO) (nat2)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = lq (ZERO) (ZERO)
Prop: true = lq (ZERO) (SUCC (ZERO))
Prop: true = lq (ZERO) (ZERO)
asdf
=================================================
Progress: 151


1st goal of : forall (nat1:nat) (tree1:tree), match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)

---------------------------------------
forall (nat1:nat) (tree1:tree), match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree), match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), match (tf1 (repr (Leaf (nat2)))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (Leaf (nat2))) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 152


1st goal of : forall (nat1:nat) (tree1:tree), match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), match (tf1 (repr (Leaf (nat2)))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (Leaf (nat2))) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), true = lq (nat1) (nat2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 153


1st goal of : forall (nat1:nat) (tree1:tree), match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), true = lq (nat1) (nat2)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
true = lq (ZERO) (nat2)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
validate generalize_common_subterm_goal
Prop: true = lq (ZERO) (ZERO)
Prop: true = lq (ZERO) (ZERO)
Prop: true = lq (ZERO) (SUCC (SUCC (ZERO)))
asdf
=================================================
Progress: 154


1st goal of : forall (nat1:nat) (tree1:tree), match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)

---------------------------------------
forall (nat1:nat) (tree1:tree), match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree), match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:7.)
=================================================
Progress: 155


1st goal of : forall (nat1:nat) (tree1:tree), match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
match (reprNew (Leaf (nat2))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (nat2))) with
| Tuple2 _ b -> b)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 156


1st goal of : forall (nat1:nat) (tree1:tree), match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
match (reprNew (Leaf (nat2))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (nat2))) with
| Tuple2 _ b -> b)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
true = lq (ZERO) (nat2)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: true = lq (ZERO) (ZERO)
Prop: true = lq (ZERO) (ZERO)
Prop: true = lq (ZERO) (SUCC (SUCC (SUCC (ZERO))))
asdf
=================================================
Progress: 157


1st goal of : forall (nat1:nat) (tree1:tree), match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)

---------------------------------------
forall (nat1:nat) (tree1:tree), match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 14.)


1st goal of : forall (nat1:nat) (tree1:tree), match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), match (reprNew (Leaf (nat2))) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (Leaf (nat2))) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 158


1st goal of : forall (nat1:nat) (tree1:tree), match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), match (reprNew (Leaf (nat2))) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (Leaf (nat2))) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), true = lq (nat1) (nat2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 159


1st goal of : forall (nat1:nat) (tree1:tree), match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), true = lq (nat1) (nat2)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree1)) with
| Tuple2 _ b -> b)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
true = lq (ZERO) (nat2)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
validate generalize_common_subterm_goal
Prop: true = lq (ZERO) (ZERO)
Prop: true = lq (ZERO) (SUCC (ZERO))
Prop: true = lq (ZERO) (ZERO)
asdf
=================================================
Progress: 160


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 161


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 162


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:5.)
case tf1 (repr (tree3))(rank:5.)
=================================================
Progress: 163


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 164


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 165


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: SUCC (SUCC (SUCC (ZERO))) = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 166


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 167


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 168


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 169


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
=================================================
Progress: 170


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 171


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (SUCC (ZERO))))) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 172


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:4.)
=================================================
Progress: 173


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
=================================================
Progress: 174


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 175


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:5.)
case tf1 (repr (tree3))(rank:5.)
=================================================
Progress: 176


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
asdf
=================================================
Progress: 177


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 178


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 179


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 180


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:5.)
=================================================
Progress: 181


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:5.)
=================================================
Progress: 182


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 183


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 184


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 185


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 186


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 187


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 188


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (match (reprNew (Leaf (nat3))) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 189


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (match (reprNew (Leaf (nat3))) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 190


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (match (reprNew (Leaf (nat3))) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 191


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (match (reprNew (Leaf (nat3))) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 192


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false(rank:7.)
=================================================
Progress: 193


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false(rank:7.)
=================================================
Progress: 194


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Cond1 in goal at 0(rank:23.)
=================================================
Progress: 195


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Cond1 in goal at 0(rank:23.)
=================================================
Progress: 196


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 197


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 198


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:5.)
case tf1 (repr (tree3))(rank:5.)
=================================================
Progress: 199


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 200


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 201


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (SUCC (ZERO))) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 202


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 203


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 204


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (SUCC (ZERO))))) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 205


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
=================================================
Progress: 206


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 207


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 208


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) (SUCC (SUCC (ZERO))) then lq (SUCC (SUCC (ZERO))) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b else false = lq (SUCC (SUCC (ZERO))) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (SUCC (SUCC (ZERO)))))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (SUCC (SUCC (ZERO)))))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) then lq (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b else false = lq (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
=================================================
Progress: 209


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
=================================================
Progress: 210


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 211


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:5.)
case tf1 (repr (tree3))(rank:5.)
=================================================
Progress: 212


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))) (Leaf (ZERO))) (Leaf (SUCC (ZERO))))) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))))) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
asdf
=================================================
Progress: 213


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 214


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) (Leaf (ZERO)))) (Leaf (SUCC (ZERO))))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) (Leaf (ZERO)))) (Leaf (SUCC (ZERO))))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf (SUCC (ZERO))) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))))))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 215


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
=================================================
Progress: 216


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 217


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (match (reprNew (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
=================================================
Progress: 218


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 219


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 220


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:5.)
case tf1 (repr (tree3))(rank:5.)
=================================================
Progress: 221


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (SUCC (SUCC (ZERO)))) (true)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 222


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 223


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (SUCC (ZERO))) = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (SUCC (ZERO))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: SUCC (SUCC (ZERO)) = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 224


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 225


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 226


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:5.)
case tf1 (repr (tree3))(rank:5.)
=================================================
Progress: 227


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (SUCC (ZERO))) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 228


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 229


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: SUCC (SUCC (ZERO)) = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 230


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
=================================================
Progress: 231


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 232


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (SUCC (SUCC (ZERO))) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (SUCC (SUCC (ZERO))) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 233


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 234


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 235


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:5.)
case tf1 (repr (tree3))(rank:5.)
=================================================
Progress: 236


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (SUCC (ZERO)))))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
asdf
=================================================
Progress: 237


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 238


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b)
Prop: SUCC (SUCC (ZERO)) = lq (SUCC (SUCC (SUCC (ZERO)))) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 239


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b else false = lq (SUCC (ZERO)) (match (reprNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (ZERO)))))) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (SUCC (ZERO)) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (ZERO)))))) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (ZERO)))))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a else false then match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Lemma List
forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 240


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)(rank : 0.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

---------------------------------------
forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro bool_nat_tuple21(rank:5.)
=================================================
Progress: 241


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

---------------------------------------
forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro bool_nat_tuple21(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:5.)
=================================================
Progress: 242


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree2(rank:5.)
=================================================
Progress: 243


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 244


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 245


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 246


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false(rank:6.)
=================================================
Progress: 247


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false(rank : 6.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (bool_nat_tuple21) with
| Tuple2 a _ -> a = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
intro Cond1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 248


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:4.)
=================================================
Progress: 249


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
=================================================
Progress: 250


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 251


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:5.)
case tf1 (repr (tree3))(rank:5.)
=================================================
Progress: 252


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
asdf
=================================================
Progress: 253


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 254


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (SUCC (SUCC (SUCC (ZERO)))) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (SUCC (ZERO))) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 255


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b else false = lq (SUCC (ZERO)) (match (reprNew (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (SUCC (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 256


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:5.)
=================================================
Progress: 257


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:5.)
=================================================
Progress: 258


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 259


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 260


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 261


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 262


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 263


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 264


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (match (reprNew (Leaf (nat3))) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 265


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (match (reprNew (Leaf (nat3))) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 266


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (match (reprNew (Leaf (nat3))) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 267


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (match (reprNew (Leaf (nat3))) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 268


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false(rank:7.)
=================================================
Progress: 269


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false(rank:7.)
=================================================
Progress: 270


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Cond1 in goal at 0(rank:23.)
=================================================
Progress: 271


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Cond1 in goal at 0(rank:23.)
=================================================
Progress: 272


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 273


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 274


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:5.)
case tf1 (repr (tree3))(rank:5.)
=================================================
Progress: 275


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO)))))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
asdf
=================================================
Progress: 276


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 277


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (ZERO)))) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 278


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 279


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 280


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:5.)
case tf1 (repr (tree3))(rank:5.)
=================================================
Progress: 281


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 282


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 283


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (ZERO)))) (match (reprNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (SUCC (SUCC (SUCC (ZERO)))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 284


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
=================================================
Progress: 285


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 286


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))))) (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 287


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
Prop: if if if lq (match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf (SUCC (SUCC (ZERO)))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a else false = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
=================================================
Progress: 288


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
=================================================
Progress: 289


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 290


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:5.)
case tf1 (repr (tree3))(rank:5.)
=================================================
Progress: 291


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))))) with
| Tuple2 _ b -> b = lq (SUCC (SUCC (ZERO))) (true)
Prop: match (tf1 (repr (Node (ZERO) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Leaf (ZERO)))) (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 292


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 293


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 294


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
=================================================
Progress: 295


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 296


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:5.)
case tf1 (repr (tree3))(rank:5.)
=================================================
Progress: 297


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 298


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 299


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (ZERO)))) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 300


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a else false then match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (SUCC (SUCC (ZERO))) then lq (SUCC (SUCC (ZERO))) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a else false then match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a else false = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (SUCC (ZERO))) then lq (SUCC (SUCC (ZERO))) (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Leaf (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
parent
lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
lower
lq(_, _)
upper
_
remove upper
_
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b else false = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (ZERO)))))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (ZERO)))))))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (ZERO))))))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
=================================================
Progress: 301


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (SUCC (SUCC (SUCC (ZERO)))) then lq (SUCC (SUCC (SUCC (ZERO)))) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (SUCC (SUCC (SUCC (ZERO)))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH1 in goal at 0
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (ZERO) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a else false = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (SUCC (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a else false then match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (SUCC (SUCC (ZERO)))))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
=================================================
Progress: 302


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a else false then match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a else false = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a else false then match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a else false then match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (SUCC (SUCC (ZERO)))) then lq (SUCC (SUCC (SUCC (ZERO)))) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (SUCC (SUCC (SUCC (ZERO)))) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a else false = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (ZERO) (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b else false = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 303


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:5.)
=================================================
Progress: 304


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:5.)
=================================================
Progress: 305


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:5.)
=================================================
Progress: 306


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 307


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 308


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 309


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 310


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 311


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 312


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 313


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 314


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 315


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (match (reprNew (Leaf (nat3))) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 316


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (match (reprNew (Leaf (nat3))) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 317


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (reprNew (Leaf (nat3))) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 318


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (match (reprNew (Leaf (nat3))) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 319


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (match (reprNew (Leaf (nat3))) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 320


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (reprNew (Leaf (nat3))) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 321


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false(rank:7.)
=================================================
Progress: 322


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false(rank:7.)
=================================================
Progress: 323


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false(rank:7.)
=================================================
Progress: 324


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Cond1 in goal at 0(rank:23.)
=================================================
Progress: 325


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Cond1 in goal at 0(rank:23.)
=================================================
Progress: 326


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Cond1 in goal at 0(rank:23.)
=================================================
Progress: 327


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
=================================================
Progress: 328


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 329


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:5.)
case tf1 (repr (tree3))(rank:5.)
=================================================
Progress: 330


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 331


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 332


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: SUCC (SUCC (SUCC (ZERO))) = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 333


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
=================================================
Progress: 334


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 335


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (ZERO)))) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 336


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
Prop: if if if lq (match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))))))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO))))))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
parent
lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
lower
lq(_, _)
upper
_
remove upper
_
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Lemma List
forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 337


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)(rank : 0.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

---------------------------------------
forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro bool_nat_tuple21(rank:5.)
=================================================
Progress: 338


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

---------------------------------------
forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro bool_nat_tuple21(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:5.)
=================================================
Progress: 339


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree2(rank:5.)
=================================================
Progress: 340


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 341


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 342


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 343


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false(rank:6.)
=================================================
Progress: 344


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false(rank : 6.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (bool_nat_tuple21) with
| Tuple2 a _ -> a = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
intro Cond1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 345


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
=================================================
Progress: 346


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 347


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 2
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (ZERO)))) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 2
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 348


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
=================================================
Progress: 349


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 350


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 2
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (SUCC (ZERO))))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (ZERO))))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (ZERO))))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 2
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (SUCC (SUCC (ZERO)))))))) with
| Tuple2 _ b -> b = lq (SUCC (SUCC (ZERO))) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b)
=================================================
Progress: 351


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (ZERO))) (Leaf (ZERO)))) (Leaf (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (ZERO))) (Leaf (ZERO)))) (Leaf (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (ZERO))) (Leaf (ZERO)))) (Leaf (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b else false = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf (ZERO)) (Leaf (SUCC (SUCC (SUCC (ZERO)))))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (SUCC (ZERO))) then lq (SUCC (SUCC (ZERO))) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a else false = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a else false then match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (reprNew (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (reprNew (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a else false = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (SUCC (ZERO))) then lq (SUCC (SUCC (ZERO))) (match (tf1 (repr (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (reprNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a else false = lq (SUCC (SUCC (ZERO))) (match (reprNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO))))))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (reprNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (reprNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 352


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:5.)
=================================================
Progress: 353


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 354


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 355


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 356


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (reprNew (Leaf (nat3))) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 357


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (reprNew (Leaf (nat3))) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 358


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false(rank:7.)
=================================================
Progress: 359


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Cond1 in goal at 0(rank:23.)
=================================================
Progress: 360


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
Prop: if if if lq (match (tf1 (repr (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a else false then match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a) (SUCC (SUCC (ZERO))) then lq (SUCC (SUCC (ZERO))) (match (tf1 (repr (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))))))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))))))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a else false then match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Lemma List
forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 361


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)(rank : 0.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

---------------------------------------
forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro bool_nat_tuple21(rank:5.)
=================================================
Progress: 362


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

---------------------------------------
forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro bool_nat_tuple21(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:5.)
=================================================
Progress: 363


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree2(rank:5.)
=================================================
Progress: 364


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 365


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 366


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (ZERO) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 367


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false(rank:6.)
=================================================
Progress: 368


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false(rank : 6.)


1st goal of : forall (bool_nat_tuple21:bool nat tuple2) (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat1) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
bool_nat_tuple21 : bool nat tuple2
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (bool_nat_tuple21) with
| Tuple2 a _ -> a else false = lq (nat2) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (bool_nat_tuple21) with
| Tuple2 a _ -> a = lq (SUCC (nat2)) (match (bool_nat_tuple21) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
intro Cond1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 369


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
=================================================
Progress: 370


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 371


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:5.)
case tf1 (repr (tree3))(rank:5.)
=================================================
Progress: 372


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
Prop: match (tf1 (repr (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (SUCC (SUCC (ZERO)))) (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (ZERO))) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (ZERO)))) (Leaf (SUCC (ZERO)))) (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO))))))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
asdf
=================================================
Progress: 373


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 374


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 375


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
=================================================
Progress: 376


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 377


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:5.)
case tf1 (repr (tree3))(rank:5.)
=================================================
Progress: 378


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
rewrite IH2 in goal at 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (SUCC (SUCC (ZERO))) (false)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
asdf
=================================================
Progress: 379


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 380


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
rewrite IH2 in goal at 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
rewrite IH2 in goal at 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (SUCC (SUCC (ZERO))) (match (reprNew (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 381


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
=================================================
Progress: 382


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 383


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:5.)
case tf1 (repr (tree3))(rank:5.)
=================================================
Progress: 384


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (SUCC (SUCC (ZERO))) (false)
Prop: match (tf1 (repr (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO))) (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 385


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 386


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (ZERO)))) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 387


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
=================================================
Progress: 388


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 389


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))))))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))))))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 390


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
=================================================
Progress: 391


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 392


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:5.)
case tf1 (repr (tree3))(rank:5.)
=================================================
Progress: 393


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
asdf
=================================================
Progress: 394


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 395


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (ZERO)))) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (SUCC (ZERO))) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 396


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
=================================================
Progress: 397


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree3)(rank:29.)
case tf1 (repr (tree3))(rank:29.)
=================================================
Progress: 398


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (repr (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 399


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
=================================================
Progress: 400


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 401


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:5.)
case tf1 (repr (tree3))(rank:5.)
=================================================
Progress: 402


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 403


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 404


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (SUCC (ZERO))))) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: SUCC (SUCC (ZERO)) = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 405


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
=================================================
Progress: 406


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 407


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:5.)
case tf1 (repr (tree3))(rank:5.)
=================================================
Progress: 408


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 1
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
asdf
=================================================
Progress: 409


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 410


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 1
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 1
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Node (SUCC (SUCC (ZERO))) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 411


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (SUCC (ZERO))) then lq (SUCC (SUCC (ZERO))) (match (tf1 (repr (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (SUCC (SUCC (ZERO))) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (SUCC (SUCC (ZERO))) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b else false = lq (SUCC (SUCC (ZERO))) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (SUCC (SUCC (ZERO))) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH1 in goal at 0
Prop: if if if lq (match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (SUCC (SUCC (ZERO))) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (SUCC (SUCC (ZERO))) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (ZERO))))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (SUCC (SUCC (ZERO))) then lq (SUCC (SUCC (ZERO))) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) (Leaf (SUCC (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b else false then match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))))))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))))))))) with
| Tuple2 _ b -> b else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a else false = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: if if if lq (match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (SUCC (ZERO)) then lq (SUCC (ZERO)) (match (tf1 (repr (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a else false = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: if if if lq (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (ZERO) then lq (ZERO) (match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 a _ -> a) else false then match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a else false then match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a else false = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
=================================================
Progress: 412


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
=================================================
Progress: 413


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 414


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:5.)
case tf1 (repr (tree3))(rank:5.)
=================================================
Progress: 415


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
asdf
=================================================
Progress: 416


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 417


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))))))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (reprNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))))))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Leaf (SUCC (ZERO))))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 418


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
=================================================
Progress: 419


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 420


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:5.)
case tf1 (repr (tree3))(rank:5.)
=================================================
Progress: 421


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 1
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 422


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 423


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 1
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (ZERO))) (Leaf (ZERO))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (SUCC (ZERO)))))))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (ZERO))) (Leaf (ZERO))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (SUCC (ZERO)))))))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 1
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (SUCC (ZERO)) (match (reprNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 424


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false(rank:8.)
=================================================
Progress: 425


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:8.)
=================================================
Progress: 426


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Cond1 in goal at 0(rank:24.)
=================================================
Progress: 427


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false(rank:8.)
=================================================
Progress: 428


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> case if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case2 : if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 429


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case2 : if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case2 : if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
=================================================
Progress: 430


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false(rank:8.)
=================================================
Progress: 431


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:8.)
=================================================
Progress: 432


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Cond1 in goal at 0(rank:24.)
=================================================
Progress: 433


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false(rank:8.)
=================================================
Progress: 434


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> case if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case2 : if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 435


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case2 : if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case2 : if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
=================================================
Progress: 436


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false(rank:8.)
=================================================
Progress: 437


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:8.)
=================================================
Progress: 438


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Cond1 in goal at 0(rank:24.)
=================================================
Progress: 439


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false(rank:8.)
=================================================
Progress: 440


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> case if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case2 : if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 441


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case2 : if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case2 : if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
=================================================
Progress: 442


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false(rank:8.)
=================================================
Progress: 443


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:8.)
=================================================
Progress: 444


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Cond1 in goal at 0(rank:24.)
=================================================
Progress: 445


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false(rank:8.)
=================================================
Progress: 446


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> case if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case2 : if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 447


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case2 : if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case2 : if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
=================================================
Progress: 448


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false(rank:8.)
=================================================
Progress: 449


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:8.)
=================================================
Progress: 450


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Cond1 in goal at 0(rank:24.)
=================================================
Progress: 451


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false(rank:8.)
=================================================
Progress: 452


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> case if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case2 : if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 453


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case2 : if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case2 : if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
=================================================
Progress: 454


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false(rank:8.)
=================================================
Progress: 455


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:8.)
=================================================
Progress: 456


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Cond1 in goal at 0(rank:24.)
=================================================
Progress: 457


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false(rank:8.)
=================================================
Progress: 458


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> case if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case2 : if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 459


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case2 : if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case2 : if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
=================================================
Progress: 460


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false(rank:8.)
=================================================
Progress: 461


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:8.)
=================================================
Progress: 462


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (reprNew (tree1)) with
| Tuple2 a _ -> a = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Cond1 in goal at 0(rank:24.)
=================================================
Progress: 463


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false(rank:8.)
=================================================
Progress: 464


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> case if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case2 : if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 465


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case2 : if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case2 : if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
=================================================
Progress: 466


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false(rank:8.)
=================================================
Progress: 467


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:8.)
=================================================
Progress: 468


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Cond1 in goal at 0(rank:24.)
=================================================
Progress: 469


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 23.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false(rank:8.)
=================================================
Progress: 470


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> case if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case2 : if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 471


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case2 : if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case2 : if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
=================================================
Progress: 472


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 24.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2))(rank:9.)
=================================================
Progress: 473


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2))(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : lq (SUCC (nat2)) (nat3) = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = true
---------------------------------------
lq (SUCC (nat2)) (nat3) = lq (SUCC (nat2)) (nat3)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 474


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : lq (SUCC (nat2)) (nat3) = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = true
---------------------------------------
lq (SUCC (nat2)) (nat3) = lq (SUCC (nat2)) (nat3)

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : false = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 475


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : false = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : false = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
discriminate(rank:6.)
=================================================
Progress: 476


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : false = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 2
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false
rewrite <- Case1 in goal at 0
case if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false
rewrite Case1 in goal at 0
rewrite <- Case2 in goal at 0
case lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2))
reflexivity
discriminate
discriminate
validate generalize_common_subterm_goal
Prop: false = lq (SUCC (ZERO)) (ZERO)
Prop: false = lq (SUCC (SUCC (SUCC (ZERO)))) (ZERO)
Prop: false = lq (SUCC (ZERO)) (ZERO)
Lemma List
forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 477


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:8.)
=================================================
Progress: 478


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 479


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 480


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (nat1) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 481


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (nat1) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
false = lq (ZERO) (nat3)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
validate generalize_common_subterm_goal
Prop: false = lq (ZERO) (SUCC (SUCC (ZERO)))
Prop: false = lq (ZERO) (ZERO)
Prop: false = lq (ZERO) (ZERO)
asdf
=================================================
Progress: 482


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 24.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2))(rank:9.)
=================================================
Progress: 483


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2))(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : lq (SUCC (nat2)) (nat3) = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = true
---------------------------------------
lq (SUCC (nat2)) (nat3) = lq (SUCC (nat2)) (nat3)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 484


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : lq (SUCC (nat2)) (nat3) = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = true
---------------------------------------
lq (SUCC (nat2)) (nat3) = lq (SUCC (nat2)) (nat3)

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : false = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 485


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : false = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : false = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
discriminate(rank:6.)
=================================================
Progress: 486


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : false = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 2
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false
rewrite <- Case1 in goal at 0
case if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false
rewrite Case1 in goal at 0
rewrite <- Case2 in goal at 0
case lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2))
reflexivity
discriminate
discriminate
validate generalize_common_subterm_goal
Prop: false = lq (SUCC (ZERO)) (ZERO)
Prop: false = lq (SUCC (SUCC (SUCC (ZERO)))) (ZERO)
Prop: false = lq (SUCC (ZERO)) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 487


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:8.)
=================================================
Progress: 488


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 489


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 490


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (nat1) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 491


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (nat1) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
false = lq (ZERO) (nat3)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
validate generalize_common_subterm_goal
Prop: false = lq (ZERO) (SUCC (SUCC (SUCC (ZERO))))
Prop: false = lq (ZERO) (ZERO)
Prop: false = lq (ZERO) (ZERO)
asdf
=================================================
Progress: 492


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 24.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2))(rank:9.)
=================================================
Progress: 493


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2))(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : lq (SUCC (nat2)) (nat3) = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = true
---------------------------------------
lq (SUCC (nat2)) (nat3) = lq (SUCC (nat2)) (nat3)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 494


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : lq (SUCC (nat2)) (nat3) = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = true
---------------------------------------
lq (SUCC (nat2)) (nat3) = lq (SUCC (nat2)) (nat3)

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : false = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 495


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : false = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : false = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
discriminate(rank:6.)
=================================================
Progress: 496


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : false = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 2
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false
rewrite <- Case1 in goal at 0
case if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false
rewrite Case1 in goal at 0
rewrite <- Case2 in goal at 0
case lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2))
reflexivity
discriminate
discriminate
validate generalize_common_subterm_goal
Prop: false = lq (SUCC (ZERO)) (SUCC (ZERO))
Prop: false = lq (SUCC (ZERO)) (SUCC (ZERO))
Prop: false = lq (SUCC (ZERO)) (ZERO)
Lemma List
forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 497


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:8.)
=================================================
Progress: 498


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 499


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 500


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (nat1) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 501


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (nat1) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
false = lq (ZERO) (nat3)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
validate generalize_common_subterm_goal
Prop: false = lq (ZERO) (SUCC (ZERO))
Prop: false = lq (ZERO) (ZERO)
Prop: false = lq (ZERO) (ZERO)
asdf
=================================================
Progress: 502


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 24.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2))(rank:9.)
=================================================
Progress: 503


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2))(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : lq (SUCC (nat2)) (nat3) = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = true
---------------------------------------
lq (SUCC (nat2)) (nat3) = lq (SUCC (nat2)) (nat3)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 504


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : lq (SUCC (nat2)) (nat3) = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = true
---------------------------------------
lq (SUCC (nat2)) (nat3) = lq (SUCC (nat2)) (nat3)

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : false = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 505


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : false = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : false = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
discriminate(rank:6.)
=================================================
Progress: 506


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : false = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 2
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false
rewrite <- Case1 in goal at 0
case if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false
rewrite Case1 in goal at 0
rewrite <- Case2 in goal at 0
case lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2))
reflexivity
discriminate
discriminate
validate generalize_common_subterm_goal
Prop: false = lq (SUCC (SUCC (ZERO))) (SUCC (ZERO))
Prop: false = lq (SUCC (ZERO)) (ZERO)
Prop: false = lq (SUCC (ZERO)) (ZERO)
Lemma List
forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 507


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 _ b -> b else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:8.)
=================================================
Progress: 508


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 509


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 510


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (nat1) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 511


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (nat1) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
false = lq (ZERO) (nat3)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
validate generalize_common_subterm_goal
Prop: false = lq (ZERO) (ZERO)
Prop: false = lq (ZERO) (ZERO)
Prop: false = lq (ZERO) (ZERO)
Lemma List
forall (nat1:nat), false = lq (ZERO) (nat1)
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
false = lq (ZERO) (nat3)

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 512


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
false = lq (ZERO) (nat3)

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat), false = lq (ZERO) (nat1)(rank : 0.)


1st goal of : forall (nat1:nat), false = lq (ZERO) (nat1)

---------------------------------------
forall (nat1:nat), false = lq (ZERO) (nat1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat1(rank:10.)
=================================================
Progress: 513


1st goal of : forall (nat1:nat), false = lq (ZERO) (nat1)

---------------------------------------
forall (nat1:nat), false = lq (ZERO) (nat1)

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat1(rank : 10.)


1st goal of : forall (nat1:nat), false = lq (ZERO) (nat1)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
false = lq (ZERO) (ZERO)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 514


1st goal of : forall (nat1:nat), false = lq (ZERO) (nat1)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
false = lq (ZERO) (ZERO)

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat1:nat), false = lq (ZERO) (nat1)
nat1 : nat
nat2 : nat
IH1 : false = lq (ZERO) (nat2)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
false = lq (ZERO) (SUCC (nat2))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 515


1st goal of : forall (nat1:nat), false = lq (ZERO) (nat1)
nat1 : nat
nat2 : nat
IH1 : false = lq (ZERO) (nat2)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
false = lq (ZERO) (SUCC (nat2))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat), false = lq (ZERO) (nat1)
nat1 : nat
nat2 : nat
IH1 : false = lq (ZERO) (nat2)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
false = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9.)
=================================================
Progress: 516


1st goal of : forall (nat1:nat), false = lq (ZERO) (nat1)
nat1 : nat
nat2 : nat
IH1 : false = lq (ZERO) (nat2)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
false = true

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9.)


1st goal of : forall (nat1:nat), false = lq (ZERO) (nat1)
nat1 : nat
nat2 : nat
IH1 : false = lq (ZERO) (nat2)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
lq (ZERO) (nat2) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: lq (ZERO) (SUCC (ZERO)) = true
Prop: lq (ZERO) (SUCC (ZERO)) = true
Prop: lq (ZERO) (ZERO) = true
asdf
previous tactics
simpl in goal
=================================================
Progress: 517


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 24.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2))(rank:9.)
=================================================
Progress: 518


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2))(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : lq (SUCC (nat2)) (nat3) = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = true
---------------------------------------
lq (SUCC (nat2)) (nat3) = lq (SUCC (nat2)) (nat3)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 519


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : lq (SUCC (nat2)) (nat3) = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = true
---------------------------------------
lq (SUCC (nat2)) (nat3) = lq (SUCC (nat2)) (nat3)

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : false = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 520


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : false = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : false = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
discriminate(rank:6.)
=================================================
Progress: 521


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : false = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 2
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false
rewrite <- Case1 in goal at 0
case if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false
rewrite Case1 in goal at 0
rewrite <- Case2 in goal at 0
case lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2))
reflexivity
discriminate
discriminate
validate generalize_common_subterm_goal
Prop: false = lq (SUCC (ZERO)) (SUCC (ZERO))
Prop: false = lq (SUCC (ZERO)) (ZERO)
Prop: false = lq (SUCC (ZERO)) (ZERO)
Lemma List
forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 522


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:8.)
=================================================
Progress: 523


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 524


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 525


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (nat1) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 526


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (nat1) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
false = lq (ZERO) (nat3)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
validate generalize_common_subterm_goal
Prop: false = lq (ZERO) (SUCC (SUCC (ZERO)))
Prop: false = lq (ZERO) (SUCC (ZERO))
Prop: false = lq (ZERO) (ZERO)
asdf
=================================================
Progress: 527


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 24.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2))(rank:9.)
=================================================
Progress: 528


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2))(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : lq (SUCC (nat2)) (nat3) = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = true
---------------------------------------
lq (SUCC (nat2)) (nat3) = lq (SUCC (nat2)) (nat3)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 529


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : lq (SUCC (nat2)) (nat3) = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = true
---------------------------------------
lq (SUCC (nat2)) (nat3) = lq (SUCC (nat2)) (nat3)

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : false = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 530


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : false = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : false = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
discriminate(rank:6.)
=================================================
Progress: 531


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : false = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 2
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false
rewrite <- Case1 in goal at 0
case if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false
rewrite Case1 in goal at 0
rewrite <- Case2 in goal at 0
case lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2))
reflexivity
discriminate
discriminate
validate generalize_common_subterm_goal
Prop: false = lq (SUCC (ZERO)) (SUCC (ZERO))
Prop: false = lq (SUCC (ZERO)) (ZERO)
Prop: false = lq (SUCC (ZERO)) (ZERO)
Lemma List
forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 532


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:8.)
=================================================
Progress: 533


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 534


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 535


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (nat1) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 536


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (nat1) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
false = lq (ZERO) (nat3)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
validate generalize_common_subterm_goal
Prop: false = lq (ZERO) (ZERO)
Prop: false = lq (ZERO) (ZERO)
Prop: false = lq (ZERO) (ZERO)
=================================================
Progress: 537


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 24.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2))(rank:9.)
=================================================
Progress: 538


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2))(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : lq (SUCC (nat2)) (nat3) = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = true
---------------------------------------
lq (SUCC (nat2)) (nat3) = lq (SUCC (nat2)) (nat3)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 539


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : lq (SUCC (nat2)) (nat3) = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = true
---------------------------------------
lq (SUCC (nat2)) (nat3) = lq (SUCC (nat2)) (nat3)

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : false = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 540


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (reprNew (tree1)) with
| Tuple2 a _ -> a = true
Case2 : false = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : false = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
discriminate(rank:6.)
=================================================
Progress: 541


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : false = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 2
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false
rewrite <- Case1 in goal at 0
case if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false
rewrite Case1 in goal at 0
rewrite <- Case2 in goal at 0
case lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2))
reflexivity
discriminate
discriminate
validate generalize_common_subterm_goal
Prop: false = lq (SUCC (SUCC (ZERO))) (ZERO)
Prop: false = lq (SUCC (ZERO)) (ZERO)
Prop: false = lq (SUCC (ZERO)) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 542


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree1)) with
| Tuple2 a _ -> a else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:8.)
=================================================
Progress: 543


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 544


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 545


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (SUCC (nat1)) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (nat1) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 546


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), false = lq (nat1) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat), false = lq (SUCC (nat1)) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), false = lq (SUCC (nat1)) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
false = lq (ZERO) (nat3)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
validate generalize_common_subterm_goal
Prop: false = lq (ZERO) (ZERO)
Prop: false = lq (ZERO) (SUCC (ZERO))
Prop: false = lq (ZERO) (SUCC (ZERO))
asdf
=================================================
Progress: 547


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
true = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 24.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2))(rank:9.)
=================================================
Progress: 548


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2))(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : lq (SUCC (nat2)) (nat3) = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = true
---------------------------------------
lq (SUCC (nat2)) (nat3) = lq (SUCC (nat2)) (nat3)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 549


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : lq (SUCC (nat2)) (nat3) = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = true
---------------------------------------
lq (SUCC (nat2)) (nat3) = lq (SUCC (nat2)) (nat3)

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : false = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 550


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = true
Case2 : false = true
Case3 : lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : false = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
discriminate(rank:6.)
=================================================
Progress: 551


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : false = true
Case2 : if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
tree1 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree2:tree), if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true -> if if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (nat2) then lq (nat2) (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = lq (nat2) (match (reprNew (tree2)) with
| Tuple2 _ b -> b)
Inductive1 : nat1 = SUCC (nat2)
tree2 : tree
nat3 : nat
Base1 : tree2 = Leaf (nat3)
Cond1 : if if lq (match (reprNew (tree1)) with
| Tuple2 _ b -> b) (SUCC (nat2)) then match (reprNew (Leaf (nat3))) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = true
Case1 : if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false = false
---------------------------------------
false = lq (SUCC (nat2)) (nat3)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 2
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case if if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b else false
rewrite <- Case1 in goal at 0
case if lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2)) then lq (SUCC (nat2)) (match (tf1 (repr (Leaf (nat3)))) with
| Tuple2 a _ -> a) else false
rewrite Case1 in goal at 0
rewrite <- Case2 in goal at 0
case lq (match (tf1 (repr (tree1))) with
| Tuple2 a _ -> a) (SUCC (nat2))
reflexivity
discriminate
discriminate
validate generalize_common_subterm_goal
Prop: false = lq (SUCC (ZERO)) (ZERO)
Prop: false = lq (SUCC (ZERO)) (SUCC (SUCC (SUCC (ZERO))))
Prop: false = lq (SUCC (ZERO)) (ZERO)
asdf
=================================================
Progress: 552


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case reprNew (tree3)
parent
lq (nat1) (bool2)
lower
lq(_, bool2)
upper
_
remove upper
bool1
remove lower
bool1
remove upper
lq(nat1, bool2)
remove lower
lq(nat1, bool2)
remove upper
lq(nat1, bool2)
remove lower
lq(nat1, bool2)
remove upper
lq(nat1, bool2)
remove lower
lq(nat1, bool2)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
asdf
=================================================
Progress: 553


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 554


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
parent
lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
lower
lq(_, _)
upper
_
remove upper
_
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO))))) (Leaf (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 555


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case reprNew (tree3)
parent
lq (nat1) (bool2)
lower
lq(_, bool2)
upper
_
remove upper
bool1
remove lower
bool1
remove upper
lq(nat1, bool2)
remove lower
lq(nat1, bool2)
remove upper
lq(nat1, bool2)
remove lower
lq(nat1, bool2)
remove upper
lq(nat1, bool2)
remove lower
lq(nat1, bool2)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 556


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 557


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
parent
lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
lower
lq(_, _)
upper
_
remove upper
_
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (ZERO))) (Leaf (SUCC (ZERO))))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 558


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
asdf
=================================================
Progress: 559


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 560


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 561


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
asdf
=================================================
Progress: 562


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 563


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 564


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 565


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 566


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 567


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
asdf
=================================================
Progress: 568


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 569


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (SUCC (ZERO))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 570


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
Prop: match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 571


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 572


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (ZERO))))))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (ZERO))))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (ZERO)))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 573


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 574


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 575


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (ZERO)) = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) (Leaf (SUCC (SUCC (SUCC (ZERO)))))))))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 576


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))))) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
asdf
=================================================
Progress: 577


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 578


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: SUCC (SUCC (ZERO)) = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 579


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
Prop: match (tf1 (repr (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO))) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (SUCC (ZERO)))))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (SUCC (ZERO)))))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
asdf
=================================================
Progress: 580


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 581


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (ZERO))) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (ZERO))) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 582


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
asdf
=================================================
Progress: 583


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 584


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 585


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 586


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 587


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 588


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO))))))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 589


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 590


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (ZERO)))) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))))) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) (Leaf (SUCC (ZERO))))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))))) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) (Leaf (SUCC (ZERO))))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 591


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
asdf
=================================================
Progress: 592


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 593


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 594


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (SUCC (SUCC (ZERO)))))))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (SUCC (ZERO))))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 595


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 596


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (ZERO)))) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 597


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
asdf
=================================================
Progress: 598


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 599


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (SUCC (ZERO))))) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (SUCC (ZERO))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 600


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (SUCC (ZERO)))))) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
asdf
=================================================
Progress: 601


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 602


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 603


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
Prop: match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (SUCC (SUCC (SUCC (ZERO)))) (false)
asdf
=================================================
Progress: 604


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 605


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 606


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 607


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 608


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (ZERO)))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 609


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
Prop: match (tf1 (repr (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
asdf
=================================================
Progress: 610


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 611


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 612


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (ZERO)))) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))))) (Leaf (SUCC (ZERO))))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
asdf
=================================================
Progress: 613


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 614


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: SUCC (SUCC (ZERO)) = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 615


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
rewrite IH2 in goal at 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 616


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 617


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
rewrite IH2 in goal at 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (SUCC (ZERO))))) (match (reprNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
rewrite IH2 in goal at 2
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (SUCC (SUCC (SUCC (ZERO)))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (SUCC (SUCC (ZERO))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 618


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
asdf
=================================================
Progress: 619


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 620


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 621


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
asdf
=================================================
Progress: 622


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 623


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 624


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
asdf
=================================================
Progress: 625


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 626


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 627


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 628


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 629


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (ZERO)) = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 630


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (ZERO) (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Node (SUCC (SUCC (ZERO))) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 631


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 632


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 633


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
asdf
=================================================
Progress: 634


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 635


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (SUCC (ZERO))))) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (SUCC (SUCC (ZERO)))) = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: SUCC (SUCC (ZERO)) = lq (SUCC (SUCC (SUCC (ZERO)))) (match (reprNew (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 636


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (SUCC (ZERO))) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 637


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 638


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (SUCC (ZERO)) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (reprNew (Node (SUCC (ZERO)) (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 639


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (SUCC (SUCC (ZERO)))) (true)
asdf
=================================================
Progress: 640


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 641


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 642


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 2
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (SUCC (SUCC (SUCC (ZERO)))) (true)
Prop: match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
asdf
=================================================
Progress: 643


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 644


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 2
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite IH2 in goal at 2
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 645


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 2
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
asdf
=================================================
Progress: 646


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 647


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 2
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite IH2 in goal at 2
rewrite <- IH1 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 648


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
asdf
=================================================
Progress: 649


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 650


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 651


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
asdf
=================================================
Progress: 652


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 29.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 653


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case2 : if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO)))))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO)))))))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))) (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (SUCC (ZERO))) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
Fatal error: exception Failure("worklist is empty")
Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 284, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 24, characters 12-79
