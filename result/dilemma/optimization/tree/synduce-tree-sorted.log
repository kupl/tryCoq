Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (tr:tree), main (tr) = mainNew (tr)(rank : 0.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), main (tree1) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), main (tree1) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = match (reprNew (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction tree1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), match (tf1 (repr (tree1))) with
| Tuple2 _ b -> b = match (reprNew (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> induction tree1(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
match (tf1 (repr (Leaf (nat1)))) with
| Tuple2 _ b -> b = match (reprNew (Leaf (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
match (tf1 (repr (Leaf (nat1)))) with
| Tuple2 _ b -> b = match (reprNew (Leaf (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
match (tf1 (repr (Node (nat1) (tree2) (tree3)))) with
| Tuple2 _ b -> b = match (reprNew (Node (nat1) (tree2) (tree3))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
match (tf1 (repr (Node (nat1) (tree2) (tree3)))) with
| Tuple2 _ b -> b = match (reprNew (Node (nat1) (tree2) (tree3))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:4.)
rewrite IH1 in goal at 0(rank:11.)
rewrite IH2 in goal at 0(rank:11.)
rewrite <- IH1 in goal at 0(rank:11.)
rewrite <- IH2 in goal at 0(rank:11.)
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:4.)
=================================================
Progress: 6


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:12.)
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:5.)
=================================================
Progress: 7


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:12.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:5.)
=================================================
Progress: 8


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
=================================================
Progress: 9


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
=================================================
Progress: 10


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
=================================================
Progress: 11


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 12


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 13


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 14


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 15


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 16


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 17


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 18


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 19


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 20


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 21


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 22


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 23


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 24


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:4.)
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:4.)
rewrite IH2 in goal at 0(rank:11.)
rewrite <- IH2 in goal at 0(rank:11.)
=================================================
Progress: 25


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
rewrite <- IH2 in goal at 0(rank:12.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 26


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 27


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 28


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 29


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 30


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 31


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 32


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 33


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
case reprNew (tree2)(rank:30.)
case reprNew (tree3)(rank:30.)
=================================================
Progress: 34


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 35


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 36


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 37


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:4.)
rewrite <- IH1 in goal at 0(rank:11.)
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:4.)
=================================================
Progress: 38


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
rewrite <- IH2 in goal at 2(rank:12.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
=================================================
Progress: 39


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:5.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 40


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH2 in goal at 2(rank:13.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
=================================================
Progress: 41


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 42


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:13.)
=================================================
Progress: 43


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:14.)
=================================================
Progress: 44


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 45


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 46


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
case reprNew (tree3)(rank:30.)
case tf1 (repr (tree2))(rank:30.)
=================================================
Progress: 47


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 48


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 49


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 50


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:4.)
rewrite <- IH2 in goal at 0(rank:11.)
case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false(rank:4.)
=================================================
Progress: 51


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:5.)
rewrite <- IH2 in goal at 0(rank:12.)
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite IH1 in goal at 2(rank:20.)
rewrite IH1 in goal at 0(rank:20.)
rewrite IH1 in goal at 1(rank:20.)
=================================================
Progress: 52


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite IH1 in goal at 1(rank:12.)
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 53


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:6.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 54


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
=================================================
Progress: 55


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:21.)
=================================================
Progress: 56


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 57


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 58


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 59


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 1(rank:22.)
case tf1 (repr (tree2))(rank:30.)
rewrite IH1 in goal at 2(rank:22.)
=================================================
Progress: 60


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 61


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 62


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 63


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:4.)
case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank:4.)
=================================================
Progress: 64


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:5.)
rewrite <- IH1 in goal at 0(rank:12.)
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH2 in goal at 0(rank:20.)
rewrite IH2 in goal at 1(rank:12.)
rewrite IH2 in goal at 2(rank:20.)
=================================================
Progress: 65


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH2 in goal at 0(rank:12.)
=================================================
Progress: 66


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 67


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH1 in goal at 0(rank:13.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH2 in goal at 2(rank:21.)
=================================================
Progress: 68


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 69


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:22.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 70


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:22.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 71


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 72


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
case reprNew (tree2)(rank:30.)
case tf1 (repr (tree2))(rank:30.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 73


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 74


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 75


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 76


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:4.)
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:4.)
=================================================
Progress: 77


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:5.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:5.)
=================================================
Progress: 78


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:5.)
=================================================
Progress: 79


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 80


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
=================================================
Progress: 81


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
=================================================
Progress: 82


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 83


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 84


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 85


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 86


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 87


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 88


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 89


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 90


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 91


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 92


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 93


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 94


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 95


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:4.)
case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank:4.)
=================================================
Progress: 96


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite IH2 in goal at 1(rank:12.)
rewrite IH2 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 2(rank:12.)
=================================================
Progress: 97


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 98


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
=================================================
Progress: 99


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 100


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
case reprNew (tree2)(rank:30.)
case reprNew (tree3)(rank:30.)
=================================================
Progress: 101


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
case reprNew (tree2)(rank:30.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 102


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:4.)
case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false(rank:4.)
=================================================
Progress: 103


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH1 in goal at 1(rank:12.)
rewrite IH1 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 2(rank:12.)
=================================================
Progress: 104


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite IH1 in goal at 1(rank:12.)
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 105


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 2(rank:13.)
=================================================
Progress: 106


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 107


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
case reprNew (tree3)(rank:30.)
case tf1 (repr (tree2))(rank:30.)
=================================================
Progress: 108


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
case tf1 (repr (tree2))(rank:30.)
rewrite IH1 in goal at 1(rank:22.)
=================================================
Progress: 109


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:4.)
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:4.)
=================================================
Progress: 110


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:5.)
rewrite IH2 in goal at 1(rank:12.)
rewrite IH1 in goal at 0(rank:20.)
rewrite IH1 in goal at 1(rank:20.)
rewrite IH1 in goal at 2(rank:20.)
rewrite IH2 in goal at 0(rank:20.)
rewrite IH2 in goal at 2(rank:20.)
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:5.)
=================================================
Progress: 111


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
rewrite IH1 in goal at 1(rank:12.)
rewrite IH1 in goal at 0(rank:20.)
rewrite IH2 in goal at 1(rank:12.)
rewrite IH2 in goal at 0(rank:20.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:5.)
=================================================
Progress: 112


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:6.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
=================================================
Progress: 113


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
=================================================
Progress: 114


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
=================================================
Progress: 115


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 116


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 1(rank:22.)
rewrite IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
=================================================
Progress: 117


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 1(rank:22.)
rewrite IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
=================================================
Progress: 118


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 119


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 1(rank:22.)
rewrite IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
=================================================
Progress: 120


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 121


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 122


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 123


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 124


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 125


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 126


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 127


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 128


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:5.)
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
=================================================
Progress: 129


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 130


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 131


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 132


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 133


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 134


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 135


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 136


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree3))(rank:31.)
=================================================
Progress: 137


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:5.)
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
=================================================
Progress: 138


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH2 in goal at 2(rank:13.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
=================================================
Progress: 139


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:6.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 140


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:14.)
=================================================
Progress: 141


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 142


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 143


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 144


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 145


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 146


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:7.)
case tf1 (repr (tree3))(rank:7.)
=================================================
Progress: 147


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : if bool1 then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
bool1 : bool
bool2 : bool
Case5 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite IH2 in goal at 0
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
asdf
=================================================
Progress: 148


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 149


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite IH2 in goal at 0
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf (SUCC (ZERO))) (Leaf (SUCC (SUCC (ZERO))))))) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (ZERO)))) (match (reprNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf (SUCC (ZERO))) (Leaf (SUCC (SUCC (ZERO))))))) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite IH2 in goal at 0
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (SUCC (SUCC (ZERO))) (match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 150


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:5.)
rewrite <- IH2 in goal at 0(rank:12.)
case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false(rank:5.)
=================================================
Progress: 151


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:6.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 152


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
=================================================
Progress: 153


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 154


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 1(rank:22.)
case tf1 (repr (tree2))(rank:30.)
rewrite IH1 in goal at 2(rank:22.)
=================================================
Progress: 155


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 156


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:5.)
case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank:5.)
=================================================
Progress: 157


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 158


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 159


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:22.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 160


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
case reprNew (tree2)(rank:30.)
case tf1 (repr (tree2))(rank:30.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 161


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 162


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:5.)
=================================================
Progress: 163


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 164


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 165


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
case reprNew (tree2)(rank:30.)
case reprNew (tree3)(rank:30.)
=================================================
Progress: 166


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 167


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 168


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:5.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:5.)
=================================================
Progress: 169


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 170


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 171


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
case reprNew (tree3)(rank:30.)
case tf1 (repr (tree2))(rank:30.)
=================================================
Progress: 172


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 173


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 174


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:5.)
=================================================
Progress: 175


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
=================================================
Progress: 176


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 177


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 178


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 179


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 180


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 181


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 182


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 183


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:5.)
=================================================
Progress: 184


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH1 in goal at 0(rank:13.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH2 in goal at 2(rank:21.)
=================================================
Progress: 185


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 186


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:22.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 187


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 188


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 189


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 190


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 191


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 192


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:5.)
rewrite <- IH1 in goal at 2(rank:12.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:5.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 193


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 194


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 195


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
case reprNew (tree2)(rank:30.)
case reprNew (tree3)(rank:30.)
=================================================
Progress: 196


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 197


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 198


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
rewrite <- IH2 in goal at 0(rank:12.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:5.)
=================================================
Progress: 199


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
=================================================
Progress: 200


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 201


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 202


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 203


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 204


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 205


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 206


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 207


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:5.)
rewrite <- IH2 in goal at 0(rank:12.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:5.)
=================================================
Progress: 208


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 209


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 210


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
case reprNew (tree2)(rank:30.)
case reprNew (tree3)(rank:30.)
=================================================
Progress: 211


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 212


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 213


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
rewrite <- IH1 in goal at 1(rank:20.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:5.)
=================================================
Progress: 214


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
=================================================
Progress: 215


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 216


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 2(rank:14.)
=================================================
Progress: 217


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 218


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 219


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 220


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 221


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 222


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:5.)
rewrite <- IH1 in goal at 2(rank:20.)
=================================================
Progress: 223


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 224


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
case reprNew (tree2)(rank:30.)
case reprNew (tree3)(rank:30.)
=================================================
Progress: 225


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 226


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:13.)
=================================================
Progress: 227


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
case reprNew (tree3)(rank:30.)
case tf1 (repr (tree2))(rank:30.)
=================================================
Progress: 228


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 229


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
case reprNew (tree2)(rank:29.)
case tf1 (repr (tree2))(rank:29.)
=================================================
Progress: 230


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:5.)
rewrite <- IH2 in goal at 2(rank:12.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:5.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 1(rank:20.)
=================================================
Progress: 231


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 232


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 233


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
case reprNew (tree2)(rank:30.)
case reprNew (tree3)(rank:30.)
=================================================
Progress: 234


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 235


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 236


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
rewrite <- IH2 in goal at 2(rank:12.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
=================================================
Progress: 237


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
=================================================
Progress: 238


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 239


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 2(rank:14.)
=================================================
Progress: 240


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 241


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 242


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 243


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 244


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 245


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:5.)
=================================================
Progress: 246


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
=================================================
Progress: 247


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 248


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 249


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 250


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 251


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 252


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 253


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 254


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:5.)
rewrite IH1 in goal at 2(rank:20.)
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
rewrite IH1 in goal at 0(rank:20.)
rewrite IH1 in goal at 1(rank:20.)
=================================================
Progress: 255


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
=================================================
Progress: 256


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:6.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 257


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 2(rank:14.)
=================================================
Progress: 258


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 259


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 260


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 261


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 262


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 263


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:7.)
case tf1 (repr (tree3))(rank:7.)
=================================================
Progress: 264


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : if bool1 then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
bool1 : bool
bool2 : bool
Case5 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite IH2 in goal at 0
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
asdf
=================================================
Progress: 265


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 266


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite IH2 in goal at 0
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (SUCC (ZERO))))) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite IH2 in goal at 0
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 267


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:5.)
rewrite IH1 in goal at 2(rank:20.)
case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank:5.)
rewrite IH1 in goal at 0(rank:20.)
rewrite IH1 in goal at 1(rank:20.)
=================================================
Progress: 268


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:6.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
=================================================
Progress: 269


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:21.)
=================================================
Progress: 270


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 1(rank:22.)
rewrite IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
=================================================
Progress: 271


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 1(rank:22.)
case tf1 (repr (tree2))(rank:30.)
rewrite IH1 in goal at 2(rank:22.)
=================================================
Progress: 272


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 273


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
=================================================
Progress: 274


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree2)(rank:29.)
case tf1 (repr (tree2))(rank:29.)
=================================================
Progress: 275


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:5.)
rewrite IH1 in goal at 0(rank:20.)
rewrite IH1 in goal at 2(rank:20.)
=================================================
Progress: 276


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
case tf1 (repr (tree2))(rank:29.)
=================================================
Progress: 277


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:5.)
rewrite IH2 in goal at 2(rank:20.)
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite IH2 in goal at 1(rank:12.)
rewrite IH2 in goal at 0(rank:20.)
=================================================
Progress: 278


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
=================================================
Progress: 279


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:6.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
=================================================
Progress: 280


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 2(rank:14.)
=================================================
Progress: 281


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 282


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH2 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
=================================================
Progress: 283


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 284


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 285


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree3))(rank:31.)
=================================================
Progress: 286


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:5.)
rewrite <- IH1 in goal at 0(rank:12.)
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
=================================================
Progress: 287


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
=================================================
Progress: 288


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 289


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 290


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 291


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 292


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 293


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 294


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 295


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:7.)
case tf1 (repr (tree3))(rank:7.)
=================================================
Progress: 296


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
bool1 : bool
bool2 : bool
Case5 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite IH2 in goal at 1
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 297


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (nat3) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 298


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (nat3) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (nat3) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite IH2 in goal at 1
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (SUCC (ZERO))))) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (ZERO))))))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (ZERO))))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (SUCC (SUCC (ZERO))) (Leaf (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (SUCC (SUCC (ZERO))) (Leaf (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite IH2 in goal at 1
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (SUCC (ZERO))) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 299


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:5.)
case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank:5.)
rewrite IH2 in goal at 0(rank:20.)
rewrite IH2 in goal at 2(rank:20.)
=================================================
Progress: 300


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:6.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
=================================================
Progress: 301


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
=================================================
Progress: 302


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 1(rank:22.)
rewrite IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
=================================================
Progress: 303


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 1(rank:22.)
case tf1 (repr (tree2))(rank:30.)
rewrite IH1 in goal at 2(rank:22.)
=================================================
Progress: 304


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 305


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
=================================================
Progress: 306


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
case reprNew (tree2)(rank:29.)
=================================================
Progress: 307


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:5.)
rewrite <- IH1 in goal at 0(rank:12.)
=================================================
Progress: 308


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:13.)
case reprNew (tree2)(rank:29.)
case tf1 (repr (tree2))(rank:29.)
=================================================
Progress: 309


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
=================================================
Progress: 310


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:21.)
=================================================
Progress: 311


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 1(rank:22.)
case tf1 (repr (tree2))(rank:30.)
rewrite IH1 in goal at 2(rank:22.)
=================================================
Progress: 312


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite <- IH1 in goal at 2(rank:20.)
case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank:5.)
=================================================
Progress: 313


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:6.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
=================================================
Progress: 314


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 315


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH2 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
=================================================
Progress: 316


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
case reprNew (tree2)(rank:30.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 317


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree3))(rank:31.)
=================================================
Progress: 318


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:5.)
rewrite <- IH1 in goal at 2(rank:20.)
case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 319


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:6.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 320


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 321


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 322


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
case reprNew (tree2)(rank:30.)
rewrite <- IH1 in goal at 1(rank:22.)
=================================================
Progress: 323


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 324


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
rewrite <- IH2 in goal at 2(rank:12.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
=================================================
Progress: 325


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
=================================================
Progress: 326


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 327


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 2(rank:14.)
=================================================
Progress: 328


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 329


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 330


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 331


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 332


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 333


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:5.)
rewrite <- IH2 in goal at 2(rank:12.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
=================================================
Progress: 334


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 335


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 336


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
case reprNew (tree2)(rank:30.)
case reprNew (tree3)(rank:30.)
=================================================
Progress: 337


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 338


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 339


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
rewrite <- IH1 in goal at 1(rank:20.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:5.)
=================================================
Progress: 340


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
=================================================
Progress: 341


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 342


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 2(rank:14.)
=================================================
Progress: 343


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 344


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 345


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 346


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 347


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 348


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:5.)
rewrite <- IH1 in goal at 1(rank:20.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:5.)
=================================================
Progress: 349


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 350


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 351


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
case reprNew (tree2)(rank:30.)
case reprNew (tree3)(rank:30.)
=================================================
Progress: 352


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 353


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 354


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:5.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 355


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 356


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
case reprNew (tree2)(rank:30.)
case reprNew (tree3)(rank:30.)
=================================================
Progress: 357


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank:5.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 358


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
case reprNew (tree2)(rank:29.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 359


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 360


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
case reprNew (tree2)(rank:29.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 361


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:5.)
=================================================
Progress: 362


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
=================================================
Progress: 363


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
case reprNew (tree3)(rank:30.)
case tf1 (repr (tree2))(rank:30.)
=================================================
Progress: 364


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank:5.)
=================================================
Progress: 365


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
case reprNew (tree2)(rank:29.)
case tf1 (repr (tree2))(rank:29.)
=================================================
Progress: 366


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:5.)
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 367


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
case reprNew (tree2)(rank:29.)
=================================================
Progress: 368


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
=================================================
Progress: 369


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:21.)
=================================================
Progress: 370


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 1(rank:22.)
case tf1 (repr (tree2))(rank:30.)
rewrite IH1 in goal at 2(rank:22.)
=================================================
Progress: 371


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:5.)
=================================================
Progress: 372


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
case reprNew (tree2)(rank:29.)
case tf1 (repr (tree2))(rank:29.)
=================================================
Progress: 373


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:5.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
=================================================
Progress: 374


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 375


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
case reprNew (tree2)(rank:30.)
case reprNew (tree3)(rank:30.)
=================================================
Progress: 376


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 1(rank:12.)
=================================================
Progress: 377


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
case reprNew (tree2)(rank:29.)
case tf1 (repr (tree2))(rank:29.)
=================================================
Progress: 378


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false(rank:5.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
=================================================
Progress: 379


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
case reprNew (tree2)(rank:29.)
case tf1 (repr (tree2))(rank:29.)
=================================================
Progress: 380


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:5.)
=================================================
Progress: 381


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
=================================================
Progress: 382


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
case reprNew (tree3)(rank:30.)
case tf1 (repr (tree2))(rank:30.)
=================================================
Progress: 383


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank:5.)
=================================================
Progress: 384


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
case tf1 (repr (tree2))(rank:29.)
rewrite IH1 in goal at 1(rank:21.)
=================================================
Progress: 385


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 386


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
case reprNew (tree2)(rank:29.)
case tf1 (repr (tree2))(rank:29.)
=================================================
Progress: 387


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:5.)
rewrite IH1 in goal at 2(rank:20.)
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
rewrite IH1 in goal at 0(rank:20.)
rewrite IH1 in goal at 1(rank:20.)
=================================================
Progress: 388


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH2 in goal at 0(rank:21.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 389


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 390


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 391


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 392


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 393


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 394


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 395


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 396


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:7.)
case tf1 (repr (tree3))(rank:7.)
=================================================
Progress: 397


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
bool1 : bool
bool2 : bool
Case5 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite IH2 in goal at 1
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
asdf
=================================================
Progress: 398


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (nat3) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 399


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (nat3) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (nat3) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite IH2 in goal at 1
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite IH2 in goal at 1
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 400


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:5.)
rewrite IH2 in goal at 2(rank:20.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:5.)
rewrite IH2 in goal at 1(rank:12.)
rewrite IH2 in goal at 0(rank:20.)
=================================================
Progress: 401


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 402


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 403


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
case reprNew (tree2)(rank:30.)
case reprNew (tree3)(rank:30.)
=================================================
Progress: 404


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 405


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 406


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:5.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:5.)
rewrite IH1 in goal at 0(rank:20.)
rewrite IH1 in goal at 2(rank:20.)
=================================================
Progress: 407


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
=================================================
Progress: 408


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 409


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
case reprNew (tree3)(rank:30.)
case tf1 (repr (tree2))(rank:30.)
=================================================
Progress: 410


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 411


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 412


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:5.)
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:5.)
=================================================
Progress: 413


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:6.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
=================================================
Progress: 414


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
=================================================
Progress: 415


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 1(rank:22.)
rewrite IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
=================================================
Progress: 416


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 1(rank:22.)
rewrite IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
=================================================
Progress: 417


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 418


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 419


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 420


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 421


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:5.)
=================================================
Progress: 422


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
=================================================
Progress: 423


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 424


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 425


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 426


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 427


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 428


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 429


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 430


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:5.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:5.)
=================================================
Progress: 431


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 2(rank:13.)
=================================================
Progress: 432


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 433


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
case reprNew (tree3)(rank:30.)
case tf1 (repr (tree2))(rank:30.)
=================================================
Progress: 434


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 435


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 436


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:5.)
=================================================
Progress: 437


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH2 in goal at 2(rank:13.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
=================================================
Progress: 438


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 439


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 440


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 441


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 442


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 443


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 444


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 445


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:5.)
=================================================
Progress: 446


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
=================================================
Progress: 447


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 448


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 1(rank:22.)
rewrite IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
=================================================
Progress: 449


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 450


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 451


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 452


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 453


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 454


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:5.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:5.)
=================================================
Progress: 455


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 456


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 457


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
case reprNew (tree2)(rank:30.)
case reprNew (tree3)(rank:30.)
=================================================
Progress: 458


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 459


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 460


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:5.)
=================================================
Progress: 461


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
=================================================
Progress: 462


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 463


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 2(rank:14.)
=================================================
Progress: 464


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 465


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 466


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 467


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 468


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 469


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:5.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:5.)
=================================================
Progress: 470


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 471


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 472


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
case reprNew (tree2)(rank:30.)
case reprNew (tree3)(rank:30.)
=================================================
Progress: 473


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 474


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 475


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:5.)
=================================================
Progress: 476


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH2 in goal at 0(rank:21.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 477


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 478


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 479


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 480


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 481


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 482


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 483


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 484


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
=================================================
Progress: 485


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite IH1 in goal at 0(rank:21.)
=================================================
Progress: 486


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:14.)
case reprNew (tree2)(rank:30.)
case tf1 (repr (tree2))(rank:30.)
=================================================
Progress: 487


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:5.)
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:5.)
=================================================
Progress: 488


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:6.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 489


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH2 in goal at 0(rank:21.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 490


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 491


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 492


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 493


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 494


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 495


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 496


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:5.)
case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank:5.)
=================================================
Progress: 497


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 498


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
=================================================
Progress: 499


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 500


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
case tf1 (repr (tree2))(rank:30.)
rewrite IH1 in goal at 1(rank:22.)
=================================================
Progress: 501


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 502


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:7.)
case tf1 (repr (tree3))(rank:7.)
=================================================
Progress: 503


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
bool1 : bool
bool2 : bool
Case5 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite IH2 in goal at 1
rewrite <- IH1 in goal at 0
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
Prop: match (tf1 (repr (Node (ZERO) (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (SUCC (SUCC (SUCC (ZERO))))))) (Leaf (SUCC (ZERO))))) (Leaf (SUCC (SUCC (ZERO)))))) (Node (ZERO) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 504


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (nat3) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 505


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (nat3) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (nat3) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite IH2 in goal at 1
rewrite <- IH1 in goal at 0
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (reprNew (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite IH2 in goal at 1
rewrite <- IH1 in goal at 0
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 506


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
=================================================
Progress: 507


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
=================================================
Progress: 508


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
case reprNew (tree2)(rank:30.)
=================================================
Progress: 509


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:5.)
=================================================
Progress: 510


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
case tf1 (repr (tree2))(rank:29.)
=================================================
Progress: 511


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:5.)
=================================================
Progress: 512


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH2 in goal at 0(rank:21.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 513


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 514


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 515


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 516


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 517


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 518


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 519


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 520


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:5.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:5.)
=================================================
Progress: 521


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 522


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 523


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
case reprNew (tree2)(rank:30.)
case reprNew (tree3)(rank:30.)
=================================================
Progress: 524


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 525


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 526


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false(rank:5.)
=================================================
Progress: 527


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
case tf1 (repr (tree2))(rank:29.)
rewrite IH1 in goal at 2(rank:21.)
=================================================
Progress: 528


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:5.)
=================================================
Progress: 529


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 530


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
case reprNew (tree2)(rank:30.)
case reprNew (tree3)(rank:30.)
=================================================
Progress: 531


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:5.)
=================================================
Progress: 532


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case2 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
case tf1 (repr (tree2))(rank:29.)
=================================================
Progress: 533


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
=================================================
Progress: 534


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite IH1 in goal at 0(rank:21.)
=================================================
Progress: 535


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:14.)
case reprNew (tree2)(rank:30.)
case tf1 (repr (tree2))(rank:30.)
=================================================
Progress: 536


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:5.)
=================================================
Progress: 537


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 538


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
case reprNew (tree2)(rank:30.)
case reprNew (tree3)(rank:30.)
=================================================
Progress: 539


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false(rank:5.)
=================================================
Progress: 540


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
case reprNew (tree2)(rank:29.)
case tf1 (repr (tree2))(rank:29.)
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 541


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:5.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:5.)
=================================================
Progress: 542


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 543


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 544


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 545


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 546


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 547


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 548


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 549


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case3 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 550


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:6.)
=================================================
Progress: 551


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 552


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 553


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:6.)
=================================================
Progress: 554


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:14.)
=================================================
Progress: 555


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 556


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false(rank:6.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 557


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:14.)
case tf1 (repr (tree2))(rank:30.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 1(rank:22.)
=================================================
Progress: 558


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank:6.)
=================================================
Progress: 559


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
case reprNew (tree2)(rank:30.)
case tf1 (repr (tree2))(rank:30.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 560


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
=================================================
Progress: 561


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 562


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 563


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree3))(rank:31.)
=================================================
Progress: 564


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 565


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:6.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
=================================================
Progress: 566


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 567


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 568


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 569


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 570


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:7.)
case tf1 (repr (tree3))(rank:7.)
=================================================
Progress: 571


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : if bool1 then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
bool1 : bool
bool2 : bool
Case5 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
rewrite IH2 in goal at 0
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
asdf
=================================================
Progress: 572


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 573


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
rewrite IH2 in goal at 0
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
rewrite IH2 in goal at 0
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 574


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
=================================================
Progress: 575


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 576


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 577


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 578


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 579


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
=================================================
Progress: 580


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:22.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 581


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 582


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 583


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 584


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:6.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
=================================================
Progress: 585


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 586


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 587


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree3))(rank:31.)
=================================================
Progress: 588


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 589


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:6.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
=================================================
Progress: 590


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 591


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 592


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 593


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 594


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:7.)
case tf1 (repr (tree3))(rank:7.)
=================================================
Progress: 595


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : if bool1 then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
bool1 : bool
bool2 : bool
Case5 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite IH2 in goal at 0
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (SUCC (ZERO))) (false)
Prop: match (tf1 (repr (Leaf (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
Prop: match (tf1 (repr (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 596


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 597


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite IH2 in goal at 0
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (ZERO)))) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite IH2 in goal at 0
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 598


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
=================================================
Progress: 599


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 600


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 601


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 602


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 603


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
=================================================
Progress: 604


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:22.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 605


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 606


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 607


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 608


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:6.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 609


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:14.)
case reprNew (tree2)(rank:30.)
case reprNew (tree3)(rank:30.)
=================================================
Progress: 610


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:6.)
=================================================
Progress: 611


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:6.)
case tf1 (repr (tree2))(rank:6.)
=================================================
Progress: 612


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : if bool1 then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case3 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
bool1 : bool
bool2 : bool
Case4 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (Tuple2 (bool1) (bool2)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (bool2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:14.)
rewrite <- Case4 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
case tf1 (repr (tree2))(rank:30.)
=================================================
Progress: 613


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : nat3 = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : if lq (nat2) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
nat2 : nat
nat3 : nat
Case4 : tf1 (repr (tree2)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (nat3) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
case reprNew (tree3)(rank:30.)
=================================================
Progress: 614


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:6.)
rewrite <- IH1 in goal at 2(rank:21.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 615


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 616


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 617


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 618


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 619


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:7.)
case tf1 (repr (tree3))(rank:7.)
=================================================
Progress: 620


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case4 : if bool1 then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
bool1 : bool
bool2 : bool
Case5 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite IH2 in goal at 0
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
asdf
=================================================
Progress: 621


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 622


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite IH2 in goal at 0
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite IH2 in goal at 0
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (SUCC (SUCC (ZERO))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: SUCC (ZERO) = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 623


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH1 in goal at 2(rank:21.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 624


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 2(rank:14.)
=================================================
Progress: 625


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 626


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 627


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 628


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 629


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
case reprNew (tree2)(rank:30.)
case reprNew (tree3)(rank:30.)
=================================================
Progress: 630


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 631


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
case reprNew (tree2)(rank:30.)
case reprNew (tree3)(rank:30.)
=================================================
Progress: 632


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:6.)
rewrite <- IH2 in goal at 2(rank:13.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
=================================================
Progress: 633


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 634


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 635


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 636


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 637


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:7.)
case tf1 (repr (tree3))(rank:7.)
=================================================
Progress: 638


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case4 : if bool1 then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
bool1 : bool
bool2 : bool
Case5 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite IH1 in goal at 0
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Node (SUCC (ZERO)) (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf (ZERO)) (Node (ZERO) (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) (Leaf (ZERO))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
Prop: match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (SUCC (SUCC (ZERO))) (true)
asdf
=================================================
Progress: 639


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 640


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (nat2) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite IH1 in goal at 0
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH2 in goal at 0
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite IH1 in goal at 0
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (SUCC (SUCC (ZERO))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 641


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite <- IH2 in goal at 2(rank:13.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
=================================================
Progress: 642


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 2(rank:14.)
=================================================
Progress: 643


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 644


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 645


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 646


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
=================================================
Progress: 647


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:22.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 648


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 649


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 650


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 651


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:6.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
=================================================
Progress: 652


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 653


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 654


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 655


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 656


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:7.)
case tf1 (repr (tree3))(rank:7.)
=================================================
Progress: 657


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
bool1 : bool
bool2 : bool
Case5 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite <- IH2 in goal at 2
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (false)
Prop: match (tf1 (repr (Node (ZERO) (Leaf (SUCC (ZERO))) (Node (ZERO) (Leaf (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 658


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (nat3) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 659


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (nat3) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (nat3) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite <- IH2 in goal at 2
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (false)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (ZERO))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = lq (SUCC (ZERO)) (match (reprNew (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite IH2 in goal at 0
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
rewrite <- IH2 in goal at 2
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (SUCC (SUCC (ZERO))) (match (reprNew (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 660


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank:6.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 661


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
if if if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

2 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case2 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
Case3 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH2 in goal at 0(rank:22.)
case reprNew (tree2)(rank:30.)
case reprNew (tree3)(rank:30.)
=================================================
Progress: 662


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
=================================================
Progress: 663


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
case reprNew (tree2)(rank:30.)
case reprNew (tree3)(rank:30.)
=================================================
Progress: 664


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 665


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
case reprNew (tree3)(rank:30.)
case tf1 (repr (tree2))(rank:30.)
=================================================
Progress: 666


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 667


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) then lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) else false = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
case reprNew (tree3)(rank:30.)
case tf1 (repr (tree2))(rank:30.)
=================================================
Progress: 668


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:6.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 669


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 670


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
case reprNew (tree2)(rank:31.)
case reprNew (tree3)(rank:31.)
=================================================
Progress: 671


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:6.)
rewrite IH1 in goal at 2(rank:21.)
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
=================================================
Progress: 672


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 673


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 674


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 675


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 676


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (tree3)(rank:7.)
case tf1 (repr (tree3))(rank:7.)
=================================================
Progress: 677


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (tree3)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = bool1
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : if bool1 then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
bool1 : bool
bool2 : bool
Case5 : reprNew (tree3) = Tuple2 (bool1) (bool2)
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (bool2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
rewrite IH2 in goal at 0
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false
rewrite <- IH2 in goal at 0
case reprNew (tree3)
validate generalize_common_subterm_goal
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (SUCC (ZERO)) (true)
Prop: match (tf1 (repr (Leaf (ZERO)))) with
| Tuple2 _ b -> b = lq (ZERO) (true)
Prop: match (tf1 (repr (Node (SUCC (ZERO)) (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = lq (ZERO) (false)
asdf
=================================================
Progress: 678


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> case tf1 (repr (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 679


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
nat3 = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : nat3 = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : if lq (nat1) (nat2) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
nat2 : nat
nat3 : nat
Case5 : tf1 (repr (tree3)) = Tuple2 (nat2) (nat3)
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
rewrite IH2 in goal at 0
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
rewrite IH2 in goal at 0
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (Tuple2 (false) (false)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (false) (false)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (Tuple2 (true) (true)) with
| Tuple2 a _ -> a = lq (ZERO) (match (Tuple2 (true) (true)) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (SUCC (SUCC (SUCC (ZERO)))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (reprNew (Leaf (ZERO))) with
| Tuple2 a _ -> a = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1)
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)
rewrite IH2 in goal at 0
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false
rewrite <- IH2 in goal at 0
case tf1 (repr (tree3))
validate generalize_common_subterm_goal
Prop: ZERO = lq (SUCC (SUCC (ZERO))) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: ZERO = lq (ZERO) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Prop: SUCC (SUCC (ZERO)) = lq (SUCC (ZERO)) (match (reprNew (Leaf (ZERO))) with
| Tuple2 _ b -> b)
asdf
=================================================
Progress: 680


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:6.)
rewrite IH1 in goal at 2(rank:21.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:6.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
=================================================
Progress: 681


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 1(rank:22.)
rewrite IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
=================================================
Progress: 682


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 683


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case4 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 684


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b
| false -> false = true
Case4 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 685


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:6.)
=================================================
Progress: 686


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
>>> case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:14.)
case tf1 (repr (tree2))(rank:30.)
case tf1 (repr (tree3))(rank:30.)
=================================================
Progress: 687


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank:6.)
rewrite IH1 in goal at 2(rank:21.)
=================================================
Progress: 688


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

2 goal(s) more...

0 conjecture(s) more...
>>> case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false = true
Case2 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (reprNew (tree3)) with
| Tuple2 a _ -> a = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:14.)
case reprNew (tree3)(rank:30.)
case tf1 (repr (tree2))(rank:30.)
=================================================
Progress: 689


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 690


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (reprNew (tree3)) with
| Tuple2 a _ -> a else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:14.)
=================================================
Progress: 691


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
>>> case match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case4 : match (match (reprNew (tree3)) with
| Tuple2 a _ -> a) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case reprNew (tree3)(rank:31.)
case tf1 (repr (tree2))(rank:31.)
=================================================
Progress: 692


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank:6.)
=================================================
Progress: 693


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree3)) with
| Tuple2 a _ -> a
| false -> false = match (match (reprNew (tree2)) with
| Tuple2 a _ -> a) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
case reprNew (tree2)(rank:30.)
case tf1 (repr (tree2))(rank:30.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 694


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank:6.)
rewrite IH2 in goal at 2(rank:21.)
=================================================
Progress: 695


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = if if if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) = true
Case3 : if lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = true
---------------------------------------
match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b
| false -> false = match (match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b) with
| true -> lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b)
| false -> false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:14.)
case tf1 (repr (tree2))(rank:30.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 1(rank:22.)
=================================================
Progress: 696


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank:6.)
rewrite IH2 in goal at 2(rank:21.)
case match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false(rank:6.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 697


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
if if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false then match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b else false = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

2 goal(s) more...

0 conjecture(s) more...
>>> case if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : match (tf1 (repr (tree2))) with
| Tuple2 _ b -> b = match (reprNew (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = match (reprNew (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (tf1 (repr (tree2))) with
| Tuple2 a _ -> a) (nat1) = true
Case2 : lq (match (reprNew (tree2)) with
| Tuple2 _ b -> b) (nat1) = true
Case3 : if lq (nat1) (match (tf1 (repr (tree3))) with
| Tuple2 a _ -> a) then match (reprNew (tree2)) with
| Tuple2 a _ -> a else false = true
---------------------------------------
match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b = if match (match (tf1 (repr (tree3))) with
| Tuple2 _ b -> b) with
| true -> match (reprNew (tree2)) with
| Tuple2 a _ -> a
| false -> false then lq (nat1) (match (reprNew (tree3)) with
| Tuple2 _ b -> b) else false

3 goal(s) more...

0 conjecture(s) more...
